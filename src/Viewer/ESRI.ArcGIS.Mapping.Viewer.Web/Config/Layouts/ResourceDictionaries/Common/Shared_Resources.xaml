<!--
(c) Copyright ESRI.
This source is subject to the Microsoft Public License (Ms-PL).
Please see http://go.microsoft.com/fwlink/?LinkID=131993 for details.
All other rights reserved.
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:esri="http://schemas.esri.com/arcgis/client/2009"
    xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
    mc:Ignorable="d"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ctlPrimitives="clr-namespace:System.Windows.Controls.Primitives;assembly=System.Windows.Controls"
    xmlns:controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:esriControls="clr-namespace:ESRI.ArcGIS.Client.Application.Controls;assembly=ESRI.ArcGIS.Client.Application.Controls"
    xmlns:primitives="clr-namespace:System.Windows.Controls.Primitives;assembly=System.Windows.Controls.Data"
    xmlns:data="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Data"
    xmlns:dataInput="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Data.Input"
    xmlns:extensibility="http://schemas.esri.com/arcgis/client/extensibility/2010">

    <extensibility:RTLHelper x:Key="RTLHelper" />
    <extensibility:VisibilityToIntConverter x:Key="VisibilityToIntConverter" />
    <extensibility:ImageUrlResolver x:Key="ImageUrlResolver"/>
    <extensibility:LocalizationConverter x:Key="LayoutLocalization"/>
    <!--<extensibility:MapApplicationBindingSource x:Key="MapApplication" />-->

    <!-- Primary Styles --> 
    <Color x:Key="ButtonPushedBackgroundDarkColor">#FF2D2D2D</Color>
    <Color x:Key="ButtonPushedBackgroundLightColor">#FFB4B4B4</Color>

    <SolidColorBrush x:Key="ButtonHotOuterBorderBrush" Color="#99FFFFFF" />
    <SolidColorBrush x:Key="ButtonHotOuterBackgroundBrush" Color="#22FFFFFF" />

    <SolidColorBrush x:Key="HelpLinksBrush" Color="{StaticResource AccentTextColor}" />

    <LinearGradientBrush x:Key="ButtonPushedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0.75">
        <GradientStop Color="{StaticResource ButtonPushedBackgroundDarkColor}" Offset="1"/>
        <GradientStop Color="{StaticResource ButtonPushedBackgroundLightColor}"/>
    </LinearGradientBrush>

    <Color x:Key="DarkGradientBackgroundLightColor">#ee76a8d3</Color>
    <Color x:Key="DarkGradientBackgroundDarkColor">#ee4b7ba7</Color>
    <Color x:Key="DarkGradientBackgroundMediumColor">#ee5b8cb5</Color>

    <SolidColorBrush x:Key="DarkGradientBackgroundDarkBrush" Color="{StaticResource DarkGradientBackgroundDarkColor}" />

    <LinearGradientBrush x:Key="DarkGradientBackgroundBrush"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <LinearGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterX="0.5"
                          CenterY="0.5"
                          ScaleX="-1"
                          ScaleY="1" />
                <SkewTransform AngleX="0"
                         AngleY="0"
                         CenterX="0.5"
                         CenterY="0.5" />
                <RotateTransform CenterX="0.5"
                           CenterY="0.5" />
                <TranslateTransform />
            </TransformGroup>
        </LinearGradientBrush.RelativeTransform>
        <GradientStop Color="{StaticResource DarkGradientBackgroundLightColor}" />
        <GradientStop Color="{StaticResource DarkGradientBackgroundDarkColor}" Offset="1" />
        <GradientStop Color="{StaticResource DarkGradientBackgroundMediumColor}" Offset="0.548"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DarkBorderBrush" Color="#FF292727" />

    <Color x:Key="ButtonPressedForegroundColor">White</Color>
    <SolidColorBrush x:Key="ButtonPressedForegroundBrush" Color="{StaticResource ButtonPressedForegroundColor}" />

    <LinearGradientBrush x:Key="ButtonHoverGlowBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#00CACACA" Offset="0"/>
        <GradientStop Color="#B2CACACA" Offset="1"/>
    </LinearGradientBrush>

    <Color x:Key="DarkButtonBackgroundDarkColor">#FF8F8F8F</Color>
    <LinearGradientBrush x:Key="DarkButtonBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource DarkButtonBackgroundDarkColor}" Offset="1"/>
        <GradientStop Color="{StaticResource ButtonPushedBackgroundLightColor}"/>
    </LinearGradientBrush>

    <Style x:Key="GlassyBorder"
           TargetType="Border">
        <Setter Property="Background"
              Value="{StaticResource AccentColorBrush}" />
        <Setter Property="BorderBrush"
              Value="{StaticResource AccentColorBrush}" />
        <Setter Property="BorderThickness"
              Value="1,1,1,1" />
        <Setter Property="CornerRadius"
              Value="3" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black"
                            Direction="-45"
                            BlurRadius="20"
                            Opacity=".75">
                </DropShadowEffect>
            </Setter.Value>
        </Setter>
    </Style>

    <DropShadowEffect x:Key="CommonDropShadow" BlurRadius="5" Direction="-45" Color="Black" ShadowDepth="5" Opacity="0.75" />
    <DropShadowEffect x:Key="SlightDropShadow" BlurRadius="2" Direction="-45" Color="Black" ShadowDepth="2" Opacity="0.65" />

    <!-- MenuContainer Style is the style applied to the menu dropdowns -->
    <Style x:Key="MenuContainerStyle" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border HorizontalAlignment="Stretch" Height="Auto"
                                Background="{StaticResource BackgroundGradientBrush}">
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Defines the style used by a button that is contained within a menu button. Typically this would contain
            an arrow to indicate that the button has dropdown content -->
    <Style x:Key="MenuButtonStyle" TargetType="Button">
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid ToolTipService.Placement="Bottom">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundDarkColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundLightColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ToolTipService.ToolTip>
                            <StackPanel Orientation="Vertical" Margin="3">
                                <TextBlock Text="{Binding Label}" FontWeight="Bold" Margin="0,0,0,3" />
                                <TextBlock Text="{Binding Description}" />
                            </StackPanel>
                        </ToolTipService.ToolTip>

                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />

                        <Border x:Name="darkborder" Visibility="Collapsed" BorderBrush="{StaticResource DarkBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="2" Background="{StaticResource DarkButtonBackgroundBrush}">
                            <Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="2" Background="{StaticResource ButtonHoverGlowBrush}" />
                        </Border>

                        <Grid>
                            <Border x:Name="HoverBorder" Background="{StaticResource ButtonHotOuterBackgroundBrush}" BorderBrush="{StaticResource ButtonHotOuterBorderBrush}" Visibility="Collapsed" CornerRadius="1.5" BorderThickness="1" />
                            <Border x:Name="PressedBorder" Background="{StaticResource ButtonPushedBackgroundBrush}" Visibility="Collapsed" CornerRadius="1.5"  BorderBrush="{StaticResource ButtonHotOuterBorderBrush}" BorderThickness="1" />
                        </Grid>

                        <Grid Margin="3">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Image Source="{Binding Icon, Converter={StaticResource ImageUrlResolver}}" Cursor="Hand" Effect="{StaticResource SlightDropShadow}" Height="16" Stretch="Uniform" />
                                <Grid x:Name="SplitElement" Grid.Row="1" HorizontalAlignment="Center" Background="Transparent" Margin="3 1 3 0" Width="8" >
                                    <Path Data="M 0,0 L 8,0 L 4,4 Z" Fill="{StaticResource AccentTextColorBrush}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Defines the style used by a togglebutton that is placed directly on the toolbar.
            ToggleButtons correspond to implemenations of ISupportsConfiguration -->
    <Style x:Key="ToolButtonStyle" TargetType="Button">
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid ToolTipService.Placement="Bottom">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundDarkColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundLightColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="ToolButtonIcon"
                                                         Storyboard.TargetProperty="Opacity" From="1.0" To="0.3" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ToolTipService.ToolTip >
                            <StackPanel Orientation="Vertical" Margin="3">
                                <TextBlock Text="{Binding Label}" FontWeight="Bold" Margin="0,0,0,3" />
                                <TextBlock Text="{Binding Description}" />
                            </StackPanel>
                        </ToolTipService.ToolTip>

                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />

                        <Border x:Name="darkborder" Visibility="Collapsed" BorderBrush="{StaticResource DarkBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="2" Background="{StaticResource DarkButtonBackgroundBrush}">
                            <Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="2" Background="{StaticResource ButtonHoverGlowBrush}" />
                        </Border>

                        <Grid>
                            <Border x:Name="HoverBorder" Background="{StaticResource ButtonHotOuterBackgroundBrush}" BorderBrush="{StaticResource ButtonHotOuterBorderBrush}" Visibility="Collapsed" CornerRadius="1.5" BorderThickness="1" />
                            <Border x:Name="PressedBorder" Background="{StaticResource ButtonPushedBackgroundBrush}" Visibility="Collapsed" CornerRadius="1.5"  BorderBrush="{StaticResource ButtonHotOuterBorderBrush}" BorderThickness="1" />
                        </Grid>

                        <Grid Margin="3">
                            <Image x:Name="ToolButtonIcon" Source="{Binding Icon, Converter={StaticResource ImageUrlResolver}}" Height="16" Stretch="Uniform" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Defines the style used by a togglebutton that is placed directly on the toolbar.
            ToggleButtons correspond to commands that implement ISupportsConfiguration -->
    <Style x:Key="ToolToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid ToolTipService.Placement="Bottom">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundDarkColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundLightColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="ToolButtonIcon"
                                                         Storyboard.TargetProperty="Opacity" From="1.0" To="0.3" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="CheckedBorder"
                                                         Storyboard.TargetProperty="Opacity" From="1.0" To="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckedStates">
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ToolTipService.ToolTip >
                            <StackPanel Orientation="Vertical" Margin="3">
                                <TextBlock Text="{Binding Label}" FontWeight="Bold" Margin="0,0,0,3" />
                                <TextBlock Text="{Binding Description}" />
                            </StackPanel>
                        </ToolTipService.ToolTip>

                        <Border x:Name="CheckedBorder" Visibility="Collapsed" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{StaticResource ButtonPushedBackgroundBrush}"
                                    BorderBrush="{StaticResource ButtonHotOuterBorderBrush}"/>

                        <Border x:Name="darkborder" Visibility="Collapsed" BorderBrush="{StaticResource DarkBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="2" Background="{StaticResource DarkButtonBackgroundBrush}">
                            <Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="2" Background="{StaticResource ButtonHoverGlowBrush}" />
                        </Border>

                        <Grid>
                            <Border x:Name="HoverBorder" Background="{StaticResource ButtonHotOuterBackgroundBrush}" BorderBrush="{StaticResource ButtonHotOuterBorderBrush}" Visibility="Collapsed" CornerRadius="1.5" BorderThickness="1" />
                            <Border x:Name="PressedBorder" Background="{StaticResource ButtonPushedBackgroundBrush}" Visibility="Collapsed" CornerRadius="1.5"  BorderBrush="{StaticResource ButtonHotOuterBorderBrush}" BorderThickness="1" />
                        </Grid>

                        <Grid Margin="3">
                            <Image x:Name="ToolButtonIcon" Source="{Binding Icon, Converter={StaticResource ImageUrlResolver}}" Height="16" Stretch="Uniform" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Defines the style used by a button that is contained within a popup menu button. Typically this would contain
            an arrow to indicate that the button has dropdown content -->
    <Style x:Key="PopupMenuButtonStyle" TargetType="Button">
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="root" ToolTipService.Placement="Bottom">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundDarkColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundLightColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="root" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ToolTipService.ToolTip>
                            <StackPanel Orientation="Vertical" Margin="3">
                                <TextBlock Text="{Binding Label}" FontWeight="Bold" Margin="0,0,0,3" />
                                <TextBlock Text="{Binding Description}" />
                            </StackPanel>
                        </ToolTipService.ToolTip>

                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />

                        <Border x:Name="darkborder" Visibility="Collapsed" BorderBrush="{StaticResource DarkBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="2" Background="{StaticResource DarkButtonBackgroundBrush}">
                            <Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="2" Background="{StaticResource ButtonHoverGlowBrush}" />
                        </Border>

                        <Grid>
                            <Border x:Name="HoverBorder" Background="{StaticResource SelectionColorBrush}" BorderBrush="{StaticResource AccentTextColorBrush}" Visibility="Collapsed" CornerRadius="1.5" BorderThickness="1" Opacity="0.5" />
                            <Border x:Name="PressedBorder" Background="{StaticResource SelectionColorBrush}" Visibility="Collapsed" CornerRadius="1.5"  BorderBrush="{StaticResource ButtonHotOuterBorderBrush}" BorderThickness="1" />
                        </Grid>

                        <Grid Margin="3">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Image Source="{Binding Icon, Converter={StaticResource ImageUrlResolver}}" Cursor="Hand" Effect="{StaticResource SlightDropShadow}" Height="16" Stretch="Uniform" />
                                <Grid x:Name="SplitElement" Grid.Row="1" HorizontalAlignment="Center" Background="Transparent" Margin="3 1 3 0" Width="8" >
                                    <Path Data="M 0,0 L 8,0 L 4,4 Z" Fill="{StaticResource AccentTextColorBrush}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Defines the style used by a togglebutton that is placed directly on the popup toolbar.
            ToggleButtons correspond to implemenations of ISupportsConfiguration -->
    <Style x:Key="PopupToolButtonStyle" TargetType="Button">
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="root" ToolTipService.Placement="Bottom">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundDarkColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundLightColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="root" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ToolTipService.ToolTip >
                            <StackPanel Orientation="Vertical" Margin="3">
                                <TextBlock Text="{Binding Label}" FontWeight="Bold" Margin="0,0,0,3" />
                                <TextBlock Text="{Binding Description}" />
                            </StackPanel>
                        </ToolTipService.ToolTip>

                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />

                        <Border x:Name="darkborder" Visibility="Collapsed" BorderBrush="{StaticResource DarkBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="2" Background="{StaticResource DarkButtonBackgroundBrush}">
                            <Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="2" Background="{StaticResource ButtonHoverGlowBrush}" />
                        </Border>

                        <Grid>
                            <Border x:Name="HoverBorder" Background="{StaticResource SelectionColorBrush}" BorderBrush="{StaticResource AccentTextColorBrush}" Visibility="Collapsed" CornerRadius="1.5" BorderThickness="1" Opacity="0.5" />
                            <Border x:Name="PressedBorder" Background="{StaticResource SelectionColorBrush}" Visibility="Collapsed" CornerRadius="1.5"  BorderBrush="{StaticResource ButtonHotOuterBorderBrush}" BorderThickness="1" />
                        </Grid>

                        <Grid Margin="3">
                            <Image x:Name="ToolButtonIcon" Source="{Binding Icon, Converter={StaticResource ImageUrlResolver}}" Height="16" Stretch="Uniform" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Defines the style used by a togglebutton that is placed directly on the popup toolbar.
            ToggleButtons correspond to commands that implement ISupportsConfiguration -->
    <Style x:Key="PopupToolToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="root" ToolTipService.Placement="Bottom">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundDarkColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundLightColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="root" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckedStates">
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ToolTipService.ToolTip >
                            <StackPanel Orientation="Vertical" Margin="3">
                                <TextBlock Text="{Binding Label}" FontWeight="Bold" Margin="0,0,0,3" />
                                <TextBlock Text="{Binding Description}" />
                            </StackPanel>
                        </ToolTipService.ToolTip>

                        <Border x:Name="CheckedBorder" Visibility="Collapsed" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{StaticResource ButtonPushedBackgroundBrush}"
                                    BorderBrush="{StaticResource ButtonHotOuterBorderBrush}"/>

                        <Border x:Name="darkborder" Visibility="Collapsed" BorderBrush="{StaticResource DarkBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="2" Background="{StaticResource DarkButtonBackgroundBrush}">
                            <Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="2" Background="{StaticResource ButtonHoverGlowBrush}" />
                        </Border>

                        <Grid>
                            <Border x:Name="HoverBorder" Background="{StaticResource SelectionColorBrush}" BorderBrush="{StaticResource AccentTextColorBrush}" Visibility="Collapsed" CornerRadius="1.5" BorderThickness="1" Opacity="0.5" />
                            <Border x:Name="PressedBorder" Background="{StaticResource SelectionColorBrush}" Visibility="Collapsed" CornerRadius="1.5"  BorderBrush="{StaticResource ButtonHotOuterBorderBrush}" BorderThickness="1" />
                        </Grid>

                        <Grid Margin="3">
                            <Image x:Name="ToolButtonIcon" Source="{Binding Icon, Converter={StaticResource ImageUrlResolver}}" Height="16" Stretch="Uniform" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    
    <!-- Corresponds the style assigned to a button that is placed within a menu. -->
    <Style x:Key="MenuItemStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" >
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IconAndTextGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid>
                            <Border x:Name="HoverBorder" Background="{StaticResource AccentColorBrush}" BorderBrush="{StaticResource BackgroundTextColorBrush}" Visibility="Collapsed" BorderThickness="1" Opacity="0.2" />
                            <Border x:Name="PressedBorder" Background="{StaticResource BackgroundTextColorBrush}" Visibility="Collapsed" BorderBrush="{StaticResource AccentColorBrush}" BorderThickness="1" Opacity="0.2" />
                        </Grid>

                        <Grid x:Name="IconAndTextGrid" Margin="3" Opacity="1">
                            <StackPanel Margin="2" Cursor="Hand" Orientation="Horizontal">
                                <Image Source="{Binding Icon, Converter={StaticResource ImageUrlResolver}}" Margin="2" Height="16" Stretch="Uniform" />
                                <TextBlock Text="{Binding Label}" Foreground="{StaticResource BackgroundTextColorBrush}" VerticalAlignment="Center" />
                            </StackPanel>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Corresponds to the style assigned to a toggle button that is placed within a menu -->
    <Style x:Key="MenuItemToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" >
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IconAndTextGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckedStates">
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleCheckedImage" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleCheckedImage" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid>
                            <Border x:Name="HoverBorder" Background="{StaticResource AccentColorBrush}" BorderBrush="{StaticResource BackgroundTextColorBrush}" Visibility="Collapsed" BorderThickness="1" Opacity="0.2" />
                            <Border x:Name="PressedBorder" Background="{StaticResource BackgroundTextColorBrush}" Visibility="Collapsed" BorderBrush="{StaticResource AccentColorBrush}" BorderThickness="1" Opacity="0.2" />
                        </Grid>

                        <Grid x:Name="IconAndTextGrid" Margin="3" Opacity="1">
                            <StackPanel Margin="2" Cursor="Hand" Orientation="Horizontal">
                                <Image Source="{Binding Icon, Converter={StaticResource ImageUrlResolver}}" Margin="2" Height="16" Stretch="Uniform" VerticalAlignment="Center" />
                                <TextBlock Text="{Binding Label}" Foreground="{StaticResource BackgroundTextColorBrush}" VerticalAlignment="Center" />
                                <Grid VerticalAlignment="Center" Margin="5,0,0,0">
                                    <Rectangle Width="16" Height="16" Fill="#00FFFFFF" />
                                    <Image x:Name="ToggleCheckedImage" Source="/ESRI.ArcGIS.Mapping.Controls;component/images/toolbar/CheckMark_Green.png" Height="16" Stretch="Uniform" Visibility="Collapsed" />
                                </Grid>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Corresponds to the style assigned to the group element -->
    <Style x:Key="GroupContainerStyle" TargetType="sdk:HeaderedItemsControl">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="sdk:HeaderedItemsControl">
                    <Grid x:Name="Root">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <ItemsPresenter x:Name="Items" />
                        <TextBlock Text="{Binding Label}" VerticalAlignment="Bottom" HorizontalAlignment="Center" Grid.Row="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Corresponds to the style assigned to the separator elements placed on the toolbar -->
    <Style x:Key="ToolSeparatorStyle" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Rectangle Height="20" Fill="{StaticResource AccentTextColorBrush}" Width="2" Margin="2,0,2,0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Corresponds to the style assigned to separators placed within a menu -->
    <Style x:Key="MenuItemSeparatorStyle" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Rectangle Width="80" Fill="{StaticResource BackgroundTextColorBrush}" Height="2" Margin="0,2,0,2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Corresponds to the style assigned to layer configuration context menu -->
    <Style x:Key="LayerConfigContextMenuStyle" TargetType="toolkit:ContextMenu">
        <Setter Property="Background" Value="{StaticResource BackgroundGradientBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource BackgroundTextColorBrush}"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#FF959595" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="toolkit:ContextMenu">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2">
                        <Border.Effect>
                            <DropShadowEffect Color="LightGray" ShadowDepth="3" />
                        </Border.Effect>
                        <Grid>
                            <Rectangle RadiusX="2" RadiusY="2" Width="28" Margin="2" HorizontalAlignment="Left" />
                            <Rectangle Fill="{StaticResource SelectionColorBrush}" Width="1" Margin="30,2,0,2" HorizontalAlignment="Left" />
                            <ItemsPresenter Margin="{TemplateBinding Padding}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="CloseButtonOverlayBrush" EndPoint="0,1" StartPoint="0,0">
    	<GradientStop Color="White" Offset="0.009"/>
    	<GradientStop Color="#FFC6C6C6" Offset="0.402"/>
    	<GradientStop Color="#FFABABAB" Offset="0.459"/>
    	<GradientStop Color="#FF7C7C7C" Offset="0.598"/>
    	<GradientStop Color="#FFCECECE" Offset="0.885"/>
    	<GradientStop Color="White" Offset="0.943"/>
    </LinearGradientBrush>
    <Style x:Key="CloseButtonStyle" TargetType="Button">
    	<Setter Property="Background">
    		<Setter.Value>
    			<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
    				<GradientStop Color="#FFEEB3AC" Offset="0.009"/>
    				<GradientStop Color="#FFDA8578" Offset="0.402"/>
    				<GradientStop Color="#FFC64D38" Offset="0.459"/>
    				<GradientStop Color="#FFC84934" Offset="0.598"/>
    				<GradientStop Color="#FFD48671" Offset="0.885"/>
    				<GradientStop Color="#FFE8BBAE" Offset="0.943"/>
    			</LinearGradientBrush>
    		</Setter.Value>
    	</Setter>
    	<Setter Property="BorderBrush" Value="#FF5E5E5E"/>
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="Foreground" Value="White"/>
    	<Setter Property="Padding" Value="3"/>
    	<Setter Property="Width" Value="45"/>
    	<Setter Property="Height" Value="20"/>
    	<Setter Property="IsTabStop" Value="False"/>
    	<Setter Property="Cursor" Value="Hand" />
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="Button">
    				<Grid>
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" Margin="0" CornerRadius="0,0,0,4" Background="{StaticResource AccentColorBrush}" OpacityMask="#54000000"/>
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" Background="{StaticResource CloseButtonOverlayBrush}" Opacity="0.25" CornerRadius="0,0,0,4"/>
    					<Border
    						BorderBrush="{TemplateBinding BorderBrush}"
    						BorderThickness="{TemplateBinding BorderThickness}"
    						CornerRadius="0,0,0,4">
    						<Path
    							Fill="{TemplateBinding Foreground}"
    							Width="10"
    							Height="10"
    							Stretch="Fill"
    							Data="F1 M 6.742,3.852 L 9.110,1.559 L 8.910,0.500 L 6.838,0.500 L 4.902,2.435 L 2.967,0.500 L 0.895,0.500 L 0.694,1.559 L 3.062,3.852 L 0.527,6.351 L 0.689,7.600 L 2.967,7.600 L 4.897,5.575 L 6.854,7.600 L 9.115,7.600 L 9.277,6.351 L 6.742,3.852 Z" Stroke="{StaticResource AccentColorBrush}"/>
    					</Border>
    				</Grid>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
            <Style x:Key="WindowCloseButtonStyle" TargetType="Button">
            	<Setter Property="Background">
            		<Setter.Value>
            			<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
            				<GradientStop Color="#FFEEB3AC" Offset="0.009"/>
            				<GradientStop Color="#FFDA8578" Offset="0.402"/>
            				<GradientStop Color="#FFC64D38" Offset="0.459"/>
            				<GradientStop Color="#FFC84934" Offset="0.598"/>
            				<GradientStop Color="#FFD48671" Offset="0.885"/>
            				<GradientStop Color="#FFE8BBAE" Offset="0.943"/>
            			</LinearGradientBrush>
            		</Setter.Value>
            	</Setter>
            	<Setter Property="BorderBrush" Value="#FF5E5E5E"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="Foreground" Value="White"/>
            	<Setter Property="Padding" Value="3"/>
            	<Setter Property="Width" Value="45"/>
            	<Setter Property="Height" Value="20"/>
            	<Setter Property="IsTabStop" Value="False"/>
            	<Setter Property="Cursor" Value="Hand" />
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="Button">
            				<Grid>
            					<Border x:Name="Background" BorderThickness="0" Margin="0" CornerRadius="0,4,0,0" Background="{TemplateBinding Background}" OpacityMask="#54000000"/>
            					<Border x:Name="Overlay" BorderThickness="0" Background="{StaticResource CloseButtonOverlayBrush}" Opacity="0.25" CornerRadius="{Binding CornerRadius, ElementName=Background}"/>
            					<Border x:Name="Content"
            						BorderBrush="{TemplateBinding BorderBrush}"
            						BorderThickness="{TemplateBinding BorderThickness}"
            						CornerRadius="{Binding CornerRadius, ElementName=Background}">
            						<Path
            							Fill="{TemplateBinding Foreground}"
            							Width="10"
            							Height="10"
            							Stretch="Fill"
            							Data="F1 M 6.742,3.852 L 9.110,1.559 L 8.910,0.500 L 6.838,0.500 L 4.902,2.435 L 2.967,0.500 L 0.895,0.500 L 0.694,1.559 L 3.062,3.852 L 0.527,6.351 L 0.689,7.600 L 2.967,7.600 L 4.897,5.575 L 6.854,7.600 L 9.115,7.600 L 9.277,6.351 L 6.742,3.852 Z" Stroke="{TemplateBinding Background}" Margin="0"/>
            					</Border>
            				</Grid>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
			
            <Style x:Key="WindowMinimizeButtonStyle" TargetType="Button">
            	<Setter Property="Background">
            		<Setter.Value>
            			<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
            				<GradientStop Color="#FFEEB3AC" Offset="0.009"/>
            				<GradientStop Color="#FFDA8578" Offset="0.402"/>
            				<GradientStop Color="#FFC64D38" Offset="0.459"/>
            				<GradientStop Color="#FFC84934" Offset="0.598"/>
            				<GradientStop Color="#FFD48671" Offset="0.885"/>
            				<GradientStop Color="#FFE8BBAE" Offset="0.943"/>
            			</LinearGradientBrush>
            		</Setter.Value>
            	</Setter>
            	<Setter Property="BorderBrush" Value="#FF5E5E5E"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="Foreground" Value="White"/>
            	<Setter Property="Padding" Value="3"/>
            	<Setter Property="Width" Value="45"/>
            	<Setter Property="Height" Value="20"/>
            	<Setter Property="IsTabStop" Value="False"/>
            	<Setter Property="Cursor" Value="Hand" />
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="Button">
            				<Grid>
            					<Border BorderThickness="0" Margin="0" CornerRadius="0,0,0,5" Background="{TemplateBinding Background}" OpacityMask="#54000000"/>
            					<Border BorderThickness="0" Background="{StaticResource CloseButtonOverlayBrush}" Opacity="0.25" CornerRadius="0,0,0,5"/>
            					<Border
            						BorderBrush="{TemplateBinding BorderBrush}"
            						BorderThickness="{TemplateBinding BorderThickness}"
            						CornerRadius="0,0,0,5">
            						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Background="{TemplateBinding Foreground}" Width="12" Height="4" CornerRadius="1"/>
            					</Border>
            				</Grid>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>

    <Style x:Key="WindowRestoreButtonStyle" TargetType="Button">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#FFEEB3AC" Offset="0.009"/>
                    <GradientStop Color="#FFDA8578" Offset="0.402"/>
                    <GradientStop Color="#FFC64D38" Offset="0.459"/>
                    <GradientStop Color="#FFC84934" Offset="0.598"/>
                    <GradientStop Color="#FFD48671" Offset="0.885"/>
                    <GradientStop Color="#FFE8BBAE" Offset="0.943"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FF5E5E5E"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Width" Value="45"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border BorderThickness="0" Margin="0" CornerRadius="0,0,0,5" Background="{TemplateBinding Background}" OpacityMask="#54000000"/>
                        <Border BorderThickness="0" Background="{StaticResource CloseButtonOverlayBrush}" Opacity="0.25" CornerRadius="0,0,0,5"/>
                        <Border
            						BorderBrush="{TemplateBinding BorderBrush}"
            						BorderThickness="{TemplateBinding BorderThickness}"
            						CornerRadius="0,0,0,5">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="12" Height="10">
                                <Border BorderBrush="{TemplateBinding Foreground}" BorderThickness="2">
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"/>
                                </Border>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Corresponds to the style applied to all floating window dialogs invoked via MapApplication.Current.ShowWindow -->
    <Style x:Key="WindowStyle" TargetType="esriControls:FloatingWindow">
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="TabNavigation" Value="Cycle"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="OverlayBrush" Value="#7F000000" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="esriControls:FloatingWindow">
                    <Grid x:Name="Root" RenderTransformOrigin="0.5,0.5">
                        <Grid.Resources>
                            <Style x:Key="ButtonStyle" TargetType="Button">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="#FFEEB3AC" Offset="0.009"/>
                                            <GradientStop Color="#FFDA8578" Offset="0.402"/>
                                            <GradientStop Color="#FFC64D38" Offset="0.459"/>
                                            <GradientStop Color="#FFC84934" Offset="0.598"/>
                                            <GradientStop Color="#FFD48671" Offset="0.885"/>
                                            <GradientStop Color="#FFE8BBAE" Offset="0.943"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" Value="#FF5E5E5E"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Padding" Value="3"/>
                                <Setter Property="Width" Value="45"/>
                                <Setter Property="Height" Value="20"/>
                                <Setter Property="IsTabStop" Value="False"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="2">
                                                <Path
                                                    Fill="{TemplateBinding Foreground}"
                                                    Width="10"
                                                    Height="10"
                                                    Stretch="Fill"
                                                    Data="F1 M 6.742,3.852 L 9.110,1.559 L 8.910,0.500 L 6.838,0.500 L 4.902,2.435 L 2.967,0.500 L 0.895,0.500 L 0.694,1.559 L 3.062,3.852 L 0.527,6.351 L 0.689,7.600 L 2.967,7.600 L 4.897,5.575 L 6.854,7.600 L 9.115,7.600 L 9.277,6.351 L 6.742,3.852 Z">
                                                    <Path.Stroke>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#FF313131" Offset="1"/>
                                                            <GradientStop Color="#FF8E9092" Offset="0"/>
                                                        </LinearGradientBrush>
                                                    </Path.Stroke>
                                                </Path>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="WindowStates">
                                <VisualState x:Name="Open">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Overlay" Storyboard.TargetProperty="Opacity" 
                                                         Duration="0" BeginTime="0" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Opening">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Overlay" Storyboard.TargetProperty="Opacity">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.3" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentRoot">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <PowerEase EasingMode="EaseInOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RenderTransform).(Children)[0].ScaleX" Storyboard.TargetName="ContentRoot">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.8"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <PowerEase EasingMode="EaseInOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RenderTransform).(Children)[0].ScaleY" Storyboard.TargetName="ContentRoot">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.8"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <PowerEase EasingMode="EaseInOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Closing" >
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Overlay" Storyboard.TargetProperty="Opacity">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.3" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentRoot">
                                            <DoubleAnimation.EasingFunction>
                                                <QuarticEase EasingMode="EaseIn"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.3" To="0.8" Storyboard.TargetProperty="(RenderTransform).(Children)[0].ScaleX" Storyboard.TargetName="ContentRoot">
                                            <DoubleAnimation.EasingFunction>
                                                <QuarticEase EasingMode="EaseIn"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.3" To="0.8" Storyboard.TargetProperty="(RenderTransform).(Children)[0].ScaleY" Storyboard.TargetName="ContentRoot">
                                            <DoubleAnimation.EasingFunction>
                                                <QuarticEase EasingMode="EaseIn"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="Overlay" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="0" Background="{TemplateBinding OverlayBrush}" Opacity="0"/>
                        <Grid x:Name="ContentRoot" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" RenderTransformOrigin="0.5,0.5" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <Border BorderThickness="0">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>

                                    <Border x:Name="ChromeShadow" BorderThickness="0" CornerRadius="5,5,0,0" Margin="3,3,-3,-3" Background="#5F100F0F" d:IsHidden="True"/>
                                    <Border x:Name="BodyShadow" BorderThickness="0" CornerRadius="0,0,8,8" Margin="3,3,-3,-3" Background="#5F100F0F" d:IsHidden="True" Grid.Row="1"/>

                                    <Border x:Name="ChromeOuterBorder" BorderBrush="{StaticResource BackgroundStartGradientStopColorBrush}" BorderThickness="1" CornerRadius="5,5,0,0" Opacity="0.5"/>
                                    <Border x:Name="BodyOuterBorder" BorderBrush="{StaticResource BackgroundStartGradientStopColorBrush}" BorderThickness="1" CornerRadius="0,0,8,8" Opacity="0.5" Grid.Row="1"/>

                                    <Border x:Name="ChromeInnerBorder" BorderBrush="{StaticResource AccentColorBrush}" BorderThickness="1" CornerRadius="4.5,4.5,0,0" Margin="1,1,1,0" Opacity="0.5"/>
                                    <Border x:Name="BodyInnerBorder" BorderBrush="{StaticResource AccentColorBrush}" BorderThickness="1" CornerRadius="0,0,7.5,7.5" Margin="1,0,1,1" Opacity="0.5" Grid.Row="1"/>

                                    <Border x:Name="Chrome" Height="22" Margin="2,2,2,0" Width="Auto" CornerRadius="4,4,0,0" BorderBrush="{StaticResource AccentColorBrush}" BorderThickness="0,0,0,1" Background="{StaticResource BackgroundEndGradientStopColorBrush}">
                                        <Grid Height="Auto" Width="Auto" Cursor="Hand">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock 
                        						HorizontalAlignment="Stretch"
                        						VerticalAlignment="Center"                                                                    
                        						Foreground="{StaticResource BackgroundTextColorBrush}"
                        						Margin="6,0,6,0"
                        						FontSize="13" Text="{TemplateBinding Title}" TextTrimming="WordEllipsis" FontWeight="Bold"/>
                                            <StackPanel Grid.Column="1" Orientation="Horizontal" d:LayoutOverrides="Height" Margin="20,0,0,0">
                                                <Grid>
                                                    <Button x:Name="MinimizeButton" IsTabStop="False" HorizontalAlignment="Right" VerticalAlignment="Top" 
                        								Width="20" Height="16" Style="{StaticResource WindowMinimizeButtonStyle}" BorderThickness="1,0,0,1" Background="{StaticResource AccentColorBrush}" BorderBrush="{StaticResource AccentColorBrush}" Foreground="{StaticResource AccentTextColorBrush}" Margin="0" d:LayoutOverrides="HorizontalAlignment">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="Click">

                                                                <!-- Collapse borders and shadow-->
                                                                <ei:ChangePropertyAction TargetObject="{Binding ElementName=BodyOuterBorder}" PropertyName="Visibility" Value="Collapsed"/>
                                                                <ei:ChangePropertyAction TargetObject="{Binding ElementName=BodyInnerBorder}" PropertyName="Visibility" Value="Collapsed"/>
                                                                <ei:ChangePropertyAction TargetObject="{Binding ElementName=BodyShadow}" PropertyName="Visibility" Value="Collapsed"/>
                                                                
                                                                <!-- Hide body and content by setting opacity to 0.  Opacity is used instead of Visibility to preserve element height.  Otherwise, 
                                                                     window will move vertically.  -->
                                                                <ei:ChangePropertyAction TargetObject="{Binding ElementName=BodyBackground}" PropertyName="Opacity" Value="0"/>
                                                                <ei:ChangePropertyAction TargetObject="{Binding ElementName=Content}" PropertyName="Opacity" Value="0"/>
                                                                
                                                                <!-- Lock in current height by setting Height to ActualHeight.  Do this to prevent height from changing due to text wrapping when width is chagned. -->
                                                                <ei:ChangePropertyAction TargetObject="{Binding ElementName=Content}" PropertyName="Height" Value="{Binding ActualHeight, ElementName=Content}"/>
                                                                
                                                                <!-- Set body and content width to 0 so title bar width will shrink to fit title. -->
                                                                <ei:ChangePropertyAction TargetObject="{Binding ElementName=Content}" PropertyName="Width" Value="0"/>
                                                                <ei:ChangePropertyAction TargetObject="{Binding ElementName=BodyBackground}" PropertyName="Width" Value="0"/>

                                                                <!-- Toggle minimize/restore buttons -->
                                                                <ei:ChangePropertyAction TargetObject="{Binding ElementName=MinimizeButton}" PropertyName="Visibility" Value="Collapsed"/>
                                                                <ei:ChangePropertyAction TargetObject="{Binding ElementName=RestoreButton}" PropertyName="Visibility" Value="Visible"/>
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                    </Button>
                                                    <Button x:Name="RestoreButton" IsTabStop="False" HorizontalAlignment="Right" VerticalAlignment="Top" 
                        								Width="20" Height="16" Style="{StaticResource WindowRestoreButtonStyle}" BorderThickness="1,0,0,1" Background="{StaticResource AccentColorBrush}" BorderBrush="{StaticResource AccentColorBrush}" Foreground="{StaticResource AccentTextColorBrush}" Margin="0" Visibility="Collapsed">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="Click">

                                                                <!-- Show borders and shadow-->
                                                                <ei:ChangePropertyAction TargetObject="{Binding ElementName=BodyOuterBorder}" PropertyName="Visibility" Value="Visible"/>
                                                                <ei:ChangePropertyAction TargetObject="{Binding ElementName=BodyInnerBorder}" PropertyName="Visibility" Value="Visible"/>
                                                                <ei:ChangePropertyAction TargetObject="{Binding ElementName=BodyShadow}" PropertyName="Visibility" Value="Visible"/>
                                                                
                                                                <!-- Restore opacity on body and content -->
                                                                <ei:ChangePropertyAction TargetObject="{Binding ElementName=BodyBackground}" PropertyName="Opacity" Value="1"/>
                                                                <ei:ChangePropertyAction TargetObject="{Binding ElementName=Content}" PropertyName="Opacity" Value="1"/>

                                                                <!-- Restore height and width to auto -->                                                                
                                                                <ei:ChangePropertyAction TargetObject="{Binding ElementName=Content}" PropertyName="Height" Value="NaN"/>
                                                                <ei:ChangePropertyAction TargetObject="{Binding ElementName=Content}" PropertyName="Width" Value="NaN"/>
                                                                <ei:ChangePropertyAction TargetObject="{Binding ElementName=BodyBackground}" PropertyName="Width" Value="NaN"/>

                                                                <!-- Toggle minimize/restore buttons -->
                                                                <ei:ChangePropertyAction x:Name="HideRestoreButton" TargetObject="{Binding ElementName=RestoreButton}" PropertyName="Visibility" Value="Collapsed"/>
                                                                <ei:ChangePropertyAction x:Name="ShowMinimizeButton" TargetObject="{Binding ElementName=MinimizeButton}" PropertyName="Visibility" Value="Visible"/>
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                    </Button>
                                                </Grid>
                                                <Button x:Name="CloseButton" IsTabStop="False" HorizontalAlignment="Right" VerticalAlignment="Top" 
                        							Width="20" Height="16" Style="{StaticResource WindowCloseButtonStyle}" BorderThickness="1,0,0,1" Background="{StaticResource AccentColorBrush}" BorderBrush="{StaticResource AccentColorBrush}" Foreground="{StaticResource AccentTextColorBrush}"/>
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                    <Border x:Name="BodyBackground" Margin="2,0,2,2" Background="{StaticResource BackgroundGradientBrush}" Grid.Row="1" CornerRadius="0,0,7,7" BorderThickness="0">
                                        <Border.OpacityMask>
                                            <LinearGradientBrush EndPoint="0.983,0.995" StartPoint="0.428,0.008">
                                                <GradientStop Color="Black"/>
                                                <GradientStop Color="#CAFFFFFF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.OpacityMask>
                                    </Border>
                                    <ContentControl 
                                      x:Name="Content" Content="{TemplateBinding Content}" Foreground="{StaticResource BackgroundTextColorBrush}" 
                        				      ContentTemplate="{TemplateBinding ContentTemplate}"
                        				      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        				      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0,0,0,5" Grid.Row="1"
                                      HorizontalContentAlignment="Stretch"
                                      VerticalContentAlignment="Stretch"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Style assigned to the SidePanelContainer -->
    <Style x:Key="SidePanelTabControlStyle" TargetType="sdk:TabControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFFFFFFF" Offset="0"/>
                    <GradientStop Color="#FFFEFEFE" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="sdk:TabControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualTop">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualBottom">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualLeft">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualRight">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="TemplateTop" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <ctlPrimitives:TabPanel x:Name="TabPanelTop" Margin="2,2,2,-1" Canvas.ZIndex="1" Visibility="Collapsed"/>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0,0,3,3" MinWidth="10" MinHeight="10" Grid.Row="1">
                                <ContentPresenter x:Name="ContentTop" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                            </Border>
                            <Border x:Name="DisabledVisualTop" Background="#8CFFFFFF" CornerRadius="0,0,3,3" IsHitTestVisible="False" Opacity="0" Grid.Row="1" Grid.RowSpan="2" Canvas.ZIndex="1"/>
                        </Grid>
                        <Grid x:Name="TemplateBottom" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ctlPrimitives:TabPanel x:Name="TabPanelBottom" Margin="2,-1,2,2" Grid.Row="1" Canvas.ZIndex="1" Visibility="Collapsed"/>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3,3,0,0" MinWidth="10" MinHeight="10">
                                <ContentPresenter x:Name="ContentBottom" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                            </Border>
                            <Border x:Name="DisabledVisualBottom" Background="#8CFFFFFF" CornerRadius="3,3,0,0" IsHitTestVisible="False" Opacity="0" Canvas.ZIndex="1"/>
                        </Grid>
                        <Grid x:Name="TemplateLeft" Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ctlPrimitives:TabPanel x:Name="TabPanelLeft" Margin="2,2,-1,2" Canvas.ZIndex="1" Visibility="Collapsed"/>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" CornerRadius="0,3,3,0" MinWidth="10" MinHeight="10">
                                <ContentPresenter x:Name="ContentLeft" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                            </Border>
                            <Border x:Name="DisabledVisualLeft" Background="#8CFFFFFF" Grid.Column="1" CornerRadius="0,3,3,0" IsHitTestVisible="False" Opacity="0" Canvas.ZIndex="1"/>
                        </Grid>
                        <Grid x:Name="TemplateRight" Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ctlPrimitives:TabPanel x:Name="TabPanelRight" Grid.Column="1" Margin="-1,2,2,2" Canvas.ZIndex="1" Visibility="Collapsed"/>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3,0,0,3" MinWidth="10" MinHeight="10">
                                <ContentPresenter x:Name="ContentRight" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                            </Border>
                            <Border x:Name="DisabledVisualRight" Background="#8CFFFFFF" CornerRadius="3,0,0,3" IsHitTestVisible="False" Margin="0" Opacity="0" Canvas.ZIndex="1"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Gradient button style that uses theme colors -->
    <Style x:Key="GradientButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="8,3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#A6FFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="#81FFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="#31FFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="#D7FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#D8FFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="#C6FFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="#8CFFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="#3FFFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" >
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.4" Storyboard.TargetName="DisabledElement" 
                                                         Storyboard.TargetProperty="(UIElement.Opacity)" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="FocusElement" 
                                                         Storyboard.TargetProperty="(UIElement.Opacity)" />
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="FocusElement2" 
                                                         Storyboard.TargetProperty="(UIElement.Opacity)" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" CornerRadius="4">
                            <Grid Background="Transparent">
                                <Rectangle x:Name="BackgroundGradient" RadiusX="3" RadiusY="3">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                            <GradientStop Color="#AAFFFFFF" Offset="0"/>
                                            <GradientStop Color="#77FFFFFF" Offset="0.375"/>
                                            <GradientStop Color="#33FFFFFF" Offset="0.625"/>
                                            <GradientStop Color="Transparent" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Rectangle x:Name="DisabledElement" Fill="White" RadiusX="3" RadiusY="3" Opacity="0" />
                        <Rectangle x:Name="FocusElement" Stroke="{TemplateBinding Foreground}" 
                                   StrokeThickness="3" RadiusX="2" RadiusY="2" Opacity="0"/>
                        <Rectangle x:Name="FocusElement2" Stroke="{TemplateBinding Background}" 
                                   StrokeThickness="1" RadiusX="2" RadiusY="2" Opacity="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NoFocusGridSplitterStyle" TargetType="controls:GridSplitter">
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="IsTabStop" Value="true"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="PreviewStyle">
            <Setter.Value>
                <Style TargetType="Control">
                    <Setter Property="Background" Value="#FF868686"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Control">
                                <Grid x:Name="Root" Opacity=".5">
                                    <Rectangle Fill="{TemplateBinding Background}"/>
                                    <Grid x:Name="HorizontalTemplate" Height="6"/>
                                    <Grid x:Name="VerticalTemplate" Visibility="Collapsed" Width="6"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:GridSplitter">
                    <Grid x:Name="Root" IsHitTestVisible="{TemplateBinding IsEnabled}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{TemplateBinding Background}" StrokeThickness="0"/>
                        <Grid x:Name="HorizontalTemplate" Height="10">
                            <StackPanel Height="6" VerticalAlignment="Center">
                                <Rectangle Fill="#00FFFFFF" Height="1" Margin="1" StrokeThickness="0" Width="10"/>
                                <Rectangle Fill="#00FFFFFF" Height="1" Margin="1" StrokeThickness="0" Width="10"/>
                            </StackPanel>
                        </Grid>
                        <Grid x:Name="VerticalTemplate" Visibility="Collapsed" Width="10">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Width="6">
                                <Rectangle Fill="#00FFFFFF" Height="10" Margin="1" StrokeThickness="0" Width="1"/>
                                <Rectangle Fill="#00FFFFFF" Height="10" Margin="1" StrokeThickness="0" Width="1"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="StripeDiagnol" StartPoint="0,0" EndPoint="6,6" MappingMode="Absolute" SpreadMethod="Repeat">
        <GradientStop Color="#33FFFFFF" Offset="0.5" />
        <GradientStop Color="#33000000" Offset="0.5" />
    </LinearGradientBrush>

    <!-- MapProgressBar Style-->
    <Style TargetType="esri:MapProgressBar" x:Key="MapProgressBarStyle">
        <Setter Property="HorizontalAlignment" Value="Left"  />
        <Setter Property="VerticalAlignment" Value="Top"  />
        <Setter Property="FontWeight" Value="Bold"  />
        <Setter Property="FontSize" Value="9"  />

        <Setter Property="Background" Value="Transparent"  />
        <Setter Property="Foreground" Value="Transparent"  />
        <Setter Property="BorderBrush" Value="Transparent"  />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="esri:MapProgressBar">
                    <Grid x:Name="root">
                        <Grid.Resources>


                            <Style TargetType="ProgressBar" x:Key="templateProgressBarStyle" >
                                <Setter Property="Foreground" Value="Transparent" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="Maximum" Value="100" />
                                <Setter Property="IsTabStop" Value="False" />
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
                                            <GradientStop Color="#FFAEB7BF" Offset="0" />
                                            <GradientStop Color="#FF919EA7" Offset="0.35" />
                                            <GradientStop Color="#FF7A8A99" Offset="0.35" />
                                            <GradientStop Color="#FF647480" Offset="1" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ProgressBar" xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows">
                                            <Grid x:Name="Root" >
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Determinate" />
                                                        <VisualState x:Name="Indeterminate">
                                                            <Storyboard RepeatBehavior="Forever">
                                                                <DoubleAnimation Storyboard.TargetName="IndeterminateGradientFill" Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.Transform).(TransformGroup.Children)[0].X" Duration="00:00:.5" From="0" To="20" />
                                                                <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="IndeterminateRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="DeterminateRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <!--Default Root Visuals for either type of ProgressBar-->
                                                <Border Name="ProgressBarTrack" CornerRadius="3" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" />
                                                <Grid x:Name="ProgressBarRootGrid">
                                                    <!-- Beginning of Gradient over all visuals -->
                                                    <Rectangle Canvas.ZIndex="1" x:Name="ProgressBarRootGradient" StrokeThickness="1" Margin="{TemplateBinding BorderThickness}" Stroke="Transparent" RadiusX="1.5" RadiusY="1.5" Fill="Transparent">
                                                    </Rectangle>
                                                    <!-- Beginning of Indeterminate Progress Bar Visuals-->
                                                    <Grid x:Name="IndeterminateRoot" Visibility="Collapsed">
                                                        <Rectangle x:Name="IndeterminateSolidFill" Stroke="#FF448DCA" RadiusX="2" RadiusY="2" StrokeThickness="0" Margin="{TemplateBinding BorderThickness}" Fill="{TemplateBinding Foreground}" Opacity="1" RenderTransformOrigin="0.5,0.5" />
                                                        <Rectangle x:Name="IndeterminateGradientFill" RadiusX="2" RadiusY="2" StrokeThickness="1" Margin="{TemplateBinding BorderThickness}" Opacity="0.7" Fill="Transparent">
                                                        </Rectangle>
                                                    </Grid>
                                                    <!-- Beginning of Determinate Progress Bar Visuals-->
                                                    <Grid x:Name="DeterminateRoot" Margin="1">
                                                        <!--Background -->
                                                        <Rectangle HorizontalAlignment="Left" x:Name="ProgressBarIndicator" Margin="{TemplateBinding BorderThickness}" StrokeThickness="0.5" RadiusX="5" RadiusY="5" Fill="{TemplateBinding Foreground}">
                                                        </Rectangle>
                                                    </Grid>
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Show">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="root" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="root" Storyboard.TargetProperty="Opacity"
											 To="1" Duration="0:0:.5" BeginTime="0:0:0.25" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Hide">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="root" Storyboard.TargetProperty="Opacity"
											 To="0" Duration="0:0:0.2" />
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00.2" Duration="00:00:00.0010000" Storyboard.TargetName="root" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.Effect>
                            <DropShadowEffect Color="Black" Direction="-45" BlurRadius="20" Opacity=".75" />
                        </Grid.Effect>

                        <ProgressBar Minimum="0" Maximum="100" x:Name="Progress" Style="{StaticResource templateProgressBarStyle}"
									 Background="{TemplateBinding Background}" 
									 Foreground="{StaticResource StripeDiagnol}"
									 BorderBrush="{TemplateBinding BorderBrush}"
									 BorderThickness="{TemplateBinding BorderThickness}" 
									/>
                        <Grid HorizontalAlignment="Right" VerticalAlignment="Center">

                            <TextBlock x:Name="ValueTextBlur"
								   HorizontalAlignment="Center" VerticalAlignment="Center"
								   FontWeight="{TemplateBinding FontWeight}"
								   FontSize="{TemplateBinding FontSize}"
								   FontFamily="{TemplateBinding FontFamily}"
								   Text="{Binding Text, Mode=OneWay, ElementName=ValueText}"
								   Foreground="Black">
                                <TextBlock.Effect>
                                    <BlurEffect Radius="10" />
                                </TextBlock.Effect>
                            </TextBlock>

                            <TextBlock x:Name="ValueText"
								   HorizontalAlignment="Center" VerticalAlignment="Center"
								   FontWeight="{TemplateBinding FontWeight}"
								   FontSize="{TemplateBinding FontSize}"
								   FontFamily="{TemplateBinding FontFamily}"
								   Foreground="White"
						        />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FeatureDataGridCloseButton" TargetType="Button">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#FFEEB3AC" Offset="0.009"/>
                    <GradientStop Color="#FFDA8578" Offset="0.402"/>
                    <GradientStop Color="#FFC64D38" Offset="0.459"/>
                    <GradientStop Color="#FFC84934" Offset="0.598"/>
                    <GradientStop Color="#FFD48671" Offset="0.885"/>
                    <GradientStop Color="#FFE8BBAE" Offset="0.943"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FF5E5E5E"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Width" Value="45"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border BorderThickness="0,0,1,0" Margin="0" CornerRadius="0,0,0,4" Background="{StaticResource BackgroundStartGradientStopColorBrush}"/>
                        <Border BorderThickness="0,0,1,0" Margin="0" CornerRadius="0,0,0,4" Background="{StaticResource AccentColorBrush}" OpacityMask="#54000000"/>
                        <Border BorderThickness="0" Background="{StaticResource CloseButtonOverlayBrush}" CornerRadius="0,0,0,4" Opacity="0.25"/>
                        <Border
                        		BorderBrush="{TemplateBinding BorderBrush}"
                        		BorderThickness="{TemplateBinding BorderThickness}"
                        		CornerRadius="0,0,0,4">
                            <Path
                        			Fill="{TemplateBinding Foreground}"
                        			Width="10"
                        			Height="10"
                        			Stretch="Fill"
                        			Data="F1 M 6.742,3.852 L 9.110,1.559 L 8.910,0.500 L 6.838,0.500 L 4.902,2.435 L 2.967,0.500 L 0.895,0.500 L 0.694,1.559 L 3.062,3.852 L 0.527,6.351 L 0.689,7.600 L 2.967,7.600 L 4.897,5.575 L 6.854,7.600 L 9.115,7.600 L 9.277,6.351 L 6.742,3.852 Z" Stroke="{StaticResource AccentColorBrush}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Corresponds to the style assigned to popups for Layer Configuration and Toolbars -->
    <Style x:Key="PopupContentControl" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border BorderBrush="{StaticResource SelectionColorBrush}" 
                                BorderThickness="1" CornerRadius="6" Margin="-1,0,0,0">
                        <Border BorderBrush="{StaticResource AccentColorBrush}" 
                                BorderThickness="1" CornerRadius="2">
                            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Background="{StaticResource BackgroundGradientBrush}">
                                <ContentPresenter Content="{TemplateBinding Content}" />
                            </ScrollViewer>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Corresponds to the style assigned to popups's leader for Layer Configuration and Search -->
    <Style x:Key="PopupLeader" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Path Stroke="{StaticResource SelectionColorBrush}" Fill="{StaticResource AccentColorBrush}"
                                      Data="M 20,0 L 0,10 20,20"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AboutControlStyle" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Grid x:Name="LayoutRoot" MaxWidth="600">
                        <Grid Margin="20">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <TextBlock x:Name="ApplicationName" TextWrapping="Wrap" FontSize="18" 
                                       FontFamily="Verdana" FontWeight="Bold"  
                                       Foreground="{TemplateBinding Foreground}"
                                      Text="{Binding Title}" TextAlignment="Right"/>

                            <Grid Grid.Row="1" Margin="0,20,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>

                                <TextBlock 
                                    Foreground="{TemplateBinding Foreground}"
                                    TextWrapping="Wrap" 
                                    Text="{Binding ConverterParameter=Version, Converter={StaticResource LayoutLocalization}}"
                                    FontFamily="Verdana" 
                                    FontSize="12" 
                                    TextAlignment="Right"/>
                                <TextBlock 
                                    Foreground="{TemplateBinding Foreground}"
                                    Grid.Column="1" 
                                    Text="{Binding Version}" 
                                    Margin="5,0,0,0" 
                                    TextWrapping="Wrap" 
                                    FontSize="12" 
                                    FontFamily="Verdana" 
                                    FontWeight="Bold" />
                            </Grid>
                            <TextBlock Text="© 2015 Esri" Foreground="{TemplateBinding Foreground}" 
                                       Grid.Row="2" HorizontalAlignment="Left"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- FeatureDataGrid styles -->
    <Style x:Key="DefaultColumnHeaderStyle" TargetType="primitives:DataGridColumnHeader">
        <Setter Property="Foreground" Value="#FF2C4355"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="10.5"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="SeparatorBrush" Value="#FF2A3E4D"/>
        <Setter Property="Padding" Value="4,4,5,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:DataGridColumnHeader">
                    <Grid x:Name="Root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:0.1"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SortStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:0.1"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unsorted"/>
                                <VisualState x:Name="SortAscending">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1.0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SortDescending">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1.0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SortIconTransform" Storyboard.TargetProperty="ScaleY">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="-.9"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="BackgroundGradient" Grid.ColumnSpan="2" Grid.RowSpan="2" Stretch="Fill" Fill="{StaticResource BackgroundGradientBrush}"/>
                        <ContentControl Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.RowSpan="2" 
            									Foreground="{StaticResource BackgroundTextColorBrush}"
            									Content="{Binding Path=Content.DisplayName, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Rectangle x:Name="VerticalSeparator" VerticalAlignment="Stretch" Width="1" Visibility="{TemplateBinding SeparatorVisibility}" Grid.Column="2" Grid.RowSpan="2" Fill="#FF89A6BD"/>
                        <Path HorizontalAlignment="Left" x:Name="SortIcon" VerticalAlignment="Center" Width="8" Opacity="0" RenderTransformOrigin=".5,.5" Grid.Column="1" Grid.RowSpan="2" Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z " Fill="#FF23394B" Stretch="Uniform">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX=".9" ScaleY=".9" x:Name="SortIconTransform"/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultRowStyle" TargetType="data:DataGridRow">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="data:DataGridRow">
                    <primitives:DataGridFrozenGrid x:Name="Root">
                        <primitives:DataGridFrozenGrid.Resources>
                            <Storyboard x:Key="DetailsVisibleTransition">
                                <DoubleAnimation Duration="00:00:0.1" Storyboard.TargetName="DetailsPresenter" Storyboard.TargetProperty="ContentHeight"/>
                            </Storyboard>
                        </primitives:DataGridFrozenGrid.Resources>
                        <primitives:DataGridFrozenGrid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </primitives:DataGridFrozenGrid.ColumnDefinitions>
                        <primitives:DataGridFrozenGrid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </primitives:DataGridFrozenGrid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Normal AlternatingRow">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#1ca0f2"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NormalSelected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#1ca0f2"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOverSelected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#ffcc00"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#1ca0f2"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected Highlighted">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#ffcc00"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Highlighted">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#ffcc00"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="BackgroundRectangle" Opacity="0" Grid.ColumnSpan="2" Grid.RowSpan="2" Fill="#FFB6D9F5"/>
                        <primitives:DataGridRowHeader x:Name="RowHeader" Grid.RowSpan="3" primitives:DataGridFrozenGrid.IsFrozen="True" Foreground="#FF2D3842" SeparatorBrush="#FFFFFFFF"/>
                        <primitives:DataGridCellsPresenter x:Name="CellsPresenter" Grid.Column="1" primitives:DataGridFrozenGrid.IsFrozen="True"/>
                        <primitives:DataGridDetailsPresenter x:Name="DetailsPresenter" Grid.Column="1" Grid.Row="1"/>
                        <Rectangle Height="1" HorizontalAlignment="Stretch" x:Name="BottomGridLine" Grid.Column="1" Grid.Row="2"/>
                    </primitives:DataGridFrozenGrid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FF2E3942"/>
    </Style>

    <Style x:Key="DefaultRowHeaderStyle"  TargetType="primitives:DataGridRowHeader">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="SeparatorBrush" Value="#FFFFFFFF"/>
        <Setter Property="SeparatorVisibility" Value="Collapsed"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:DataGridRowHeader">
                    <Grid x:Name="Root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:0.2"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundColor" Storyboard.TargetProperty="Color">
                                            <SplineColorKeyFrame KeyTime="0" Value="#99D5EAF1"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver CurrentRow Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundColor" Storyboard.TargetProperty="Color">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFD5EAF1"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal CurrentRow">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundColor" Storyboard.TargetProperty="Color">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFD5EAF1"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal EditingRow">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundColor" Storyboard.TargetProperty="Color">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FFD5EAF1"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Grid.ColumnSpan="2" Grid.RowSpan="3" BorderBrush="#FFFFFFFF" BorderThickness="1, 0, 1, 0">
                            <Rectangle Grid.ColumnSpan="2" Grid.RowSpan="3" Stretch="Fill">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="#99D4E7F7" x:Name="BackgroundColor"/>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Rectangle Height="1" HorizontalAlignment="Stretch" Margin="1, 0, 1, 0" x:Name="HorizontalSeparator" Visibility="{TemplateBinding SeparatorVisibility}" Grid.ColumnSpan="2" Grid.Row="2" Fill="{TemplateBinding SeparatorBrush}"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Grid.RowSpan="2" Content="{TemplateBinding Content}"/>
                        <Path Height="10" HorizontalAlignment="Center" Margin="8,0,8,0" x:Name="CurrentRowGlyph" VerticalAlignment="Center" Width="6" Opacity="0" Grid.RowSpan="2" Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z " Stretch="Fill">
                            <Path.Fill>
                                <LinearGradientBrush EndPoint="0,1.75" StartPoint="0,-.15">
                                    <GradientStop Color="#FFCEE7FB" Offset="0"/>
                                    <GradientStop Color="#FF81BFF0" Offset="0.5"/>
                                    <GradientStop Color="#FF9ECDF4" Offset="0.991"/>
                                </LinearGradientBrush>
                            </Path.Fill>
                        </Path>
                        <Path Height="10" HorizontalAlignment="Center" Margin="8,0,8,0" x:Name="EditingRowGlyph" VerticalAlignment="Center" Width="6" Opacity="0" Grid.RowSpan="2" Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z " Stretch="Fill">
                            <Path.Fill>
                                <LinearGradientBrush EndPoint="0,1.75" StartPoint="0,-.15">
                                    <GradientStop Color="#FFC5E3FB" Offset="0"/>
                                    <GradientStop Color="#FF94CDFB" Offset="0.487"/>
                                    <GradientStop Color="#FFA0CDF2" Offset="1"/>
                                </LinearGradientBrush>
                            </Path.Fill>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FF01111E"/>
    </Style>

    <Style x:Key="DefaultCellStyle" TargetType="data:DataGridCell">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="data:DataGridCell">
                    <Grid x:Name="Root" Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CurrentStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Regular"/>
                                <VisualState x:Name="Current">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle HorizontalAlignment="Stretch" x:Name="FocusVisual" VerticalAlignment="Stretch" IsHitTestVisible="false" Opacity="0" Fill="#66FFFFFF" Stroke="#FF84C3F5" StrokeThickness="1"/>
                        <ContentPresenter Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        <Rectangle x:Name="RightGridLine" VerticalAlignment="Stretch" Width="1" Grid.Column="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FF0D1D29"/>
    </Style>

    <Style x:Key="DataGridMenuButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="BackgroundGradient" Fill="Transparent" Margin="1"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"/>
                        <Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="FeatureDataGridStyle" TargetType="esri:FeatureDataGrid">
        <Setter Property="RowBackground" Value="#AAEAEFF4"/>
        <Setter Property="AlternatingRowBackground" Value="#00FFFFFF"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="SelectionMode" Value="Extended"/>
        <Setter Property="CanUserReorderColumns" Value="True"/>
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <Setter Property="CanUserSortColumns" Value="True"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="DragIndicatorStyle">
            <Setter.Value>
                <Style TargetType="ContentControl">
                    <Setter Property="Foreground" Value="#7FFFFFFF"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ContentControl">
                                <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="SortStates">
                                            <VisualState x:Name="Unsorted"/>
                                            <VisualState x:Name="SortAscending">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity" To="1.0" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="SortDescending">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity" To="1.0"/>
                                                    <DoubleAnimation Duration="0" Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="(RenderTransform).ScaleY" To="-.9" />
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Rectangle x:Name="BackgroundRectangle" Fill="#66808080" Stretch="Fill" Grid.ColumnSpan="2"/>
                                    <Rectangle x:Name="BackgroundGradient" Stretch="Fill" Opacity="0" Grid.ColumnSpan="2">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                <GradientStop Color="#FFFFFFFF" Offset="0.015"/>
                                                <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                <GradientStop Color="#E5FFFFFF" Offset="0.6"/>
                                                <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter Content="{TemplateBinding Content}"/>
                                        <Path x:Name="SortIcon" Fill="#7FFFFFFF" Stretch="Uniform" HorizontalAlignment="Left" Margin="4,0,0,0" VerticalAlignment="Center" Width="8" Opacity="0" RenderTransformOrigin=".5,.5" Grid.Column="1" Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z ">
                                            <Path.RenderTransform>
                                                <ScaleTransform ScaleX=".9" ScaleY=".9"/>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="DropLocationIndicatorStyle">
            <Setter.Value>
                <Style TargetType="ContentControl">
                    <Setter Property="Background" Value="#FF3F4346"/>
                    <Setter Property="Width" Value="2"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ContentControl">
                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="GridLinesVisibility" Value="Vertical"/>
        <Setter Property="HorizontalGridLinesBrush" Value="#FFC9CACA"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="VerticalGridLinesBrush" Value="#FFC9CACA"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="esri:FeatureDataGrid">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To="1"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                            <Grid x:Name="Root" Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="28"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.Resources>
                                        <ControlTemplate x:Key="TopLeftHeaderTemplate" TargetType="sdk:DataGridColumnHeader">
                                            <Grid x:Name="Root">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Border Grid.RowSpan="2" Background="#FF1F3B53" BorderBrush="#FFC9CACA" BorderThickness="0,0,1,0">
                                                    <Rectangle Stretch="Fill" StrokeThickness="1">
                                                        <Rectangle.Fill>
                                                            <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                                <GradientStop Color="#FCFFFFFF" Offset="0.015"/>
                                                                <GradientStop Color="#F7FFFFFF" Offset="0.375"/>
                                                                <GradientStop Color="#E5FFFFFF" Offset="0.6"/>
                                                                <GradientStop Color="#D1FFFFFF" Offset="1"/>
                                                            </LinearGradientBrush>
                                                        </Rectangle.Fill>
                                                    </Rectangle>
                                                </Border>
                                                <Rectangle Fill="#FFDBDCDC" StrokeThickness="1" Height="1" VerticalAlignment="Bottom" Width="Auto" Grid.RowSpan="2" />
                                            </Grid>
                                        </ControlTemplate>
                                        <ControlTemplate x:Key="TopRightHeaderTemplate" TargetType="sdk:DataGridColumnHeader">
                                            <Grid x:Name="RootElement">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Border Grid.RowSpan="2" Background="#FF1F3B53" BorderBrush="#FFC9CACA" BorderThickness="1,0,0,0">
                                                    <Rectangle Stretch="Fill" Fill="{StaticResource BackgroundGradientBrush}" />
                                                </Border>
                                            </Grid>
                                        </ControlTemplate>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <sdk:DataGridColumnHeader x:Name="TopLeftCornerHeader" Template="{StaticResource TopLeftHeaderTemplate}" Width="22"/>
                                    <sdk:DataGridColumnHeadersPresenter x:Name="ColumnHeadersPresenter" Grid.Column="1"/>
                                    <sdk:DataGridColumnHeader x:Name="TopRightCornerHeader" Template="{StaticResource TopRightHeaderTemplate}" Grid.Column="2"/>
                                    <Rectangle x:Name="ColumnHeadersAndRowsSeparator" Fill="#FFC9CACA" StrokeThickness="1" Height="1" VerticalAlignment="Bottom" Width="Auto" Grid.ColumnSpan="3"/>
                                    <sdk:DataGridRowsPresenter x:Name="RowsPresenter" Grid.ColumnSpan="2" Grid.Row="1"/>
                                    <Rectangle x:Name="BottomRightCorner" Fill="#FFE9EEF4" Grid.Column="2" Grid.Row="2"/>
                                    <Rectangle x:Name="BottomLeftCorner" Fill="#FFE9EEF4" Grid.ColumnSpan="2" Grid.Row="2"/>
                                    <ScrollBar x:Name="VerticalScrollbar" Margin="0,0,0,-1" Width="11" Grid.Column="2"
                                               Grid.Row="1" Orientation="Vertical"
                                               Style="{StaticResource ThinScrollBarStyle}"
                                               Foreground="{StaticResource AccentColorBrush}"
                                               Background="{StaticResource BackgroundGradientBrush}"/>
                                    <Grid Grid.Column="1" Grid.Row="2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Rectangle x:Name="FrozenColumnScrollBarSpacer"/>
                                        <ScrollBar x:Name="HorizontalScrollbar" Height="11" Margin="0,0,-1,-1" 
                                                   Grid.Column="1" Orientation="Horizontal"
                                                   Style="{StaticResource ThinScrollBarStyle}"
                                                   Foreground="{StaticResource AccentColorBrush}"
                                                   Background="{StaticResource BackgroundGradientBrush}"/>
                                    </Grid>
                                    <dataInput:ValidationSummary x:Name="ValidationSummary" MaxHeight="90" Grid.ColumnSpan="3" Grid.Row="3" Filter="ObjectErrors"/>
                                </Grid>
                                <Border Grid.Row="1" Background="{StaticResource BackgroundEndGradientStopColorBrush}">
                                    <StackPanel Orientation="Horizontal" Margin="0,3,0,3">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding ConverterParameter=RecordColon, Converter={StaticResource LayoutLocalization}}" Foreground="{StaticResource BackgroundTextColorBrush}" VerticalAlignment="Center" Margin="1,0,3,0" />

                                            <Button x:Name="MoveFirstButton" Cursor="Hand" Content="&lt;&lt;" ToolTipService.ToolTip="{Binding ConverterParameter=MoveFirst, Converter={StaticResource LayoutLocalization}}"
                                            Foreground="{StaticResource AccentTextColorBrush}" Style="{StaticResource GradientButtonStyle}" 
                                            Background="{StaticResource AccentColorBrush}" BorderBrush="{StaticResource AccentTextColorBrush}"/>

                                            <Button x:Name="MovePreviousButton" Content="&lt;" Cursor="Hand" ToolTipService.ToolTip="{Binding ConverterParameter=MovePrevious, Converter={StaticResource LayoutLocalization}}"
                                            Foreground="{StaticResource AccentTextColorBrush}" Style="{StaticResource GradientButtonStyle}" 
                                            Background="{StaticResource AccentColorBrush}" BorderBrush="{StaticResource AccentTextColorBrush}"/>
                                            <Border BorderBrush="{StaticResource AccentColorBrush}" BorderThickness="0.5" VerticalAlignment="Center">
                                                <TextBox x:Name="CurrentRecordNumberTextBox" TextAlignment="Right" Text="0" Width="40"/>
                                            </Border>
                                            <Button x:Name="MoveNextButton" Cursor="Hand" Content="&gt;" ToolTipService.ToolTip="{Binding ConverterParameter=MoveNext, Converter={StaticResource LayoutLocalization}, Source={StaticResource LayoutLocalization}}"
                                            Foreground="{StaticResource AccentTextColorBrush}" Style="{StaticResource GradientButtonStyle}" 
                                            Background="{StaticResource AccentColorBrush}" BorderBrush="{StaticResource AccentTextColorBrush}"/>
                                            <Button x:Name="MoveLastButton" Cursor="Hand" Content="&gt;&gt;" ToolTipService.ToolTip="{Binding ConverterParameter=MoveLast, Converter={StaticResource LayoutLocalization}, Source={StaticResource LayoutLocalization}}"
                                            Foreground="{StaticResource AccentTextColorBrush}" Style="{StaticResource GradientButtonStyle}" 
                                            Background="{StaticResource AccentColorBrush}" BorderBrush="{StaticResource AccentTextColorBrush}"/>
                                        </StackPanel>
                                        <TextBlock x:Name="NumberOfRecordsTextBlock" Margin="3,0,0,0" Text="{Binding ConverterParameter=RecordsOutOfSelected, Converter={StaticResource LayoutLocalization}, Source={StaticResource LayoutLocalization}}" VerticalAlignment="Center"
                                               Foreground="{StaticResource BackgroundTextColorBrush}"/>
                                        <StackPanel Orientation="Horizontal">
                                            <Grid Margin="5,0,0,0">
                                                <Button x:Name="OptionsButton" Content="{Binding ConverterParameter=Options, Converter={StaticResource LayoutLocalization}}"
                                                                                    Style="{StaticResource GradientButtonStyle}"
                                                                                    Foreground="{StaticResource AccentTextColorBrush}"
                                                                                    Background="{StaticResource AccentColorBrush}" Padding="8,3,8,3"
                                                                                    BorderBrush="{StaticResource AccentTextColorBrush}"/>
                                                <Popup x:Name="PopupMenu" IsOpen="False" VerticalOffset="-35">
                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" 
                                                                                        Background="{StaticResource BackgroundEndGradientStopColorBrush}" CornerRadius="1.5">
                                                        <StackPanel>
                                                            <Button x:Name="SwitchSelectionMenuButton" Margin="5,0" Style="{StaticResource DataGridMenuButtonStyle}"
                                                                                                Cursor="Hand">
                                                                <TextBlock Margin="5" Text="{Binding ConverterParameter=SwitchSelection, Converter={StaticResource LayoutLocalization}}" VerticalAlignment="Center"
                                                                                                       Foreground="{StaticResource BackgroundTextColorBrush}"/>
                                                            </Button>
                                                            <Line Stroke="{StaticResource BackgroundTextColorBrush}" StrokeThickness="0.2" X1="10" X2="157" Y1="2" Y2="2"/>
                                                            <CheckBox x:Name="AutoChangeMapExtentCheckBox" Content="{Binding ConverterParameter=AutoZoomToSelected, Converter={StaticResource LayoutLocalization}}" Margin="10,5"
                                                                                                  Foreground="{StaticResource BackgroundTextColorBrush}" Cursor="Hand"/>
                                                        </StackPanel>
                                                    </Border>
                                                </Popup>
                                            </Grid>
                                            <Button x:Name="SubmitChangesMenuButton" Margin="4,0,0,0" VerticalAlignment="Center"
                                                    Style="{StaticResource GradientButtonStyle}"
                                                    Foreground="{StaticResource AccentTextColorBrush}"
                                                    Background="{StaticResource AccentColorBrush}" Padding="8,3,8,3"
                                                    BorderBrush="{StaticResource AccentTextColorBrush}"
                                                    Content="{Binding ConverterParameter=Commit, Converter={StaticResource LayoutLocalization}}">
                                            </Button>
                                        </StackPanel>
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" IsHitTestVisible="False" Opacity="0" Background="#8CFFFFFF" CornerRadius="2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Padding" Value="3" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="TabNavigation" Value="Local" />
        <Setter Property="Foreground" Value="{StaticResource BackgroundTextColorBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="fillColor" Storyboard.TargetProperty="Opacity" Duration="0" To="0.35"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity" Duration="0" To=".55" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="fillColor2" Storyboard.TargetProperty="Opacity" Duration="0" To="0.75"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="fillColor" Opacity="0" Fill="{StaticResource SelectionColorBrush}" Stroke="{StaticResource SelectionOutlineColorBrush}"
                                   IsHitTestVisible="False" RadiusX="1" RadiusY="1" StrokeThickness="1"/>
                        <Rectangle x:Name="fillColor2" Opacity="0" Fill="{StaticResource SelectionColorBrush}" Stroke="{StaticResource SelectionOutlineColorBrush}" 
                                   IsHitTestVisible="False" RadiusX="1" RadiusY="1" StrokeThickness="1"/>
                        <ContentControl
                              x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"                            
                              Margin="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Loading overlay.  Displayed while the Viewer is initializing. -->
    <ControlTemplate x:Key="LoadingOverlayTemplate">
        <Grid Background="{StaticResource BackgroundGradientBrush}">
            <Grid.Resources>
                <extensibility:MapApplicationBindingSource x:Key="MapApplication" />
            </Grid.Resources>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock x:Name="LoadingText" Foreground="{StaticResource BackgroundTextColorBrush}" 
                           Text="{Binding ConverterParameter=InitializingViewer, 
                                Converter={StaticResource LayoutLocalization}}"                                             
                           HorizontalAlignment="Center" FontSize="14" Opacity="0.6" />
                <ProgressBar x:Name="LoadingProgressBar" IsIndeterminate="True" Width="200" Height="15" HorizontalAlignment="Center"
                             Margin="10" Opacity="0.8">
                    <i:Interaction.Triggers>
                        <i:EventTrigger SourceObject="{StaticResource MapApplication}" EventName="Initialized">
                            <ei:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                                                     PropertyName="Visibility" Value="Collapsed" />
                        </i:EventTrigger>
                        <i:EventTrigger SourceObject="{StaticResource MapApplication}" EventName="InitializationFailed">
                            <ei:ChangePropertyAction TargetObject="{Binding ElementName=LoadingText}" 
                                                     PropertyName="Text" 
                                                     Value="{Binding ConverterParameter=CouldNotLoadViewer, 
                                                     Converter={StaticResource LayoutLocalization}}" />
                            <ei:ChangePropertyAction TargetObject="{Binding ElementName=LoadingProgressBar}" 
                                                     PropertyName="Visibility" Value="Collapsed" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ProgressBar>
            </StackPanel>
        </Grid>
    </ControlTemplate>

    <!-- ========================== -->
    <!-- IMPLICIT STYLES -->
    <!-- ========================== -->

    <!-- These styles do not specify a key, so they apply globally within the Viewer to any controls of the TargetType 
    that do not themselves specify a style -->
    <Style TargetType="ScrollBar">
        <Setter Property="MinWidth" Value="11"/>
        <Setter Property="MinHeight" Value="11"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Foreground" Value="{StaticResource AccentColorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentColorBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid x:Name="Root">
                        <Grid.Resources>
                            <ControlTemplate x:Key="RepeatButtonTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root" Background="Transparent">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalIncrementTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
                                                    <DoubleAnimation Duration="0:0:0" To="0.6" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundPressed"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0" To=".7" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledElement"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Rectangle x:Name="Background" Fill="{TemplateBinding Background}" Opacity="0" RadiusY="2" RadiusX="2" StrokeThickness="1" Stroke="{TemplateBinding BorderBrush}"/>
                                    <Rectangle x:Name="BackgroundPressed" Fill="White" Opacity="0" RadiusY="2" RadiusX="2" StrokeThickness="0"/>
                                    <Path Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z " Height="8" Stretch="Uniform" Width="4" Fill="{TemplateBinding Foreground}"/>
                                    <Rectangle x:Name="DisabledElement" Fill="#FFFFFFFF" Opacity="0" RadiusY="2" RadiusX="2" StrokeThickness="0" Margin="1"/>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalDecrementTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
                                                    <DoubleAnimation Duration="0:0:0" To="0.6" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundPressed"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0" To=".7" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledElement"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Rectangle x:Name="Background" Fill="{TemplateBinding Background}" Opacity="0" RadiusY="2" RadiusX="2" StrokeThickness="1" Stroke="{TemplateBinding BorderBrush}"/>
                                    <Rectangle x:Name="BackgroundPressed" Fill="White" Opacity="0" RadiusY="2" RadiusX="2" StrokeThickness="0"/>
                                    <Path Data="F1 M 110.692,342.252L 110.692,352.682L 104.594,347.467L 110.692,342.252 Z " Height="8" Stretch="Uniform" Width="4" Fill="{TemplateBinding Foreground}"/>
                                    <Rectangle x:Name="DisabledElement" Fill="#FFFFFFFF" Opacity="0" RadiusY="2" RadiusX="2" StrokeThickness="0" Margin="1"/>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalIncrementTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
                                                    <DoubleAnimation Duration="0:0:0" To="0.6" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundPressed"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0" To=".7" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledElement"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Rectangle x:Name="Background" Fill="{TemplateBinding Background}" Opacity="0" RadiusY="2" RadiusX="2" StrokeThickness="1" Stroke="{TemplateBinding BorderBrush}"/>
                                    <Rectangle x:Name="BackgroundPressed" Fill="White" Opacity="0" RadiusY="2" RadiusX="2" StrokeThickness="0"/>
                                    <Path Data="F1 M 531.107,321.943L 541.537,321.943L 536.322,328.042L 531.107,321.943 Z " Height="4" Stretch="Uniform" Width="8" Fill="{TemplateBinding Foreground}"/>
                                    <Rectangle x:Name="DisabledElement" Fill="#FFFFFFFF" Opacity="0" RadiusY="2" RadiusX="2" Margin="1" StrokeThickness="0"/>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalDecrementTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
                                                    <DoubleAnimation Duration="0:0:0" To="0.6" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundPressed"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0" To=".7" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledElement"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStates">
                                            <VisualState x:Name="Focused"/>
                                            <VisualState x:Name="Unfocused"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Rectangle x:Name="Background" Fill="{TemplateBinding Background}" RadiusY="2" RadiusX="2" Stroke="{TemplateBinding BorderBrush}" Opacity="0"/>
                                    <Rectangle x:Name="BackgroundPressed" Fill="White" Opacity="0" RadiusY="2" RadiusX="2" StrokeThickness="0" Margin="0"/>
                                    <Path Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="4" Stretch="Uniform" Width="8" Fill="{TemplateBinding Foreground}"/>
                                    <Rectangle x:Name="DisabledElement" Fill="#FFFFFFFF" Opacity="0" RadiusY="2" RadiusX="2" Margin="1"/>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalThumbTemplate" TargetType="Thumb">
                                <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundGradient" />
                                                    <DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundGradient2" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0" To="0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundPressed"/>
                                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundGradient" />
                                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundGradient2" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ThumbVisual"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStates">
                                            <VisualState x:Name="Unfocused"/>
                                            <VisualState x:Name="Focused"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid x:Name="ThumbVisual" Margin="0">
                                        <Rectangle x:Name="Background" Fill="{TemplateBinding Foreground}" RadiusY="6" RadiusX="10" StrokeThickness="1" Margin="1,0"/>
                                        <Rectangle x:Name="BackgroundPressed" Fill="{TemplateBinding BorderBrush}" Opacity="0" RadiusY="6" RadiusX="10" StrokeThickness="1" Margin="1,0"/>
                                        <Rectangle x:Name="BackgroundGradient" Margin="1,0" RadiusY="6" RadiusX="10" StrokeThickness="0" Opacity="0.25">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush EndPoint="1,.7" StartPoint="0,.7">
                                                    <GradientStop Color="Black" Offset="0"/>
                                                    <GradientStop Color="Black" Offset="0.5"/>
                                                    <GradientStop Color="Transparent" Offset="0.5001"/>
                                                    <GradientStop Color="Transparent" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <Rectangle x:Name="BackgroundGradient2" Margin="1,0" RadiusY="6" RadiusX="10" StrokeThickness="0" Opacity="0.25">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush EndPoint="1,.7" StartPoint="0,.7">
                                                    <GradientStop Color="Transparent" Offset="0"/>
                                                    <GradientStop Color="Transparent" Offset="0.5"/>
                                                    <GradientStop Color="White" Offset="0.5001"/>
                                                    <GradientStop Color="White" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalThumbTemplate" TargetType="Thumb">
                                <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundGradient" />
                                                    <DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundGradient2" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0" To="0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundPressed"/>
                                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundGradient" />
                                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundGradient2" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ThumbVisual"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid x:Name="ThumbVisual" Margin="0,1,0,1">
                                        <Rectangle x:Name="Background" Fill="{TemplateBinding Foreground}" RadiusY="10" RadiusX="6" StrokeThickness="0"/>
                                        <Rectangle x:Name="BackgroundMouseOver" Fill="{TemplateBinding BorderBrush}" Opacity="0" RadiusY="10" RadiusX="6" StrokeThickness="0"/>
                                        <Rectangle x:Name="BackgroundPressed" Fill="{TemplateBinding BorderBrush}" Opacity="0" RadiusY="10" RadiusX="6" StrokeThickness="0"/>
                                        <Rectangle x:Name="BackgroundGradient" Margin="0" RadiusY="10" RadiusX="6" StrokeThickness="0" Opacity="0.25">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                    <GradientStop Color="Black" Offset="0"/>
                                                    <GradientStop Color="Black" Offset="0.5"/>
                                                    <GradientStop Color="Transparent" Offset="0.5001"/>
                                                    <GradientStop Color="Transparent" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <Rectangle x:Name="BackgroundGradient2" Margin="0" RadiusY="10" RadiusX="6" StrokeThickness="0" Opacity="0.25">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                    <GradientStop Color="Transparent" Offset="0"/>
                                                    <GradientStop Color="Transparent" Offset="0.5"/>
                                                    <GradientStop Color="White" Offset="0.5001"/>
                                                    <GradientStop Color="White" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="HorizontalRoot" VerticalAlignment="Bottom" Height="{TemplateBinding Height}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Grid.ColumnSpan="5" RadiusY="1" RadiusX="1" StrokeThickness="0" Fill="{TemplateBinding Background}"/>
                            <RepeatButton x:Name="HorizontalSmallDecrease" Cursor="Hand" Grid.Column="0" IsTabStop="False" Interval="50" Template="{StaticResource HorizontalDecrementTemplate}" Width="14" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Foreground}" Foreground="{TemplateBinding Foreground}"/>
                            <RepeatButton x:Name="HorizontalLargeDecrease" Grid.Column="1" IsTabStop="False" Interval="50" Template="{StaticResource RepeatButtonTemplate}" Width="0"/>
                            <Thumb x:Name="HorizontalThumb" Background="{TemplateBinding Background}" 
                                   Grid.Column="2" MinWidth="18" Template="{StaticResource HorizontalThumbTemplate}" 
                                   Width="18" BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush}"
                                   Foreground="{TemplateBinding Foreground}"/>
                            <RepeatButton x:Name="HorizontalLargeIncrease" Grid.Column="3" IsTabStop="False" Interval="50" Template="{StaticResource RepeatButtonTemplate}"/>
                            <RepeatButton x:Name="HorizontalSmallIncrease" Cursor="Hand" Grid.Column="4" IsTabStop="False" Interval="50" Template="{StaticResource HorizontalIncrementTemplate}" Width="14" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding BorderBrush}"/>
                        </Grid>
                        <Grid x:Name="VerticalRoot" Visibility="Collapsed" HorizontalAlignment="Right" Width="{TemplateBinding Width}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Rectangle RadiusY="1" RadiusX="1" Grid.RowSpan="5" StrokeThickness="0" Fill="{TemplateBinding Background}"/>
                            <RepeatButton x:Name="VerticalSmallDecrease" Cursor="Hand" Height="14" IsTabStop="False" Interval="50" Margin="0" Grid.Row="0" Template="{StaticResource VerticalDecrementTemplate}" Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"/>
                            <RepeatButton x:Name="VerticalLargeDecrease" Height="0" IsTabStop="False" Interval="50" Grid.Row="1" Template="{StaticResource RepeatButtonTemplate}"/>
                            <Thumb x:Name="VerticalThumb" MinHeight="18" Grid.Row="2" 
                                   Template="{StaticResource VerticalThumbTemplate}" Foreground="{TemplateBinding Foreground}"
                                   BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"/>
                            <RepeatButton x:Name="VerticalLargeIncrease" IsTabStop="False" Interval="50" Grid.Row="3" Template="{StaticResource RepeatButtonTemplate}"/>
                            <RepeatButton x:Name="VerticalSmallIncrease" Cursor="Hand" Height="14" IsTabStop="False" Interval="50" Margin="0" Grid.Row="4" Template="{StaticResource VerticalIncrementTemplate}" Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ScrollViewer">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
        <Setter Property="Padding" Value="4"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border CornerRadius="2" BorderBrush="{StaticResource AccentColorBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <ScrollContentPresenter x:Name="ScrollContentPresenter"
                                                  Cursor="{TemplateBinding Cursor}"
                                                  Margin="{TemplateBinding Padding}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"/>

                            <Rectangle Grid.Column="1" Grid.Row="1" Fill="{TemplateBinding Background}"/>

                            <ScrollBar x:Name="VerticalScrollBar"
                                     IsTabStop="False"
                                     Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                     Grid.Column="1" Grid.Row="0" Orientation="Vertical"
                                     ViewportSize="{TemplateBinding ViewportHeight}"
                                     Maximum="{TemplateBinding ScrollableHeight}"
                                     Minimum="0"
                                       Width="11"
                                     Value="{TemplateBinding VerticalOffset}"
                                       Foreground="{StaticResource AccentColorBrush}"
                                       BorderBrush="{StaticResource AccentColorBrush}"
                                       Background="Transparent"/>

                            <ScrollBar x:Name="HorizontalScrollBar"
                                     IsTabStop="False"
                                     Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                     Grid.Column="0" Grid.Row="1" Orientation="Horizontal"
                                     ViewportSize="{TemplateBinding ViewportWidth}"
                                     Maximum="{TemplateBinding ScrollableWidth}"
                                     Minimum="0"
                                       Height="11"
                                     Value="{TemplateBinding HorizontalOffset}"
                                       Foreground="{StaticResource AccentColorBrush}"
                                       BorderBrush="{StaticResource AccentColorBrush}"
                                       Background="Transparent"/>

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="esri:InfoWindow">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="StrokeThickness" Value="1" />
        <Setter Property="Placement" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="esri:InfoWindow">
                <Grid x:Name="Root" RenderTransformOrigin="{Binding RenderTransformOrigin, RelativeSource={RelativeSource TemplatedParent}}">
                  <Grid.RenderTransform>
                    <ScaleTransform ScaleY="0" ScaleX="0"/>
                  </Grid.RenderTransform>
                  <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                      <VisualState x:Name="Show">
                        <Storyboard>
                          <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                         Storyboard.TargetName="Root">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.35" Value="1">
                              <EasingDoubleKeyFrame.EasingFunction>
                                <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                              </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                          </DoubleAnimationUsingKeyFrames>
                          <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="Root">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.35" Value="1">
                              <EasingDoubleKeyFrame.EasingFunction>
                                <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                              </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                          </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Hide">
                        <Storyboard>
                          <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root" To="0" Duration="0" />
                        </Storyboard>
                      </VisualState>
                    </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Path x:Name="BorderPath"
                        Fill="{StaticResource BackgroundGradientBrush}"
                        Opacity="0.9"
                            Stroke="{StaticResource BackgroundTextColorBrush}"
                            StrokeThickness="{TemplateBinding StrokeThickness}"
                            StrokeLineJoin="Round" />
                  <ContentControl ContentTemplate="{TemplateBinding ContentTemplate}"
                                  Foreground="{StaticResource BackgroundTextColorBrush}"
                                    Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>
                </Grid>
              </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="Padding" Value="6,0,25,0" />
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="TabNavigation" Value="Once" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Name="comboToggleStyle" TargetType="ToggleButton">
                                <Setter Property="Foreground" Value="#FF333333"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                            <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                            <GradientStop Color="#FF718597" Offset="0.375"/>
                                            <GradientStop Color="#FF617584" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Padding" Value="3"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Grid Cursor="Hand">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="Opacity" To="1"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="Opacity" To="1"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="CheckStates">
                                                        <VisualState x:Name="Checked">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unchecked" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Focused" />
                                                        <VisualState x:Name="Unfocused" />
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Rectangle x:Name="Background" RadiusX="3" RadiusY="3" Fill="Transparent" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{TemplateBinding BorderBrush}"/>
                                                <Rectangle x:Name="BackgroundOverlay" Opacity="0" Fill="Transparent" StrokeThickness="{TemplateBinding BorderThickness}" 
                                                                               Stroke="{StaticResource BackgroundTextColorBrush}" Margin="{TemplateBinding BorderThickness}"/>
                                                <Rectangle x:Name="Highlight" Opacity="0" IsHitTestVisible="false" Stroke="{StaticResource AccentColorBrush}" StrokeThickness="1" Margin="{TemplateBinding BorderThickness}" />
                                                <ContentPresenter
                                                          x:Name="contentPresenter"
                                                          Content="{TemplateBinding Content}"
                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          Margin="{TemplateBinding Padding}"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ContentPresenterBorder">
                            <Grid>
                                <ToggleButton x:Name="DropDownToggle" Style="{StaticResource comboToggleStyle}"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Margin="0" HorizontalContentAlignment="Right" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                    <Path x:Name="BtnArrow" Height="4" Width="8" Stretch="Uniform" 
                                          Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " Margin="0,0,6,0" 
                                          HorizontalAlignment="Right" Fill="{StaticResource BackgroundTextColorBrush}" />
                                </ToggleButton>
                                <ContentPresenter x:Name="ContentPresenter"  
                                                        Margin="{TemplateBinding Padding}"  
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                </ContentPresenter>
                            </Grid>
                        </Border>
                        <Rectangle x:Name="FocusVisualElement" Margin="1"  Stroke="{StaticResource SelectionOutlineColorBrush}" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />
                        <Popup x:Name="Popup">
                            <Border x:Name="PopupBorder" HorizontalAlignment="Stretch" Height="Auto" BorderThickness="{TemplateBinding BorderThickness}" 
                                                        BorderBrush="{StaticResource BackgroundTextColorBrush}" 
                                                        Background="{StaticResource BackgroundGradientBrush}">
                                <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1" FontSize="11" FontWeight="Normal">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
