<!--
(c) Copyright ESRI.
This source is subject to the Microsoft Public License (Ms-PL).
Please see http://go.microsoft.com/fwlink/?LinkID=131993 for details.
All other rights reserved.
-->

<ResourceDictionary 
    xmlns:toolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Layout.Toolkit" 
    xmlns:toolkit2="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mapping="http://schemas.esri.com/arcgis/mapping/2009"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:mappingControls="clr-namespace:ESRI.ArcGIS.Mapping.Controls;assembly=ESRI.ArcGIS.Mapping.Controls" 
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:Converters="clr-namespace:ESRI.ArcGIS.Mapping.Controls.Converters;assembly=ESRI.ArcGIS.Mapping.Controls"
    xmlns:Layout="clr-namespace:ESRI.ArcGIS.Client.Application.Layout;assembly=ESRI.ArcGIS.Client.Application.Layout"
    xmlns:toolkitInput="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
    xmlns:local="clr-namespace:ESRI.ArcGIS.Mapping.Builder;assembly=ESRI.ArcGIS.Mapping.Builder">

    <sys:Double x:Key="FontSize">12.0</sys:Double>
    <mappingControls:VisibilityConverter x:Key="VisibilityConverter"/>
    <mappingControls:EnabledOpacityConverter x:Key="EnabledOpacityConverter" />
    <Layout:RTLHelper x:Key="RTLHelper" />
    <Converters:RtlImageConverter x:Key="RtlImageConverter" />
    <local:HasHeatMapConfigOptionsConverter x:Key="HasHeatMapConfigOptionsConverter" />

    <Style x:Key="LayerConfigButtonStyle" TargetType="mapping:RibbonDropDownButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="ExpandDirection" Value="HorizontalCenter"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="Auto" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize}"/> 
        <Setter Property="EnforceMinWidth" Value="False" />
        <Setter Property="ShowLeader" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="mapping:RibbonDropDownButton">
                    <Grid x:Name="LayoutRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="OpenStates">
                                <VisualState x:Name="PopupClosed"/>
                                <VisualState x:Name="PopupOpen"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2" To="#66DBE0EB" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border" />
                                        <ColorAnimation Duration="0:0:0.2" To="#FF9499A7" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border" />
                                        <ColorAnimation Duration="0:0:0.2" To="#FF000000" Storyboard.TargetProperty="(ContentControl.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To=".3"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="image" />
                                        <DoubleAnimation Duration="0"
                                                         To=".3"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="contentPresenter" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#BB9499A7" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border" />
                                        <ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" >
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusVisualElement" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border" BorderThickness="1" Margin="0" Background="#00000000" BorderBrush="#00000000" CornerRadius="3">
                            <Grid x:Name="grid" Background="Transparent" Margin="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="25"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Image x:Name="image" Source="{TemplateBinding ImageSource}" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                                <ContentControl x:Name="contentPresenter" Grid.Column="1" 
                                                Content="{TemplateBinding Content}" 
                                                ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                VerticalAlignment="{TemplateBinding VerticalAlignment}" 
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                Margin="{TemplateBinding Padding}"
                                                Foreground="{TemplateBinding Foreground}"/>
                            </Grid>
                        </Border>
                        <Rectangle x:Name="FocusVisualElement" RadiusX="2" RadiusY="2" Margin="1" Stroke="White" StrokeThickness="2" Opacity="0" IsHitTestVisible="false" HorizontalAlignment="Stretch"/>

                        <Popup x:Name="Popup">
                            <ContentControl Style="{TemplateBinding PopupContentContainerStyle}">
                                <ContentPresenter Content="{TemplateBinding PopupContent}"/>
                            </ContentControl>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxLayerConfiguration" TargetType="CheckBox">
        <Setter Property="Background" Value="#FF1F3B53" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="6"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid VerticalAlignment="Center">
                            <CheckBox x:Name="templateCheckBox" IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Margin="0,-2,0,0"></CheckBox>
                        </Grid>
                        <TextBlock Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" Text="{TemplateBinding Content}" Margin="3,0,0,0" 
                                   Opacity="{Binding IsEnabled, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EnabledOpacityConverter}, ConverterParameter=0.65}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxLayerConfigurationWithCollapse" TargetType="CheckBox">
        <Setter Property="Background" Value="#FF1F3B53" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="6"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid x:Name="gridCheckBox">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="gridCheckBox"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid VerticalAlignment="Center">
                            <CheckBox IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Margin="0,-2,0,0"></CheckBox>
                        </Grid>
                        <TextBlock Grid.Column="1" Text="{TemplateBinding Content}" Margin="3,0,0,0" 
                                   Opacity="{Binding IsEnabled, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EnabledOpacityConverter}, ConverterParameter=0.65}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LayerConfigurationStyle" TargetType="mappingControls:LayerConfiguration">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="mappingControls:LayerConfiguration">
                    <ScrollViewer VerticalScrollBarVisibility="Auto" Background="{x:Null}"
                                      Padding="0" BorderBrush="Transparent" BorderThickness="0" 
                                  Style="{StaticResource DesignHostScrollViewerStyle}">
                        <Grid >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <!-- Items above accordion -->
                            <StackPanel Orientation="Vertical">
                                <!--Symbology-->
                                    <mapping:RibbonDropDownButton x:Name="Symbology" 
                                                        PopupContentContainerStyle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PopupContentContainerStyle}"
                                                        PopupLeaderStyle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PopupLeaderStyle}"
                                                        Content="{Binding ConverterParameter=Symbology, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                        ImageSource="/ESRI.ArcGIS.Mapping.Controls;component/Images/toolbar/Symbol32.png"
                                                        ToolTipService.Placement="Right" Cursor="Hand"
                                                        Style="{StaticResource LayerConfigButtonStyle}">
                                        <mapping:RibbonDropDownButton.PopupContent>
                                            <mapping:LayerSymbologyConfigControl 
                                                Layer="{Binding View.SelectedLayer, 
                                                    RelativeSource={RelativeSource TemplatedParent}}" 
                                                SymbolConfigProvider="{Binding RelativeSource={RelativeSource TemplatedParent}, 
                                                    Path=View.SymbolConfigProvider}" 
                                                ThemeColors="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=View.ThemeColors}"
                                                Foreground="Black"/>
                                        </mapping:RibbonDropDownButton.PopupContent>
                                        <mapping:RibbonDropDownButton.Command>
                                            <mapping:CheckIfCanSetRendererCommand />
                                        </mapping:RibbonDropDownButton.Command> 
                                        <ToolTipService.ToolTip>
                                            <ToolTip FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}">
                                                <Border BorderBrush="Black"
                                                        BorderThickness="1"
                                                        Background="{StaticResource TooltipBackgroundBrush}"
                                                        Margin="-8,-3">
                                                    <StackPanel Margin="6,8">
                                                        <TextBlock Text="{Binding ConverterParameter=Symbology, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                                   FontWeight="Bold"
                                                                   Foreground="Black" />
                                                        <TextBlock Text="{Binding ConverterParameter=SymbologyDescription, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                                   Margin="0,3,0,0"
                                                                   MaxWidth="350"
                                                                   TextWrapping="Wrap"
                                                                   Foreground="Black" />
                                                    </StackPanel>
                                                </Border>
                                            </ToolTip>
                                        </ToolTipService.ToolTip>
                                    </mapping:RibbonDropDownButton>
                                <!--Map Tips-->
                                    <mapping:RibbonDropDownButton x:Name="Popups"
                                                    PopupContentContainerStyle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PopupContentContainerStyle}"
                                                    PopupLeaderStyle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PopupLeaderStyle}"
                                                    Content="{Binding ConverterParameter=Popups, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                    ImageSource="/ESRI.ArcGIS.Mapping.Controls;component/Images/toolbar/HTMLPopUpTool32.png"
                                                        ToolTipService.Placement="Right" Cursor="Hand"
                                                    Style="{StaticResource LayerConfigButtonStyle}">
                                        <mapping:RibbonDropDownButton.PopupContent>
                                            <mapping:MapTipsConfig Layer="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=View.SelectedLayer}" VerticalAlignment="Stretch"
                                                                   Foreground="Black" MaxHeight="420" />
                                        </mapping:RibbonDropDownButton.PopupContent>
                                        <mapping:RibbonDropDownButton.Command>
                                            <mapping:CheckIfLayerSupportsPopUpsCommand />
                                        </mapping:RibbonDropDownButton.Command>
                                        <ToolTipService.ToolTip>
                                            <ToolTip FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}">
                                                <Border BorderBrush="Black"
                                                        BorderThickness="1"
                                                        Background="{StaticResource TooltipBackgroundBrush}"
                                                        Margin="-8,-3">
                                                    <StackPanel Margin="6,8">
                                                        <TextBlock Text="{Binding ConverterParameter=Popups, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                                   FontWeight="Bold"
                                                                   Foreground="Black" />
                                                        <TextBlock Text="{Binding ConverterParameter=PopupsDescription, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                                   Margin="0,3,0,0"
                                                                   MaxWidth="350"
                                                                   TextWrapping="Wrap"
                                                                   Foreground="Black" />
                                                    </StackPanel>
                                                </Border>
                                            </ToolTip>
                                        </ToolTipService.ToolTip>
                                    </mapping:RibbonDropDownButton>
                                <!--Attribute Display-->
                                    <mapping:RibbonDropDownButton x:Name="Table"
                                                    PopupContentContainerStyle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PopupContentContainerStyle}"
                                                    PopupLeaderStyle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PopupLeaderStyle}"
                                                    Content="{Binding ConverterParameter=Table, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                    ImageSource="/ESRI.ArcGIS.Mapping.Controls;component/Images/toolbar/TableSettings32.png"
                                                    ToolTipService.Placement="Right" Cursor="Hand"
                                                    Style="{StaticResource LayerConfigButtonStyle}"
                                                    >
                                        <mapping:RibbonDropDownButton.PopupContent>
                                            <mapping:AttributeDisplayConfig MaxHeight="400" Layer="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=View.SelectedLayer}" VerticalAlignment="Stretch" />
                                        </mapping:RibbonDropDownButton.PopupContent>
                                        <mapping:RibbonDropDownButton.Command>
                                            <mapping:CheckIfGraphicsLayerCommand />
                                        </mapping:RibbonDropDownButton.Command>
                                        <ToolTipService.ToolTip>
                                            <ToolTip FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}">
                                                <Border BorderBrush="Black"
                                                        BorderThickness="1"
                                                        Background="{StaticResource TooltipBackgroundBrush}"
                                                        Margin="-8,-3">
                                                    <StackPanel Margin="6,8">
                                                        <TextBlock Text="{Binding ConverterParameter=Table, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                                   FontWeight="Bold"
                                                                   Foreground="Black" />
                                                        <TextBlock Text="{Binding ConverterParameter=TableDescription, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                                   Margin="0,3,0,0"
                                                                   MaxWidth="350"
                                                                   TextWrapping="Wrap"
                                                                   Foreground="Black" />
                                                    </StackPanel>
                                                </Border>
                                            </ToolTip>
                                        </ToolTipService.ToolTip>
                                    </mapping:RibbonDropDownButton>
                                <!-- Filter -->                                    
                                    <mapping:RibbonDropDownButton x:Name="Filter"
                                                        PopupContentContainerStyle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PopupContentContainerStyle}"
                                                        PopupLeaderStyle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PopupLeaderStyle}"
                                                        Content="{Binding ConverterParameter=Filter, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                        ImageSource="/ESRI.ArcGIS.Mapping.Controls;component/Images/toolbar/Filter_C_32.png"
                                                        ToolTipService.Placement="Right" Cursor="Hand"
                                                        Style="{StaticResource LayerConfigButtonStyle}">
                                        <mapping:RibbonDropDownButton.PopupContent>
                                            <mapping:DefineQueryControl FeatureLayer="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=View.SelectedLayer}" MaxWidth="600"/>
                                        </mapping:RibbonDropDownButton.PopupContent>
                                        <mapping:RibbonDropDownButton.Command>
                                            <mapping:CheckIfFeatureLayerCommand />
                                        </mapping:RibbonDropDownButton.Command>
                                        <ToolTipService.ToolTip>
                                            <ToolTip FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}">
                                                <Border BorderBrush="Black"
                                                        BorderThickness="1"
                                                        Background="{StaticResource TooltipBackgroundBrush}"
                                                        Margin="-8,-3">
                                                    <StackPanel Margin="6,8">
                                                        <TextBlock Text="{Binding ConverterParameter=Filter, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                                   FontWeight="Bold"
                                                                   Foreground="Black" />
                                                        <TextBlock Text="{Binding ConverterParameter=FilterDescription, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                                   Margin="0,3,0,0"
                                                                   MaxWidth="350"
                                                                   TextWrapping="Wrap"
                                                                   Foreground="Black" />
                                                    </StackPanel>
                                                </Border>
                                            </ToolTip>
                                        </ToolTipService.ToolTip>
                                    </mapping:RibbonDropDownButton>                                
                            </StackPanel>

                            <toolkit:Accordion x:Name="LayerConfigurationAccordion" HorizontalAlignment="Stretch" Grid.Row="1"
                                           ItemContainerStyle="{StaticResource CustomAccordionItemStyle}"
                                            BorderBrush="Transparent" Padding="0"
                                           Background="Transparent"
                                           Foreground="White">
                                <toolkit:AccordionItem Header="{Binding ConverterParameter=Transparency, Converter={StaticResource Localization}, Source={StaticResource Localization}}" HorizontalContentAlignment="Stretch" >
                                    <StackPanel Orientation="Vertical" FlowDirection="LeftToRight" >
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PropertyChanged"
                                                            SourceObject="{StaticResource RTLHelper}">
                                                <ei:ChangePropertyAction PropertyName="FlowDirection"
                                                                         Value="LeftToRight" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <Image Source="/ESRI.ArcGIS.Mapping.Controls;component/Images/toolbar/transparencyslider_Horizontal.png"
                                               Height="18"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Stretch"
                                               Stretch="Fill"
                                               RenderTransformOrigin="0.5,0.5"
                                               FlowDirection="LeftToRight"
                                               Margin="5,7,5,5">
                                            <Image.Projection>
                                                <PlaneProjection RotationY="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection, Converter={StaticResource RtlImageConverter}}" />
                                            </Image.Projection>
                                        </Image>
                                        <Slider Orientation="Horizontal"
                                                Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=View.SelectedLayer.Opacity, Mode=TwoWay}"
                                                Minimum="0"
                                                Maximum="1"
                                                Height="30"
                                                FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}"
                                                IsDirectionReversed="True"
                                                Margin="5,0,5,7" />
                                    </StackPanel>
                                </toolkit:AccordionItem>

                                <toolkit:AccordionItem Header="{Binding ConverterParameter=AutoUpdates, Converter={StaticResource Localization}, Source={StaticResource Localization}}" HorizontalContentAlignment="Stretch" 
                                                   Visibility="{Binding ElementName=AutoUpdateConfig, Converter={StaticResource VisibilityConverter}, Path=IsEnabled}">
                                    <mapping:AutoUpdateConfig x:Name="AutoUpdateConfig" Layer="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=View.SelectedLayer}"
                                                          Style="{StaticResource LayerConfigurationAutoUpdateConfigStyle}"></mapping:AutoUpdateConfig>
                                </toolkit:AccordionItem>

                                <toolkit:AccordionItem 
                                    Header="{Binding ConverterParameter=HeatMap, 
                                        Converter={StaticResource Localization}, 
                                        Source={StaticResource Localization}}" 
                                    HorizontalContentAlignment="Stretch" 
                                    Visibility="{Binding View.SelectedLayer, 
                                        Converter={StaticResource HasHeatMapConfigOptionsConverter},
                                        RelativeSource={RelativeSource TemplatedParent}}">
                                    <StackPanel>
                                        <mappingControls:RibbonDropDownButton x:Name="AddHeatMapButton"
                                            ImageSource="/ESRI.ArcGIS.Mapping.Controls;component/Images/toolbar/AddHeatMap32.png"
                                            Style="{StaticResource LayerConfigButtonStyle}"
                                            ToolTipService.Placement="Right" Cursor="Hand"
                                            Content="{Binding ConverterParameter=HeatMapAdd, Converter={StaticResource Localization}, Source={StaticResource Localization}}">
                                            <mappingControls:RibbonDropDownButton.Command>
                                                <mappingControls:AddHeatMapCommand />
                                            </mappingControls:RibbonDropDownButton.Command>
                                            <ToolTipService.ToolTip>
                                                <ToolTip FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}">
                                                    <Border BorderBrush="Black"
                                            BorderThickness="1"
                                            Background="{StaticResource TooltipBackgroundBrush}"
                                            Margin="-8,-3">
                                                        <StackPanel Margin="6,8">
                                                            <TextBlock Text="{Binding ConverterParameter=HeatMapAdd, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                       FontWeight="Bold"
                                                       Foreground="Black" />
                                                            <TextBlock Text="{Binding ConverterParameter=AddHeatMapDescription, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                       Margin="0,3,0,0"
                                                       MaxWidth="350"
                                                       TextWrapping="Wrap"
                                                       Foreground="Black" />
                                                        </StackPanel>
                                                    </Border>
                                                </ToolTip>
                                            </ToolTipService.ToolTip>
                                        </mappingControls:RibbonDropDownButton >
                                        
                                        <mappingControls:RibbonDropDownButton x:Name="IntensitySliderDropdownButton"
                                            PopupContentContainerStyle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PopupContentContainerStyle}"
                                            PopupLeaderStyle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PopupLeaderStyle}"
                                            Content="{Binding ConverterParameter=Intensity, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                            ImageSource="/ESRI.ArcGIS.Mapping.Controls;component/Images/toolbar/HeatMapIntensity32.png"
                                            ToolTipService.Placement="Right" Cursor="Hand"
                                            Style="{StaticResource LayerConfigButtonStyle}">
                                            <mappingControls:RibbonDropDownButton.PopupContent>
                                                <StackPanel Orientation="Vertical" FlowDirection="LeftToRight">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="PropertyChanged"  SourceObject="{StaticResource RTLHelper}">
                                                            <ei:ChangePropertyAction PropertyName="FlowDirection" Value="LeftToRight" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                    <Image Source="/ESRI.ArcGIS.Mapping.Controls;component/Images/toolbar/intensitySlider_Horizontal.png"
                                                       Stretch="None"
                                                       Width="145"
                                                       VerticalAlignment="Center"
                                                       HorizontalAlignment="Center"
                                                       RenderTransformOrigin="0.5,0.5"
                                                       Margin="5,7,5,5">
                                                        <Image.Projection>
                                                            <PlaneProjection RotationY="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection, Converter={StaticResource RtlImageConverter}}" />
                                                        </Image.Projection>
                                                    </Image>
                                                    <Slider x:Name="IntensitySlider"
                                                        Orientation="Horizontal"
                                                        Value="{Binding View.SelectedLayer.Intensity, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                        Minimum="5"
                                                        Maximum="100"
                                                        Width="145"
                                                        Height="30"
                                                        FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}"
                                                        Margin="5,0,5,7" />
                                                </StackPanel>
                                            </mappingControls:RibbonDropDownButton.PopupContent>
                                            <mappingControls:RibbonDropDownButton.Command>
                                                <mappingControls:CheckIfHeatmapLayerCommand />
                                            </mappingControls:RibbonDropDownButton.Command>
                                            <ToolTipService.ToolTip>
                                                <ToolTip FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}">
                                                    <Border BorderBrush="Black"
                                                        BorderThickness="1"
                                                        Background="{StaticResource TooltipBackgroundBrush}"
                                                        Margin="-8,-3">
                                                        <StackPanel Margin="6,8">
                                                            <TextBlock Text="{Binding ConverterParameter=Intensity, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                               FontWeight="Bold"
                                                               Foreground="Black" />
                                                            <TextBlock Text="{Binding ConverterParameter=IntensityDescription, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                               Margin="0,3,0,0"
                                                               MaxWidth="350"
                                                               TextWrapping="Wrap"
                                                               Foreground="Black" />
                                                        </StackPanel>
                                                    </Border>
                                                </ToolTip>
                                            </ToolTipService.ToolTip>
                                        </mappingControls:RibbonDropDownButton>

                                        <mappingControls:RibbonDropDownButton x:Name="HeatMapColorRampButton"
                                            PopupContentContainerStyle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PopupContentContainerStyle}"
                                            PopupLeaderStyle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PopupLeaderStyle}"
                                            Content="{Binding ConverterParameter=ColorScheme, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                            ImageSource="/ESRI.ArcGIS.Mapping.Controls;component/Images/toolbar/ColorScheme32.png"
                                            ToolTipService.Placement="Right" Cursor="Hand"
                                            Style="{StaticResource LayerConfigButtonStyle}">
                                            <mappingControls:RibbonDropDownButton.PopupContent>
                                                <StackPanel Orientation="Horizontal">
                                                    <mappingControls:ColorRampControl x:Name="HeatMapColorRampControl" 
                                                        ColorRampType="HeatMap" Background="Transparent" 
                                                        SymbolConfigProvider="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=View.SymbolConfigProvider}"
                                                        SelectedColorBrushStops="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=View.SelectedLayer.Gradient, Mode=TwoWay}" />
                                                </StackPanel>
                                            </mappingControls:RibbonDropDownButton.PopupContent>
                                            <mappingControls:RibbonDropDownButton.Command>
                                                <mappingControls:CheckIfHeatmapLayerCommand />
                                            </mappingControls:RibbonDropDownButton.Command>
                                            <ToolTipService.ToolTip>
                                                <ToolTip FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}">
                                                    <Border BorderBrush="Black"
                                            BorderThickness="1"
                                            Background="{StaticResource TooltipBackgroundBrush}"
                                            Margin="-8,-3">
                                                        <StackPanel Margin="6,8">
                                                            <TextBlock Text="{Binding ConverterParameter=ColorScheme, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                       FontWeight="Bold"
                                                       Foreground="Black" />
                                                            <TextBlock Text="{Binding ConverterParameter=HeatMapColorDescription, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                       Margin="0,3,0,0"
                                                       MaxWidth="350"
                                                       TextWrapping="Wrap"
                                                       Foreground="Black" />
                                                        </StackPanel>
                                                    </Border>
                                                </ToolTip>
                                            </ToolTipService.ToolTip>
                                        </mappingControls:RibbonDropDownButton>
                                    </StackPanel>
                                </toolkit:AccordionItem>

                                <toolkit:AccordionItem Header="{Binding ConverterParameter=Clustering, Converter={StaticResource Localization}, Source={StaticResource Localization}}" HorizontalContentAlignment="Stretch" 
                                                   Visibility="{Binding ElementName=ClustererConfigControl, Converter={StaticResource VisibilityConverter}, Path=IsEnabled}">
                                    <Grid>
                                        <mapping:ClustererConfigControl x:Name="ClustererConfigControl"
                                                    Style="{StaticResource LayerConfigurationClustererConfigStyle}"
                                                    ThemeColors="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=View.ThemeColors}"
                                                    Layer="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=View.SelectedLayer}" />
                                    </Grid>
                                </toolkit:AccordionItem>

                                <toolkit:AccordionItem Header="{Binding ConverterParameter=FeatureRetrieval, Converter={StaticResource BuilderLocalization}, Source={StaticResource BuilderLocalization}}"
                                                      HorizontalContentAlignment="Stretch"
                                                      Visibility="{Binding ElementName=FeatureLayerModeConfigControl, Converter={StaticResource VisibilityConverter}, Path=IsEnabled}">
                                   <Grid>
                                        <mapping:FeatureLayerModeConfigControl x:Name="FeatureLayerModeConfigControl" Height="Auto" Foreground="White"
                                                Layer="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=View.SelectedLayer}" />                                            
                                    </Grid>
                                </toolkit:AccordionItem>
                                <!--<toolkit:AccordionItem Header="{Binding ConverterParameter=SecureServices, Converter={StaticResource Localization}, Source={StaticResource Localization}}" HorizontalContentAlignment="Stretch" 
                                                   Visibility="{Binding ElementName=SecureServicesLayerConfig, Converter={StaticResource VisibilityConverter}, Path=IsEnabled}">
                                    <Grid>
                                        <mapping:SecureServicesLayerConfig x:Name="SecureServicesLayerConfig" Foreground="White"/>
                                    </Grid>
                                </toolkit:AccordionItem>-->
                            </toolkit:Accordion>
                        </Grid>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Accordion styles start -->

    <Style x:Key="CustomAccordionButtonStyle" TargetType="toolkit2:AccordionButton">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="toolkit2:AccordionButton">
                    <Grid Background="Transparent" Margin="{TemplateBinding Padding}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpandDirectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="ExpandDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="icon">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="icon">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="header">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="header">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="Width" Storyboard.TargetName="cd0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Auto"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="Width" Storyboard.TargetName="cd1">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00" To="-90" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="arrow"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ExpandUp">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="icon">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="icon">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="header">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="header">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="Width" Storyboard.TargetName="cd0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="Width" Storyboard.TargetName="cd1">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Auto"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00" To="90" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="arrow"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ExpandLeft">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="icon">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="icon">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="header">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="header">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="rd0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Auto"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="rd1">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="LayoutTransform" Storyboard.TargetName="header">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <TransformGroup>
                                                        <RotateTransform Angle="90"/>
                                                    </TransformGroup>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="arrow"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ExpandRight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="icon">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="icon">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="header">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="header">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="rd0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="rd1">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Auto"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetProperty="LayoutTransform" Storyboard.TargetName="header">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <TransformGroup>
                                                        <RotateTransform Angle="-90"/>
                                                    </TransformGroup>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00" To="180" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="arrow"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.3" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="icon"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Expanded" />
                                
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:00"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                    <VisualTransition From="MouseOver" GeneratedDuration="00:00:00.1" To="Normal"/>
                                    <VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
                                    <VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBackground">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.3"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBackground">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.3"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard/>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="background" Background="{TemplateBinding Background}" CornerRadius="1,1,1,1">
                            <Grid>
                                <Border x:Name="ExpandedBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#FFBADDE9" CornerRadius="1,1,1,1" Height="Auto" Margin="0,0,0,0" Opacity="0" VerticalAlignment="Stretch"/>
                                <Border x:Name="MouseOverBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="White" CornerRadius="1,1,1,1" Height="Auto" Margin="0,0,0,0" Opacity="0" VerticalAlignment="Stretch"/>
                                <Grid Background="Transparent" Height="30">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="cd0" Width="Auto"/>
                                        <ColumnDefinition x:Name="cd1" Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition x:Name="rd0" Height="Auto" MinHeight="30"/>
                                        <RowDefinition x:Name="rd1" Height="0"/>
                                        <RowDefinition Height="3"/>
                                    </Grid.RowDefinitions>
                                    <Grid x:Name="icon" Grid.Column="0" HorizontalAlignment="Center" Height="19" Grid.Row="0" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" Width="19" UseLayoutRounding="False">
                                        <Grid.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="-90"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Grid.RenderTransform>
                                        <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" Height="Auto" 
                                              Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5" Stroke="White" 
                                              StrokeThickness="2" VerticalAlignment="Center" Width="Auto">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                    <toolkit:LayoutTransformer x:Name="header" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="6,6,0,0" Grid.Row="0" Grid.RowSpan="2"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomAccordionItemStyle" TargetType="toolkit:AccordionItem">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="#FFB1B7C6"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="toolkit:AccordionItem">
                    <Grid Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(ExpandableContentControl.Percentage)" Storyboard.TargetName="ExpandSite">
                                            <SplineDoubleKeyFrame KeySpline="0.2,0,0,1" KeyTime="00:00:00.3" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00.3" Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ExpandSite">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(ExpandableContentControl.Percentage)" Storyboard.TargetName="ExpandSite">
                                            <SplineDoubleKeyFrame KeySpline="0.2,0,0,1" KeyTime="00:00:00.3" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LockedStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Locked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="ExpanderButton">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="False"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unlocked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="ExpanderButton">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpandDirectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="ExpandDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="rd1">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Width" Storyboard.TargetName="cd0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ExpandUp">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="ExpanderButton">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="ExpandSite">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="rd0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Width" Storyboard.TargetName="cd0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ExpandLeft">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="ExpanderButton">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="ExpandSite">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.RowSpan)" Storyboard.TargetName="ExpanderButton">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.RowSpan)" Storyboard.TargetName="ExpandSite">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="ExpanderButton">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="ExpandSite">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="rd0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Width" Storyboard.TargetName="cd0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ExpandRight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="ExpanderButton">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="ExpandSite">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.RowSpan)" Storyboard.TargetName="ExpanderButton">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.RowSpan)" Storyboard.TargetName="ExpandSite">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="ExpandSite">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="ExpandSite">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="rd0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Width" Storyboard.TargetName="cd1">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1,1,1,1" Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="cd0" Width="Auto"/>
                                    <ColumnDefinition x:Name="cd1" Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="rd0" Height="Auto" MinHeight="22"/>
                                    <RowDefinition x:Name="rd1" Height="Auto"/>
                                </Grid.RowDefinitions>
                                <toolkit2:AccordionButton AutomationProperties.AutomationId="{TemplateBinding Header}"
                                                          x:Name="ExpanderButton" Background="{StaticResource MapCenterBackgroundGradientBrush}"  
                                                          ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" 
                                                          Foreground="White" FontStyle="Italic" FontStretch="{TemplateBinding FontStretch}" 
                                                          FontSize="{StaticResource FontSize}" FontFamily="Verdana" 
                                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                          IsTabStop="True" IsChecked="{TemplateBinding IsSelected}" Margin="0" 
                                                          Padding="0,0,0,0" Grid.Row="0" Style="{StaticResource CustomAccordionButtonStyle}" 
                                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" VerticalAlignment="Center" FontWeight="Bold" Height="30"
                                                          Cursor="Hand">
                                </toolkit2:AccordionButton>
                                <toolkit2:ExpandableContentControl x:Name="ExpandSite" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="False" Margin="0" Percentage="0" RevealMode="{TemplateBinding ExpandDirection}" Grid.Row="1" Style="{TemplateBinding ExpandableContentControlStyle}" VerticalAlignment="{TemplateBinding VerticalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Accordion styles end -->

    <!-- Clustering styles start -->

    <Style x:Key="LayerConfigurationClustererConfigStyle" TargetType="mappingControls:ClustererConfigControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="mappingControls:ClustererConfigControl">
                    <Grid>
                        <StackPanel Orientation="Vertical">
                            <StackPanel.Resources>
                                <mappingControls:IsClusteredConverter x:Key="IsClusteredConverter" Layer="{Binding Layer, RelativeSource={RelativeSource TemplatedParent}}"
                                                                                         CheckBox="{Binding ElementName=UseClusteringCheckBox}"/>
                            </StackPanel.Resources>
                            <CheckBox x:Name="UseClusteringCheckBox" 
                                      Style="{StaticResource CheckBoxLayerConfiguration}"
                                                        ToolTipService.Placement="Right" Cursor="Hand"
                                      Content="{Binding ConverterParameter=UsePointClustering, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                      IsChecked="{Binding Layer.Clusterer, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource IsClusteredConverter}, Mode=TwoWay, TargetNullValue=False, FallbackValue=False}">
                                <ToolTipService.ToolTip>
                                    <ToolTip FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}">
                                        <Border BorderBrush="Black"
                                                BorderThickness="1"
                                                Background="{StaticResource TooltipBackgroundBrush}"
                                                Margin="-8,-3">
                                            <StackPanel Margin="6,8">
                                                <TextBlock Text="{Binding ConverterParameter=UsePointClustering, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                           FontWeight="Bold"
                                                           Foreground="Black" />
                                                <TextBlock Text="{Binding ConverterParameter=UsePointClusteringDescription, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                           Margin="0,3,0,0"
                                                           MaxWidth="350"
                                                           TextWrapping="Wrap"
                                                           Foreground="Black" />
                                            </StackPanel>
                                        </Border>
                                    </ToolTip>
                                </ToolTipService.ToolTip>
                            </CheckBox>

                            <Grid Margin="5,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30" />
                                    <RowDefinition Height="30" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <!--Row 1-->
                                <TextBlock Text="{Binding ConverterParameter=MaxPointsPrompt, Converter={StaticResource Localization}, Source={StaticResource Localization}}" 
                                   HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="{StaticResource FontSize}"
                                                        ToolTipService.Placement="Right"
                                           ToolTipService.PlacementTarget="{Binding ElementName=MaxPointsUpDown}"
                                           Opacity="{Binding IsChecked, ElementName=UseClusteringCheckBox, Converter={StaticResource EnabledOpacityConverter}, ConverterParameter=0.65}">
                                    <ToolTipService.ToolTip>
                                        <ToolTip FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}">
                                            <Border BorderBrush="Black"
                                                    BorderThickness="1"
                                                    Background="{StaticResource TooltipBackgroundBrush}"
                                                    Margin="-8,-3">
                                                <StackPanel Margin="6,8">
                                                    <TextBlock Text="{Binding ConverterParameter=MaxPoints, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                               FontWeight="Bold"
                                                               Foreground="Black" />
                                                    <TextBlock Text="{Binding ConverterParameter=MaxPointsDescription, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                               Margin="0,3,0,0"
                                                               MaxWidth="350"
                                                               TextWrapping="Wrap"
                                                               Foreground="Black" />
                                                </StackPanel>
                                            </Border>
                                        </ToolTip>
                                    </ToolTipService.ToolTip>
                                </TextBlock>

                                <toolkitInput:NumericUpDown x:Name="MaxPointsUpDown" Value="10" Grid.Column="1" DecimalPlaces="0" Width="50" Minimum="2" Maximum="20" Increment="1"
                                                        ToolTipService.Placement="Right" Cursor="Hand"
                                                   IsEnabled="{Binding IsChecked, ElementName=UseClusteringCheckBox, Mode=OneWay}">
                                    <ToolTipService.ToolTip>
                                        <ToolTip FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}">
                                            <Border BorderBrush="Black"
                                                    BorderThickness="1"
                                                    Background="{StaticResource TooltipBackgroundBrush}"
                                                    Margin="-8,-3">
                                                <StackPanel Margin="6,8">
                                                    <TextBlock Text="{Binding ConverterParameter=MaxPoints, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                               FontWeight="Bold"
                                                               Foreground="Black" />
                                                    <TextBlock Text="{Binding ConverterParameter=MaxPointsDescription, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                               Margin="0,3,0,0"
                                                               MaxWidth="350"
                                                               TextWrapping="Wrap"
                                                               Foreground="Black" />
                                                </StackPanel>
                                            </Border>
                                        </ToolTip>
                                    </ToolTipService.ToolTip>
                                </toolkitInput:NumericUpDown>
                                
                                <!--Row 2-->
                                <TextBlock Text="{Binding ConverterParameter=RadiusPrompt, Converter={StaticResource Localization}, Source={StaticResource Localization}}" 
                                       Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="{StaticResource FontSize}"
                                            ToolTipService.Placement="Right"
                                           ToolTipService.PlacementTarget="{Binding ElementName=RadiusUpDown}"
                                           Opacity="{Binding IsChecked, ElementName=UseClusteringCheckBox, Converter={StaticResource EnabledOpacityConverter}, ConverterParameter=0.65}">
                                    <ToolTipService.ToolTip>
                                        <ToolTip FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}">
                                            <Border BorderBrush="Black"
                                                    BorderThickness="1"
                                                    Background="{StaticResource TooltipBackgroundBrush}"
                                                    Margin="-8,-3">
                                                <StackPanel Margin="6,8">
                                                    <TextBlock Text="{Binding ConverterParameter=Radius, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                               FontWeight="Bold"
                                                               Foreground="Black" />
                                                    <TextBlock Text="{Binding ConverterParameter=RadiusDescription, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                               Margin="0,3,0,0"
                                                               MaxWidth="350"
                                                               TextWrapping="Wrap"
                                                               Foreground="Black" />
                                                </StackPanel>
                                            </Border>
                                        </ToolTip>
                                    </ToolTipService.ToolTip>
                                </TextBlock>

                                <toolkitInput:NumericUpDown x:Name="RadiusUpDown" Value="20" DecimalPlaces="0" Grid.Row="1" Grid.Column="1" Width="50" Minimum="1" Maximum="50" Increment="1"
                                                        ToolTipService.Placement="Right" Cursor="Hand"
                                       IsEnabled="{Binding IsChecked, ElementName=UseClusteringCheckBox, Mode=OneWay}">
                                    <ToolTipService.ToolTip>
                                        <ToolTip FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}">
                                            <Border BorderBrush="Black"
                                                    BorderThickness="1"
                                                    Background="{StaticResource TooltipBackgroundBrush}"
                                                    Margin="-8,-3">
                                                <StackPanel Margin="6,8">
                                                    <TextBlock Text="{Binding ConverterParameter=Radius, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                               FontWeight="Bold"
                                                               Foreground="Black" />
                                                    <TextBlock Text="{Binding ConverterParameter=RadiusDescription, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                               Margin="0,3,0,0"
                                                               MaxWidth="350"
                                                               TextWrapping="Wrap"
                                                               Foreground="Black" />
                                                </StackPanel>
                                            </Border>
                                        </ToolTip>
                                    </ToolTipService.ToolTip>
                                </toolkitInput:NumericUpDown>
                            </Grid>

                            <mappingControls:SolidColorBrushSelector x:Name="BackgroundColorSelector"
                                                ThemeColors="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=View.ThemeColors}"
                                                Style="{StaticResource SimpleSolidColorBrushSelectorStyle}"
                                                FontSize="{StaticResource FontSize}"
                                                IsEnabled="{Binding IsChecked, ElementName=UseClusteringCheckBox, Mode=OneWay}"
                                                Tag="{Binding ConverterParameter=ClusterColor, Converter={StaticResource Localization}, Source={StaticResource Localization}}" 
                                                        ToolTipService.Placement="Right" Cursor="Hand"
                                                Image="/ESRI.ArcGIS.Mapping.Controls;component/Images/toolbar/FillColor16.png" >
                                <ToolTipService.ToolTip>
                                    <ToolTip FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}">
                                        <Border BorderBrush="Black"
                                                BorderThickness="1"
                                                Background="{StaticResource TooltipBackgroundBrush}"
                                                Margin="-8,-3">
                                            <StackPanel Margin="6,8">
                                                <TextBlock Text="{Binding ConverterParameter=ClusterColor, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                           FontWeight="Bold"
                                                           Foreground="Black" />
                                                <TextBlock Text="{Binding ConverterParameter=ClusterColorDescription, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                           Margin="0,3,0,0"
                                                           MaxWidth="350"
                                                           TextWrapping="Wrap"
                                                           Foreground="Black" />
                                            </StackPanel>
                                        </Border>
                                    </ToolTip>
                                </ToolTipService.ToolTip>
                            </mappingControls:SolidColorBrushSelector>

                            <mappingControls:SolidColorBrushSelector x:Name="ForegroundColorSelector"
                                                ThemeColors="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=View.ThemeColors}"
                                                Style="{StaticResource SimpleSolidColorBrushSelectorStyle}"
                                                FontSize="{StaticResource FontSize}"
                                                IsEnabled="{Binding IsChecked, ElementName=UseClusteringCheckBox, Mode=OneWay}"
                                                Tag="{Binding ConverterParameter=ClusterTextColor, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                        ToolTipService.Placement="Right" Cursor="Hand"
                                                Image="/ESRI.ArcGIS.Mapping.Controls;component/Images/toolbar/TextColor16.png" >
                                <ToolTipService.ToolTip>
                                    <ToolTip FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}">
                                        <Border BorderBrush="Black"
                                                BorderThickness="1"
                                                Background="{StaticResource TooltipBackgroundBrush}"
                                                Margin="-8,-3">
                                            <StackPanel Margin="6,8">
                                                <TextBlock Text="{Binding ConverterParameter=ClusterTextColor, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                           FontWeight="Bold"
                                                           Foreground="Black" />
                                                <TextBlock Text="{Binding ConverterParameter=ClusterTextColorDescription, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                           Margin="0,3,0,0"
                                                           MaxWidth="350"
                                                           TextWrapping="Wrap"
                                                           Foreground="Black" />
                                            </StackPanel>
                                        </Border>
                                    </ToolTip>
                                </ToolTipService.ToolTip>
                            </mappingControls:SolidColorBrushSelector>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SimpleSolidColorBrushSelectorStyle" TargetType="mappingControls:SolidColorBrushSelector">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="mappingControls:SolidColorBrushSelector">
                    <mappingControls:RibbonDropDownButton x:Name="DropDownButton" Margin="{TemplateBinding Margin}" 
                                          AutomationProperties.AutomationId="{TemplateBinding Tag}"
                                          FontSize="{TemplateBinding FontSize}"
                                          Style="{StaticResource LayerConfigButtonStyle}"
                                          Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                          IsContentPopupOpen="{Binding Path=IsContentPopupOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ImageSource="{TemplateBinding Image}"
                                          Content="{TemplateBinding Tag}">
                        <mappingControls:RibbonDropDownButton.PopupContent>
                            <mappingControls:ColorPalette x:Name="ColorPalette" ThemeColors="{Binding Path=ThemeColors, RelativeSource={RelativeSource TemplatedParent}}" Background="White" HorizontalAlignment="Stretch">
                                <mappingControls:ColorPalette.Colors>
                                    <Color>#FFFFFF</Color>
                                    <Color>#000000</Color>
                                    <Color>#EEECE1</Color>
                                    <Color>#1F497D</Color>
                                    <Color>#4F81BD</Color>
                                    <Color>#C0504D</Color>
                                    <Color>#9BBB59</Color>
                                    <Color>#8064A2</Color>
                                    <Color>#4BACC6</Color>
                                    <Color>#F79646</Color>
                                    <Color>#FF0000</Color>
                                    <Color>#FFC000</Color>
                                    <Color>#FFFF00</Color>
                                    <Color>#92D050</Color>
                                    <Color>#00B050</Color>
                                    <Color>#00B0F0</Color>
                                    <Color>#0070C0</Color>
                                    <Color>#002060</Color>
                                    <Color>#7030A0</Color>
                                </mappingControls:ColorPalette.Colors>
                            </mappingControls:ColorPalette>
                        </mappingControls:RibbonDropDownButton.PopupContent>
                    </mappingControls:RibbonDropDownButton>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Clustering styles end -->

    <!-- AutoUpdate styles start -->

    <Style x:Key="LayerConfigurationAutoUpdateConfigStyle" TargetType="mappingControls:AutoUpdateConfig">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                        </Grid.RowDefinitions>
                        <CheckBox x:Name="PollForUpdates" Content="{Binding ConverterParameter=PollForUpdates, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                  ToolTipService.Placement="Right" Cursor="Hand"
                                  Style="{StaticResource CheckBoxLayerConfiguration}">
                            <ToolTipService.ToolTip>
                                <ToolTip FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}">
                                    <Border BorderBrush="Black"
                                            BorderThickness="1"
                                            Background="{StaticResource TooltipBackgroundBrush}"
                                            Margin="-8,-3">
                                        <StackPanel Margin="6,8">
                                            <TextBlock Text="{Binding ConverterParameter=PollForUpdates, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                       FontWeight="Bold"
                                                       Foreground="Black" />
                                            <TextBlock Text="{Binding ConverterParameter=PollForUpdatesDescription, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                       Margin="0,3,0,0"
                                                       MaxWidth="350"
                                                       TextWrapping="Wrap"
                                                       Foreground="Black" />
                                        </StackPanel>
                                    </Border>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                        </CheckBox>
                        <Grid Grid.Row="1" Margin="30,0,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding ConverterParameter=Every, Converter={StaticResource Localization}, Source={StaticResource Localization}}" 
                                       VerticalAlignment="Center" FontSize="{StaticResource FontSize}"
                                       Opacity="{Binding IsChecked, ElementName=PollForUpdates, Converter={StaticResource EnabledOpacityConverter}, ConverterParameter=0.65}"/>
                            <toolkitInput:NumericUpDown x:Name="PollInterval" Grid.Column="1" Minimum="0" 
                                                           Maximum="59" Margin="5,0,5,0"
                                                           IsEnabled="{Binding IsChecked, ElementName=PollForUpdates}"/>
                            <ComboBox x:Name="IntervalType" Grid.Row="1" Grid.Column="2" Height="24" Foreground="Black"
                                      IsEnabled="{Binding IsChecked, ElementName=PollForUpdates}">
                                <ComboBox.Items>
                                    <ComboBoxItem Tag="Seconds">
                                        <TextBlock Text="{Binding ConverterParameter=Seconds, Converter={StaticResource Localization}, Source={StaticResource Localization}}" />
                                    </ComboBoxItem>
                                    <ComboBoxItem Tag="Minutes">
                                        <TextBlock Text="{Binding ConverterParameter=Minutes, Converter={StaticResource Localization}, Source={StaticResource Localization}}" />
                                    </ComboBoxItem>
                                </ComboBox.Items>
                            </ComboBox>
                        </Grid>
                        <CheckBox x:Name="UpdateOnExtentChanged" Content="{Binding ConverterParameter=UpdateOnExtentChanged, Converter={StaticResource Localization}, Source={StaticResource Localization}}" Grid.Row="2"
                                  ToolTipService.Placement="Right" Cursor="Hand"
                                  Style="{StaticResource CheckBoxLayerConfiguration}">
                            <ToolTipService.ToolTip>
                                <ToolTip FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}">
                                    <Border BorderBrush="Black"
                                            BorderThickness="1"
                                            Background="{StaticResource TooltipBackgroundBrush}"
                                            Margin="-8,-3">
                                        <StackPanel Margin="6,8">
                                            <TextBlock Text="{Binding ConverterParameter=UpdateOnExtentChanged, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                       FontWeight="Bold"
                                                       Foreground="Black" />
                                            <TextBlock Text="{Binding ConverterParameter=UpdateOnExtentChangedDescription, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
                                                       Margin="0,3,0,0"
                                                       MaxWidth="350"
                                                       TextWrapping="Wrap"
                                                       Foreground="Black" />
                                        </StackPanel>
                                    </Border>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                        </CheckBox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- AutoUpdate styles end -->

</ResourceDictionary>
