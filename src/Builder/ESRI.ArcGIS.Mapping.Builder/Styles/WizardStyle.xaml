<!--
(c) Copyright ESRI.
This source is subject to the Microsoft Public License (Ms-PL).
Please see https://opensource.org/licenses/ms-pl for details.
All other rights reserved.
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ESRI.ArcGIS.Mapping.Builder"
    xmlns:esri="clr-namespace:ESRI.ArcGIS.Client.Application.Controls;assembly=ESRI.ArcGIS.Client.Application.Controls"
    xmlns:esriMapping="clr-namespace:ESRI.ArcGIS.Mapping.Controls;assembly=ESRI.ArcGIS.Mapping.Controls"
    xmlns:esriConverters="clr-namespace:ESRI.ArcGIS.Client.Application.Layout.Converters;assembly=ESRI.ArcGIS.Client.Application.Layout"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:toolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Layout.Toolkit">
    <esriMapping:AddIntegerConverter x:Key="AddIntegerConverter" />
    <esriMapping:InvertVisibilityConverter x:Key="InvertVisConverter" />
    <esriConverters:BooleanToVisibilityConverter x:Key="BoolToVisConverter" />

    <Style TargetType="esri:Wizard">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="esri:Wizard">
                    <Grid Margin="10,5,10,10" Height="{TemplateBinding ContentHeight}" Width="{TemplateBinding ContentWidth}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <toolkit:TransitioningContentControl
                                        FontSize="12" Margin="0,5,0,0"
                                        HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                            <TextBlock
                                Text="{Binding CurrentPage.Heading, RelativeSource={RelativeSource TemplatedParent}}"
                                TextWrapping="Wrap" />
                        </toolkit:TransitioningContentControl>
                        <toolkit:TransitioningContentControl
                                        Grid.Row="1"
                                        Content="{Binding CurrentPage.Description, RelativeSource={RelativeSource TemplatedParent}}"
                                        HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"/>
                        <Rectangle Fill="{StaticResource DesignHostBackgroundTextBrush}" Height="1" HorizontalAlignment="Stretch"
                                   Grid.Row="2" Margin="0,3,0,0">
                            <Rectangle.OpacityMask>
                                <LinearGradientBrush StartPoint="0, 0.5" EndPoint="1, 0.5">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="White" />
                                        <GradientStop Offset="0.9" Color="Transparent" />
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <toolkit:TransitioningContentControl
                                        Grid.Row="3"
										Margin="0,3,0,0"
                                        Content="{Binding CurrentPage.Content, RelativeSource={RelativeSource TemplatedParent}}"
                                        HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                                        VerticalContentAlignment="Stretch"/>
                        <Grid Margin="0,10,0,0" Grid.Row="4">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid Visibility="{Binding Path=(local:ControlExtensions.ExtendedUIVisibility), RelativeSource={RelativeSource TemplatedParent}}">
                                <Button Padding="6,0,6,0"
                                        Height="26"
                                        HorizontalAlignment="Left"
                                        Visibility="{Binding Visibility, ElementName=NextButton, Converter={StaticResource InvertVisConverter}}"
                                        Foreground="{StaticResource DesignHostAccentTextBrush}"
                                        Style="{StaticResource GradientButtonStyle}"
                                        Background="{StaticResource DesignHostAccentBrush}"
                                        BorderBrush="{StaticResource DesignHostAccentTextBrush}"
                                        Command="{Binding Path=(local:ControlExtensions.ExtendedCommand), RelativeSource={RelativeSource TemplatedParent}}">
                                    <StackPanel Orientation="Horizontal"
                                                VerticalAlignment="Center">
                                        <Image Source="../images/configure16.png"
                                               Margin="0,5,0,5" />
                                        <TextBlock Text="{Binding ConverterParameter=Configure, Converter={StaticResource BuilderLocalization}, Source={StaticResource BuilderLocalization}}"
                                                   VerticalAlignment="Center" />
                                    </StackPanel>
                                    <ToolTipService.ToolTip>
                                        <ToolTip FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}"
                                                 Content="{Binding ConverterParameter=Configure, Converter={StaticResource BuilderLocalization}, Source={StaticResource BuilderLocalization}}" />
                                    </ToolTipService.ToolTip>
                                </Button> 
                            </Grid>
                            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" Grid.Column="1">
								<Button Content="{Binding ConverterParameter=Back, Converter={StaticResource BuilderLocalization}, Source={StaticResource BuilderLocalization}}" Height="26" MinWidth="50"
                                    Foreground="{StaticResource DesignHostAccentTextBrush}" Style="{StaticResource GradientButtonStyle}" 
                                    Background="{StaticResource DesignHostAccentBrush}" BorderBrush="{StaticResource DesignHostAccentTextBrush}"
                                        Command="{Binding Back, RelativeSource={RelativeSource TemplatedParent}}" 
                                        Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource BoolToVisConverter}}"/>
								<Button x:Name="NextButton" Content="{Binding ConverterParameter=Next, Converter={StaticResource BuilderLocalization}, Source={StaticResource BuilderLocalization}}" Height="26" Margin="4,0,0,0" MinWidth="50"
                                    Foreground="{StaticResource DesignHostAccentTextBrush}" Style="{StaticResource GradientButtonStyle}" 
                                    Background="{StaticResource DesignHostAccentBrush}" BorderBrush="{StaticResource DesignHostAccentTextBrush}"
                                    Command="{Binding Next, RelativeSource={RelativeSource TemplatedParent}}">
                                    <i:Interaction.Triggers>
                                        
                                        <!-- Show Next button when page changes and current page is not the last one or null -->
                                        <i:EventTrigger 
                                            SourceObject="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                                            EventName="PageChanged">
                                            <i:Interaction.Behaviors>
                                                <ei:ConditionBehavior>
                                                    <ei:ConditionalExpression>
                                                        <ei:ComparisonCondition 
                                                            LeftOperand="{Binding CurrentPageIndex, 
                                                                RelativeSource={RelativeSource TemplatedParent}}" 
															Operator="LessThan" 
															RightOperand="{Binding Pages.Count, ConverterParameter=-1, 
                                                                Converter={StaticResource AddIntegerConverter}, 
                                                                RelativeSource={RelativeSource TemplatedParent}}" />
                                                        <ei:ComparisonCondition 
                                                            LeftOperand="{Binding CurrentPage, RelativeSource={RelativeSource TemplatedParent}}" 
                                                            Operator="NotEqual"
															RightOperand="{x:Null}" />
                                                    </ei:ConditionalExpression>
                                                </ei:ConditionBehavior>
                                            </i:Interaction.Behaviors>
                                            <ei:ChangePropertyAction PropertyName="Visibility" Value="Visible"/>
                                        </i:EventTrigger>

                                        <!-- Hide Next button when page changes and current page is the last one -->
                                        <i:EventTrigger 
                                            SourceObject="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                                            EventName="PageChanged">
                                            <i:Interaction.Behaviors>
                                                <ei:ConditionBehavior>
                                                    <ei:ConditionalExpression>
                                                        <ei:ComparisonCondition 
                                                            LeftOperand="{Binding CurrentPageIndex, 
                                                                RelativeSource={RelativeSource TemplatedParent}}" 
															RightOperand="{Binding Pages.Count, ConverterParameter=-1, 
                                                                Converter={StaticResource AddIntegerConverter}, 
                                                                RelativeSource={RelativeSource TemplatedParent}}" />
                                                    </ei:ConditionalExpression>
                                                </ei:ConditionBehavior>
                                            </i:Interaction.Behaviors>
                                            <ei:ChangePropertyAction PropertyName="Visibility" Value="Collapsed"/>
                                        </i:EventTrigger>
                                        
                                        <!-- Hide Next button if number of pages changes and current page becomes the last one -->
                                        <i:EventTrigger 
                                            SourceObject="{Binding Pages, RelativeSource={RelativeSource TemplatedParent}}" 
                                            EventName="CollectionChanged">
                                            <i:Interaction.Behaviors>
                                                <ei:ConditionBehavior>
                                                    <ei:ConditionalExpression>
                                                        <ei:ComparisonCondition 
                                                            LeftOperand="{Binding CurrentPageIndex, 
                                                                RelativeSource={RelativeSource TemplatedParent}}" 
                                                            Operator="Equal"
															RightOperand="{Binding Pages.Count, ConverterParameter=-1, 
                                                                Converter={StaticResource AddIntegerConverter}, 
                                                                RelativeSource={RelativeSource TemplatedParent}}" />
                                                    </ei:ConditionalExpression>
                                                </ei:ConditionBehavior>
                                            </i:Interaction.Behaviors>
                                            <ei:ChangePropertyAction PropertyName="Visibility" Value="Collapsed"/>
                                        </i:EventTrigger>

                                        <!-- Show Next button if number of pages changes and current page is not the last one or null -->
                                        <i:EventTrigger 
                                            SourceObject="{Binding Pages, RelativeSource={RelativeSource TemplatedParent}}" 
                                            EventName="CollectionChanged">
                                            <i:Interaction.Behaviors>
                                                <ei:ConditionBehavior>
                                                    <ei:ConditionalExpression>
                                                        <ei:ComparisonCondition 
                                                            LeftOperand="{Binding CurrentPageIndex, RelativeSource={RelativeSource TemplatedParent}}" 
                                                            Operator="LessThan"
															RightOperand="{Binding Pages.Count, ConverterParameter=-1, 
                                                                Converter={StaticResource AddIntegerConverter}, 
                                                                RelativeSource={RelativeSource TemplatedParent}}" />
                                                        <ei:ComparisonCondition 
                                                            LeftOperand="{Binding CurrentPage, RelativeSource={RelativeSource TemplatedParent}}" 
                                                            Operator="NotEqual"
															RightOperand="{x:Null}" />
                                                    </ei:ConditionalExpression>
                                                </ei:ConditionBehavior>
                                            </i:Interaction.Behaviors>
                                            <ei:ChangePropertyAction PropertyName="Visibility" Value="Visible" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
								<Button Content="{Binding ConverterParameter=OK, Converter={StaticResource BuilderLocalization}, Source={StaticResource BuilderLocalization}}" Height="26" Margin="4,0,0,0" MinWidth="50"
                                    Foreground="{StaticResource DesignHostAccentTextBrush}" Style="{StaticResource GradientButtonStyle}" 
                                    Background="{StaticResource DesignHostAccentBrush}" BorderBrush="{StaticResource DesignHostAccentTextBrush}"
                                        Command="{Binding Complete, RelativeSource={RelativeSource TemplatedParent}}"
                                        Visibility="{Binding Visibility, ElementName=NextButton, Converter={StaticResource InvertVisConverter}}"/>
								<Button Content="{Binding ConverterParameter=Cancel, Converter={StaticResource BuilderLocalization}, Source={StaticResource BuilderLocalization}}" Height="26" Margin="4,0,0,0" MinWidth="50"
                                    Foreground="{StaticResource DesignHostAccentTextBrush}" Style="{StaticResource GradientButtonStyle}" 
                                    Background="{StaticResource DesignHostAccentBrush}" BorderBrush="{StaticResource DesignHostAccentTextBrush}"
                                        Command="{Binding Cancel, RelativeSource={RelativeSource TemplatedParent}}" />
                            </StackPanel>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
