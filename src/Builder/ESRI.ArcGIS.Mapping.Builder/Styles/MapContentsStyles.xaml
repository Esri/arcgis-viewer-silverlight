<!--
(c) Copyright ESRI.
This source is subject to the Microsoft Public License (Ms-PL).
Please see https://opensource.org/licenses/ms-pl for details.
All other rights reserved.
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mapping="http://schemas.esri.com/arcgis/mapping/2009"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:controls="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:ESRI.ArcGIS.Mapping.Builder"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
    mc:Ignorable="d">
    <sys:Double x:Key="SmallFontSize">11.0</sys:Double>

    <mapping:BasemapLayerVisibilityConverter x:Key="BasemapLayerVisibilityConverter"></mapping:BasemapLayerVisibilityConverter>
    <mapping:VisibilityConverter x:Key="VisibilityConverter" />
    <mapping:LayerDisplayNameConverter x:Name="LayerDisplayNameConverter" />
    <mapping:VisiblityBasedOnIsDynamicLayerConverter x:Key="VisiblityBasedOnIsDynamicLayerConverter" />
    <mapping:ReverseVisibilityConverter x:Key="ReverseVisibilityConverter" />
    <mapping:ReverseBooleanConverter x:Key="ReverseBooleanConverter" />
    <mapping:VisibilityStringNotNullOrEmptyConverter x:Key="VisibilityStringNotNullOrEmptyConverter" />
    <mapping:DisabledOpacityConverter x:Key="DisabledOpacityConverter" />
    <mapping:LayerDisplayIconConverter x:Key="LayerDisplayIconConverter" />
    <mapping:ErrorDisplayIconConverter x:Key="ErrorDisplayIconConverter" />
    <mapping:VisibilityBasedOnVisibleInLayerListConverter x:Key="VisibilityBasedOnVisibleInLayerListConverter" />
    <mapping:ResourceNodeDisplayIconConverter x:Key="ResourceNodeDisplayIconConverter" />

    <Style x:Key="MapContentsControlNodeToggleButton" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="Root" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FF1BBBFA" Storyboard.TargetProperty="(Path.Stroke).Color" Storyboard.TargetName="UncheckedVisual"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".7" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="UncheckedVisual"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckedVisual"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid HorizontalAlignment="Right" Margin="2 2 0 2">
                            <Path x:Name="UncheckedVisual" Data="M 0,0 L 0,9 L 5,4.5 Z" Fill="{TemplateBinding Foreground}" 
                                  HorizontalAlignment="Right" Height="9" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" 
                                  StrokeLineJoin="Miter" VerticalAlignment="Center" Width="6"/>
                            <Path x:Name="CheckedVisual" Data="M 6,0 L 6,6 L 0,6 Z" Fill="{TemplateBinding Foreground}" 
                                  Stroke="{TemplateBinding Foreground}"
                                  HorizontalAlignment="Center" Height="6" Opacity="0" StrokeLineJoin="Miter"
                                  VerticalAlignment="Center" Width="6"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TreeViewItemStyle" TargetType="controls:TreeViewItem">
        <Setter Property="Padding" Value="3"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="Margin" Value="0 1 0 0"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:TreeViewItem">
                    <Grid Background="{x:Null}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="15"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="HasItemsStates">
                                <VisualState x:Name="HasItems"/>
                                <VisualState x:Name="NoItems">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ExpanderButton">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualState x:Name="Collapsed"/>
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHost">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ToggleButton x:Name="ExpanderButton" HorizontalAlignment="Stretch" IsTabStop="False" TabNavigation="Once" VerticalAlignment="Stretch">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Grid x:Name="Root" Background="Transparent">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimation Duration="0" To="#FF1BBBFA" Storyboard.TargetProperty="(Path.Stroke).Color" Storyboard.TargetName="UncheckedVisual"/>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="CheckStates">
                                                <VisualState x:Name="Unchecked"/>
                                                <VisualState x:Name="Checked">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="UncheckedVisual"/>
                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckedVisual"/>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Grid HorizontalAlignment="Right" Margin="2 2 5 2">
                                            <Path x:Name="UncheckedVisual" Data="M 0,0 L 0,9 L 5,4.5 Z" Fill="#FFFFFFFF" HorizontalAlignment="Right" Height="9" Stroke="#FF989898" StrokeThickness="1" StrokeLineJoin="Miter" VerticalAlignment="Center" Width="6"/>
                                            <Path x:Name="CheckedVisual" Data="M 6,0 L 6,6 L 0,6 Z" Fill="#FF262626" HorizontalAlignment="Center" Height="6" Opacity="0" StrokeLineJoin="Miter" VerticalAlignment="Center" Width="6"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <Button x:Name="Header" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}" ClickMode="Hover" Grid.Column="1" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="False" TabNavigation="Once" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Grid Background="{TemplateBinding Background}">
                                        <ContentPresenter x:Name="Content" Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}"/>
                                    </Grid>
                                </ControlTemplate>
                            </Button.Template>
                            <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}"/>
                        </Button>
                        <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1" Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TreeViewStyle" TargetType="controls:TreeView">
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="BorderBrush" Value="#FF000000"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:TreeView">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" Margin="0,10,0,0" BorderThickness="{TemplateBinding BorderThickness}">
                            <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                <ScrollViewer x:Name="ScrollViewer" Padding="0" BorderBrush="Transparent" 
                                              BorderThickness="0" Background="{x:Null}" 
                                              HorizontalScrollBarVisibility="Auto" IsTabStop="False" TabNavigation="Once" 
                                              VerticalScrollBarVisibility="Auto"
                                              Style="{StaticResource BuilderScrollViewerStyle}">
                                    <ItemsPresenter Margin="0"/>
                                </ScrollViewer>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BuilderMapContentsControlStyle" TargetType="mapping:MapContentsControl">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="mapping:MapContentsControl">
                    <mapping:TreeView x:Name="LayerList" Margin="0"
                             Padding="0"
                             Style="{StaticResource TreeViewStyle}"
                             ItemContainerStyle="{StaticResource TreeViewItemStyle}"
                             ScrollViewer.VerticalScrollBarVisibility="Auto" Height="Auto" Background="Transparent"                             
                             BorderThickness="0">
                        <i:Interaction.Behaviors>
                            <mapping:SelectLayerItemOnClickBehavior />
                            <mapping:OverrideMouseRightButtonDownBehavior />
                        </i:Interaction.Behaviors>
                        <mapping:TreeView.Resources>
                            <DataTemplate x:Key="LayerNodeTemplate">
                                <Grid Margin="-10,-8,0,0" Visibility="{Binding Converter={StaticResource VisibilityBasedOnVisibleInLayerListConverter}}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition x:Name="rd0" Height="Auto"/>
                                        <RowDefinition x:Name="rd1" Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="cd0" Width="16" MaxWidth="16" />
                                        <ColumnDefinition x:Name="cd1" Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton x:Name="ExpanderButton"                                              
                                              Grid.Column="0" Grid.Row="0"                                               
                                              Style="{StaticResource MapContentsControlNodeToggleButton}"
                                              HorizontalAlignment="Left"
                                              Visibility="{Binding Converter={StaticResource VisiblityBasedOnIsDynamicLayerConverter}}"
                                              Margin="0,5,0,0">
                                        <i:Interaction.Behaviors>
                                            <mapping:ExpandArcGISDynamicMapServiceLayerBehavior />
                                            <mapping:ExpandArcGISDynamicFeatureServiceLayerBehavior />
                                        </i:Interaction.Behaviors>
                                        <ToggleButton.Resources>
                                            <DataTemplate x:Key="LayerNodeDataTemplate">
                                                <StackPanel Orientation="Horizontal" Margin="0,3,0,0" >
                                                    <CheckBox VerticalAlignment="Center" Margin="5,0,0,0"
                                                              IsChecked="{Binding IsVisible, Mode=TwoWay}">
                                                        <i:Interaction.Behaviors>
                                                            <mapping:ToggleSubLayerVisiblityBehavior />
                                                        </i:Interaction.Behaviors>
                                                    </CheckBox>
                                                    <Image VerticalAlignment="Center" 
                                                           Source="{Binding Converter={StaticResource ResourceNodeDisplayIconConverter}}" 
                                                           Stretch="None" Margin="3,2,5,0" />
                                                    <TextBlock VerticalAlignment="Center" Text="{Binding DisplayName}" FontSize="{StaticResource SmallFontSize}" 
                                                               FontFamily="Verdana" Foreground="{TemplateBinding Foreground}"/>
                                                </StackPanel>
                                            </DataTemplate>
                                            <DataTemplate x:Key="RetrievingNodeDataTemplate">
                                                <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                                                    <mapping:ActivityIndicator x:Name="BusyProgressIndicator" HorizontalAlignment="Right" VerticalAlignment="Bottom" AutoStartProgressAnimation="True" />
                                                    <TextBlock Margin="5,0,0,0" 
                                                        Foreground="{TemplateBinding Foreground}" 
                                                        FontSize="{StaticResource SmallFontSize}" FontFamily="Verdana"
                                                        Text="{Binding ConverterParameter=RetrievingInformation, Converter={StaticResource Localization}, Source={StaticResource Localization}}" />
                                                </StackPanel>
                                            </DataTemplate>
                                            <Style x:Key="NoSelectionStateTreeViewItem" TargetType="mapping:TreeViewItem">
                                                <Setter Property="Padding" Value="3"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                <Setter Property="VerticalContentAlignment" Value="Top"/>
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Cursor" Value="Arrow"/>
                                                <Setter Property="IsTabStop" Value="True"/>
                                                <Setter Property="TabNavigation" Value="Once"/>
                                                <Setter Property="Margin" Value="0 1 0 0"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="mapping:TreeViewItem">
                                                            <Grid Background="{x:Null}">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="10"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto"/>
                                                                    <RowDefinition Height="*"/>
                                                                </Grid.RowDefinitions>
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualState x:Name="Normal"/>
                                                                        <VisualState x:Name="MouseOver"/>
                                                                        <VisualState x:Name="Pressed"/>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="HasItemsStates">
                                                                        <VisualState x:Name="HasItems"/>
                                                                        <VisualState x:Name="NoItems">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ExpanderButton">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="ExpansionStates">
                                                                        <VisualState x:Name="Collapsed"/>
                                                                        <VisualState x:Name="Expanded">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHost">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <ToggleButton x:Name="ExpanderButton" Style="{StaticResource MapContentsControlNodeToggleButton}"  HorizontalAlignment="Stretch" IsTabStop="False" TabNavigation="Once" VerticalAlignment="Stretch">

                                                                </ToggleButton>
                                                                <Button x:Name="Header" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}" ClickMode="Hover" Grid.Column="1" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="False" TabNavigation="Once" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                    <Button.Template>
                                                                        <ControlTemplate TargetType="Button">
                                                                            <Grid Background="{TemplateBinding Background}">
                                                                                <VisualStateManager.VisualStateGroups>
                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                        <VisualState x:Name="Normal"/>
                                                                                    </VisualStateGroup>
                                                                                </VisualStateManager.VisualStateGroups>
                                                                                <Rectangle x:Name="Hover" Fill="#FFBADDE9" IsHitTestVisible="False" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                                                <ContentControl x:Name="Content" Cursor="{TemplateBinding Cursor}" Foreground="White"
                                                                                                ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"
                                                                                                HorizontalAlignment="Left" Margin="{TemplateBinding Padding}"/>
                                                                            </Grid>
                                                                        </ControlTemplate>
                                                                    </Button.Template>
                                                                    <ContentControl ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}"
                                                                                    Foreground="White"/>
                                                                </Button>
                                                                <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1" Visibility="Collapsed"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                            <ControlTemplate x:Key="SubLayersTree" TargetType="mapping:TreeView">
                                                <Grid>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="MouseOver"/>
                                                            <VisualState x:Name="Pressed"/>
                                                            <VisualState x:Name="Disabled"/>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="FocusStates">
                                                            <VisualState x:Name="Unfocused"/>
                                                            <VisualState x:Name="Focused"/>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="ValidationStates">
                                                            <VisualState x:Name="Valid"/>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Border BorderThickness="0" CornerRadius="2">
                                                        <Border Margin="1">
                                                            <ScrollViewer x:Name="ScrollViewer" Background="{x:Null}" 
                                                                          BorderBrush="Transparent" BorderThickness="0" 
                                                                          IsTabStop="False" TabNavigation="Once" 
                                                                          HorizontalScrollBarVisibility="Auto" 
                                                                          VerticalScrollBarVisibility="Auto"
                                                                          Style="{StaticResource BuilderScrollViewerStyle}"
                                                                          Foreground="White">
                                                                <ItemsPresenter Margin="0"/>
                                                            </ScrollViewer>
                                                        </Border>
                                                    </Border>
                                                </Grid>
                                            </ControlTemplate>
                                        </ToggleButton.Resources>
                                    </ToggleButton>

                                    <Grid Margin="0,6,0,0" Grid.Column="1" HorizontalAlignment="Stretch">
                                        <Rectangle                                                      
                                                Visibility="{Binding Path=(mapping:LayerExtensions.IsSelected), Converter={StaticResource VisibilityConverter}}"
                                                Fill="#FF8A93AB"                                                
                                                Stroke="Black"
                                                RadiusX="2"
                                                Margin="-3,-2,-3,-3"
                                                RadiusY="2">
                                        </Rectangle>

                                        <Rectangle x:Name="HoverRectangle"
                                                   Fill="Transparent"
                                                   Stroke="Transparent"
                                                   RadiusX="2"
                                                   Margin="-3,-2,-3,-3"
                                                   RadiusY="2"
                                                   Visibility="{Binding Path=(mapping:LayerExtensions.InitialUpdateFailed), Converter={StaticResource ReverseVisibilityConverter}}">
                                            <i:Interaction.Behaviors>
                                                <mapping:RenameLayerOnDoubleClickBehavior />
                                                <mapping:ContextMenuOpenCloseBehavior />
                                            </i:Interaction.Behaviors>
                                            <ToolTipService.ToolTip>
                                                <ToolTip FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}"
                                                         Content="{Binding DisplayUrl}" /> 
                                            </ToolTipService.ToolTip>
                                        </Rectangle>

                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition></RowDefinition>
                                                <RowDefinition></RowDefinition>
                                            </Grid.RowDefinitions>

                                            <StackPanel Orientation="Horizontal">
                                                <CheckBox IsChecked="{Binding Path=Visible, Mode=TwoWay}" VerticalAlignment="Center" Height="16"
                                                      Visibility="{Binding Converter={StaticResource BasemapLayerVisibilityConverter}}"
                                                      IsEnabled="{Binding Path=(mapping:LayerExtensions.InitialUpdateFailed), Converter={StaticResource ReverseBooleanConverter}}"/>
                                                <Grid>
                                                    <Image VerticalAlignment="Center" IsHitTestVisible="False" Source="{Binding Converter={StaticResource LayerDisplayIconConverter}}" Stretch="None" Margin="0,5,5,5"
                                                       Opacity="{Binding Path=(mapping:LayerExtensions.InitialUpdateFailed), Converter={StaticResource DisabledOpacityConverter}}"/>
                                                </Grid>
                                                <Image x:Name="ErrorIcon" VerticalAlignment="Center" Source="{Binding Converter={StaticResource ErrorDisplayIconConverter}}" Stretch="None" Margin="5,0,0,0"
                                                   Visibility="{Binding Path=(mapping:LayerExtensions.ErrorMessage), Converter={StaticResource VisibilityStringNotNullOrEmptyConverter}}">
                                                    <ToolTipService.ToolTip>
                                                        <ToolTip FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}">
                                                            <TextBlock Text="{Binding Path=(mapping:LayerExtensions.ErrorMessage)}"
                                                                       Foreground="Red"
                                                                       FontFamily="Verdana"
                                                                       FontSize="11"
                                                                       TextWrapping="Wrap" />
                                                        </ToolTip>
                                                    </ToolTipService.ToolTip>
                                                </Image>
                                                <TextBlock Text="{Binding Converter={StaticResource LayerDisplayNameConverter}}" 
                                                   VerticalAlignment="Center"
                                                   Foreground="{TemplateBinding Foreground}"
                                                   IsHitTestVisible="False"
                                                   Opacity="{Binding Path=(mapping:LayerExtensions.InitialUpdateFailed), Converter={StaticResource DisabledOpacityConverter}}"
                                                   Visibility="{Binding Path=(mapping:LayerExtensions.IsEdit), Converter={StaticResource ReverseVisibilityConverter}}">
                                                </TextBlock>
                                                <TextBox Text="{Binding Converter={StaticResource LayerDisplayNameConverter}}" VerticalAlignment="Center"
                                                     Visibility="{Binding Path=(mapping:LayerExtensions.IsEdit), Converter={StaticResource VisibilityConverter}}"
                                                     IsEnabled="{Binding Path=(mapping:LayerExtensions.IsEdit)}"                                                     
                                                     >
                                                    <i:Interaction.Behaviors>
                                                        <mapping:RenameLayerCompletedBehavior />
                                                    </i:Interaction.Behaviors>
                                                </TextBox>
                                            </StackPanel>
                                        </Grid>
                                    </Grid>

                                    <ContentControl x:Name="ExpandSite" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" 
                                                    FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" 
                                                    FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" 
                                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                Visibility="{Binding ElementName=ExpanderButton, Path=IsChecked, Converter={StaticResource VisibilityConverter}}" 
                                                    Margin="14,0,0,0" Grid.ColumnSpan="2" 
                                                Grid.Column="0" Grid.Row="1">
                                        <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                                            <mapping:ActivityIndicator x:Name="BusyProgressIndicator" HorizontalAlignment="Right" VerticalAlignment="Bottom" AutoStartProgressAnimation="True" />
                                            <TextBlock Margin="5,0,0,0" 
                                                       Foreground="{TemplateBinding Foreground}" 
                                                        FontSize="{StaticResource SmallFontSize}" FontFamily="Verdana"
                                                        Text="{Binding ConverterParameter=RetrievingInformation, Converter={StaticResource Localization}, Source={StaticResource Localization}}" />
                                        </StackPanel>
                                    </ContentControl>
                                </Grid>
                            </DataTemplate>
                        </mapping:TreeView.Resources>
                    </mapping:TreeView>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MapContentsBackButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#AAFFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="#77FFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="#33FFFFFF" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient" />
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#FF8A93AB" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="White" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Black" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#FF8A93AB" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="White" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="White" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" >
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.15" Storyboard.TargetName="contentPresenter" 
                                                         Storyboard.TargetProperty="Opacity" />
                                        <DoubleAnimation Duration="0" To="0.15" Storyboard.TargetName="Background" 
                                                         Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetName="FocusElement" 
                                                         Storyboard.TargetProperty="(UIElement.Opacity)" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" BorderBrush="#FF8A93AB" BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="4" Background="Transparent">
                            <Grid Background="Transparent">
                                <Rectangle x:Name="BackgroundGradient" RadiusX="3" RadiusY="3">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                            <GradientStop Color="Transparent" Offset="0"/>
                                            <GradientStop Color="Transparent" Offset="0.375"/>
                                            <GradientStop Color="Transparent" Offset="0.625"/>
                                            <GradientStop Color="Transparent" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                        </Border>
                        <ContentControl x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Foreground="White" 
                                        Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Rectangle x:Name="FocusElement" Stroke="{TemplateBinding BorderBrush}" 
                                   StrokeThickness="2" RadiusX="3" RadiusY="3" Opacity="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="BuilderMapContentsStyle" TargetType="mapping:MapContentLayerConfigurationHost">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderBrush" Value="#FFA3AEB9"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="mapping:MapContentLayerConfigurationHost">
                    <Grid x:Name="MapContentLayerConfigurationLayout" Margin="0,-50,0,-50">
                        <Grid.Resources>
                            <local:FindNameBinder x:Name="FindNameBinder" TargetName="SidePanelContainer" 
                                    SourceElement="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid.Resources>
                        <Grid x:Name="LayerConfigurationLayout" Opacity="0" Margin="0,50,0,50"
                              Background="{StaticResource MapCenterBackgroundGradientBrush}">
                            <Grid.RenderTransform>
                                <CompositeTransform/>
                            </Grid.RenderTransform>
                            <Grid Margin="{TemplateBinding Padding}">
                                    <Grid >
                                    <Grid.Resources>
                                        <Style x:Key="PopupContentControl" TargetType="ContentControl">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ContentControl">
                                                        <Border BorderThickness="0" CornerRadius="6" Margin="0">
                                                            <Border BorderBrush="#BB8A93AB" 
                                BorderThickness="5" CornerRadius="5.5">
                                                                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" 
                                          Background="{StaticResource MapCenterBackgroundGradientBrush}">
                                                                    <ContentControl Content="{TemplateBinding Content}" Foreground="White" />
                                                                </ScrollViewer>
                                                            </Border>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>

                                        <!-- Corresponds to the style assigned to popups's leader for Layer Configuration and Search -->
                                        <Style x:Key="PopupLeader" TargetType="ContentControl">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ContentControl">
                                                        <Path Stroke="Transparent" Fill="#BB8A93AB"
                                      Data="M 20,0 L 0,10 20,20"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Grid.Resources>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Foreground="{TemplateBinding Foreground}" FontStyle="Italic" Margin="5,5,5,0" Grid.Row="0" Text="{Binding ConverterParameter=ConfiguringLayer, Converter={StaticResource Localization}, Source={StaticResource Localization}}"/>
                                        <StackPanel HorizontalAlignment="Left" Grid.Row="1">
                                        <TextBlock Foreground="{TemplateBinding Foreground}"
                                                   FontWeight="Bold"
                                                   FontSize="16"
                                                   HorizontalAlignment="Left"
                                                   Margin="5,2,5,2"
                                                   TextAlignment="Left"
                                                   Text="{Binding View.SelectedLayer.LayerName, ElementName=LayerConfigurationDialog}"
                                                   TextTrimming="WordEllipsis">
                                            <ToolTipService.ToolTip>
                                                <ToolTip FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}"
                                                         Content="{Binding View.SelectedLayer.LayerName, ElementName=LayerConfigurationDialog}" />
                                            </ToolTipService.ToolTip>
                                        </TextBlock>
                                    </StackPanel>
                                    <Button x:Name="btnConfigurationComplete" BorderBrush="White" Grid.Row="2"
                                                Background="White" Content="{Binding ConverterParameter=ShowMapContents, Converter={StaticResource Localization}, Source={StaticResource Localization}}" 
                                                Command="{Binding GoToMapContentsCommand, RelativeSource={RelativeSource TemplatedParent}}" 
                                                Foreground="#FF8A93AB" FontWeight="Bold" Margin="3" Padding="2" 
                                                Style="{StaticResource MapContentsBackButtonStyle}"/>
                                    <mapping:LayerConfiguration x:Name="LayerConfigurationDialog" Grid.Row="3"
                                                                         PopupContentContainerStyle="{StaticResource LayerConfigPopupContentControl}"
                                                                         PopupLeaderStyle="{StaticResource LayerConfigPopupLeader}"
                                                                         Style="{StaticResource LayerConfigurationStyle}"/>
                                    </Grid>
                            </Grid>
                            <Button HorizontalAlignment="Right" Height="22" VerticalAlignment="Top" Width="25" 
                                    Style="{StaticResource BuilderCloseButtonStyle}" 
                                    Background="{StaticResource MapCenterBackgroundGradientBrush}" BorderBrush="Black">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <ei:ChangePropertyAction TargetObject="{Binding TargetElement, ElementName=FindNameBinder}" 
                                                                 PropertyName="Visibility">
                                            <ei:ChangePropertyAction.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </ei:ChangePropertyAction.Value>
                                        </ei:ChangePropertyAction>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                            <Border BorderBrush="Black" BorderThickness="1"/>
                        </Grid>
                        <Grid x:Name="MapContentsControlLayout" Background="{StaticResource MapCenterBackgroundGradientBrush}"
                               Margin="0,50,0,50">
                            <Grid.RenderTransform>
                                <CompositeTransform/>
                            </Grid.RenderTransform>
                            <Grid>
                                    <Grid Margin="{TemplateBinding Padding}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="2"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="2"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
									<TextBlock Text="{Binding ConverterParameter=MapContents, Converter={StaticResource Localization}, Source={StaticResource Localization}}"
												Foreground="White"
												Margin="7"
												FontSize="14" />
                                        <Rectangle Grid.Row="1" >
                                            <Rectangle.Fill>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <LinearGradientBrush.RelativeTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                                            <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                                            <RotateTransform Angle="-90" CenterY="0.5" CenterX="0.5"/>
                                                            <TranslateTransform/>
                                                        </TransformGroup>
                                                    </LinearGradientBrush.RelativeTransform>
                                                    <GradientStop Color="White" Offset="0"/>
                                                    <GradientStop Color="Transparent" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <mapping:MapContentsControl x:Name="MapContentsControl" Background="Transparent" Map="{Binding View.Map, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="2" VerticalAlignment="Stretch" Style="{StaticResource BuilderMapContentsControlStyle}"/>
                                        <mapping:Toolbar x:Name="ContextMenuToolbar" Visibility="Collapsed"/>

                                        <Rectangle Grid.Row="3" 
												Visibility="{Binding Visibility, ElementName=LayerConfigToolbar}">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <LinearGradientBrush.RelativeTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                                            <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                                            <RotateTransform Angle="-90" CenterY="0.5" CenterX="0.5"/>
                                                            <TranslateTransform/>
                                                        </TransformGroup>
                                                    </LinearGradientBrush.RelativeTransform>
                                                    <GradientStop Color="White" Offset="0"/>
                                                    <GradientStop Color="Transparent" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <StackPanel Grid.Row="4" Orientation="Horizontal" Margin="3">
                                            <mapping:Toolbar x:Name="LayerConfigToolbar"/>
                                        </StackPanel>
                                    </Grid>
                            </Grid>
                            <Button HorizontalAlignment="Right" Height="22" VerticalAlignment="Top" Width="25" 
                                    Style="{StaticResource BuilderCloseButtonStyle}" 
                                    Background="{StaticResource MapCenterBackgroundGradientBrush}" BorderBrush="Black">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <ei:ChangePropertyAction TargetObject="{Binding TargetElement, ElementName=FindNameBinder}" 
                                                                 PropertyName="Visibility">
                                            <ei:ChangePropertyAction.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </ei:ChangePropertyAction.Value>
                                        </ei:ChangePropertyAction>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                            <Border BorderBrush="Black" BorderThickness="1"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>

