<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlwaysDisplayDefaultTemplates" xml:space="preserve">
    <value>Standardvorlagen anzeigen, wenn keine anderen Vorlagen vorhanden sind</value>
  </data>
  <data name="AutoComplete" xml:space="preserve">
    <value>Polygone an nahe gelegenen Features fangen</value>
  </data>
  <data name="AutoSelect" xml:space="preserve">
    <value>Features bei Bedarf automatisch auswählen - wird von den Werkzeugen 'Ausschneiden', 'Umformen', 'Vereinigen' und 'Automatisch vervollständigen' verwendet</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Zurück</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="Configure" xml:space="preserve">
    <value>Konfigurieren</value>
  </data>
  <data name="Continuous" xml:space="preserve">
    <value>Erweiterte Bearbeitungswerkzeuge aktiviert lassen, bis ein anderes Werkzeug ausgewählt wird</value>
  </data>
  <data name="DefaultLayerIds" xml:space="preserve">
    <value>Alle Feature-Layer bearbeiten</value>
  </data>
  <data name="EditModes" xml:space="preserve">
    <value>Bearbeitungsmodi:</value>
  </data>
  <data name="EditOperations" xml:space="preserve">
    <value>Grafische Operationen aktivieren:</value>
  </data>
  <data name="EditorWidgetConfiguration" xml:space="preserve">
    <value>Bearbeitung konfigurieren</value>
  </data>
  <data name="EditVerticesEnabled" xml:space="preserve">
    <value>Stützpunktbearbeitung</value>
  </data>
  <data name="Freehand" xml:space="preserve">
    <value>Freihand</value>
  </data>
  <data name="MaintainAspectRatio" xml:space="preserve">
    <value>Seitenverhältnis der Geometrien beibehalten</value>
  </data>
  <data name="MoveEnabled" xml:space="preserve">
    <value>Verschieben</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Weiter</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="RotateEnabled" xml:space="preserve">
    <value>Rotation</value>
  </data>
  <data name="ScaleEnabled" xml:space="preserve">
    <value>Skalierung</value>
  </data>
  <data name="SelectLayersForEdit" xml:space="preserve">
    <value>Nur diese Layer bearbeiten:</value>
  </data>
  <data name="ShowAttributesOnAdd" xml:space="preserve">
    <value>Werte beim Hinzufügen von Features bearbeiten</value>
  </data>
  <data name="AdvancedOptionsHeader" xml:space="preserve">
    <value>Erweiterte Bearbeitungswerkzeuge...</value>
  </data>
  <data name="SelectLayersHeader" xml:space="preserve">
    <value>Layer zur Bearbeitung auswählen</value>
  </data>
  <data name="AutoSaveEditChanges" xml:space="preserve">
    <value>Änderungen automatisch speichern</value>
  </data>
  <data name="AttachmentEditorClose" xml:space="preserve">
    <value>Schließen</value>
  </data>
  <data name="AttachmentEditorFilterIndexPrompt" xml:space="preserve">
    <value>Index filtern:</value>
  </data>
  <data name="AttachmentEditorFilterPrompt" xml:space="preserve">
    <value>Filter:</value>
  </data>
  <data name="AttachmentEditorHeader" xml:space="preserve">
    <value>Anlagen-Editor</value>
  </data>
  <data name="AttachmentEditorHeightPrompt" xml:space="preserve">
    <value>Dialogfeldhöhe:</value>
  </data>
  <data name="AttachmentEditorMultiSelectPrompt" xml:space="preserve">
    <value>Gleichzeitiges Hochladen mehrerer Anlagen zulassen</value>
  </data>
  <data name="AttachmentEditorWidthPrompt" xml:space="preserve">
    <value>Dialogfeldbreite:</value>
  </data>
  <data name="AttachmentEditorConfigHeader" xml:space="preserve">
    <value>Anlagen-Editor konfigurieren</value>
  </data>
  <data name="AttachmentEditorDescription" xml:space="preserve">
    <value>Lässt das Hochladen, Herunterladen und Löschen von Dateien zu, die in einem Feature-Layer mit Grafik-Features verknüpft sind</value>
  </data>
  <data name="AttachmentEditorDisplayName" xml:space="preserve">
    <value>Dokument anhängen</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Schließen</value>
  </data>
  <data name="SetLayerPopupOnClick" xml:space="preserve">
    <value>Pop-up-Fenster bei Mausklick für Layer anzeigen, die zum Bearbeiten ausgewählt wurden</value>
  </data>
  <data name="AddToSelection" xml:space="preserve">
    <value>Zur Auswahl hinzufügen</value>
  </data>
  <data name="AutocompleteTool" xml:space="preserve">
    <value>Automatisch vervollständigen</value>
  </data>
  <data name="ClearSelection" xml:space="preserve">
    <value>Auswahl aufheben</value>
  </data>
  <data name="ClearTool" xml:space="preserve">
    <value>Werkzeug "Löschen"</value>
  </data>
  <data name="Cut" xml:space="preserve">
    <value>Ausschneiden</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="EditingShapesEnabled" xml:space="preserve">
    <value>Shape-Bearbeitung zulassen</value>
  </data>
  <data name="EditorOptionsHeader" xml:space="preserve">
    <value>Bearbeitungsoptionen auswählen</value>
  </data>
  <data name="EditShape" xml:space="preserve">
    <value>Shape bearbeiten</value>
  </data>
  <data name="EditValues" xml:space="preserve">
    <value>Werte bearbeiten</value>
  </data>
  <data name="RemoveFromSelection" xml:space="preserve">
    <value>Aus Auswahl entfernen</value>
  </data>
  <data name="Reshape" xml:space="preserve">
    <value>Umformen</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Auswählen</value>
  </data>
  <data name="SelectTools" xml:space="preserve">
    <value>Werkzeuge auswählen:</value>
  </data>
  <data name="Union" xml:space="preserve">
    <value>Vereinigen</value>
  </data>
  <data name="AdvancedOptionsHeaderHide" xml:space="preserve">
    <value>Erweiterte Werkzeuge ausblenden</value>
  </data>
  <data name="EditToolbarWithAddFeatures" xml:space="preserve">
    <value>Mit "Features hinzufügen" verfügbare Edit-Werkzeugleiste</value>
  </data>
  <data name="DisableClustering" xml:space="preserve">
    <value>Clustering deaktivieren</value>
  </data>
  <data name="DisableClusteringPrompt" xml:space="preserve">
    <value>Die Layer-Bearbeitung ist für Cluster-Layer nicht zulässig. Soll Clustering jetzt deaktiviert werden?</value>
  </data>
</root>