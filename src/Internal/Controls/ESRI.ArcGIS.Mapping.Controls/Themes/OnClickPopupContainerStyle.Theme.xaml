<!--
(c) Copyright ESRI.
This source is subject to the Microsoft Public License (Ms-PL).
Please see http://go.microsoft.com/fwlink/?LinkID=131993 for details.
All other rights reserved.
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:esri="http://schemas.esri.com/arcgis/client/2009"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:extensibility="http://schemas.esri.com/arcgis/client/extensibility/2010"
    mc:Ignorable="d">

    <extensibility:RTLHelper x:Key="RTLHelper" />
    <extensibility:LocalizationConverter x:Key="LayoutLocalization"/>

    <ControlTemplate x:Key="ActivityIndicatorTemplate" TargetType="Control">
        <Grid x:Name="LayoutRoot">
            <Grid.Resources>
                <Storyboard x:Key="swirl" RepeatBehavior="Forever">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="canvas" 
			                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                        <SplineDoubleKeyFrame KeyTime="00:00:01" Value="360"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </Grid.Resources>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Loaded">
                    <ei:ControlStoryboardAction ControlStoryboardOption="Play" 
                        Storyboard="{StaticResource swirl}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Canvas RenderTransformOrigin="0.5,0.5" x:Name="canvas" Width="16" Height="16">
                <Canvas.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                        <SkewTransform AngleX="0" AngleY="0"/>
                        <RotateTransform Angle="0"/>
                        <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                </Canvas.RenderTransform>
                <Path x:Name="path" Opacity="1" RenderTransformOrigin="0.5,0.5" >
                    <Path.Effect>
                        <DropShadowEffect ShadowDepth="0" BlurRadius="5" Color="White" />
                    </Path.Effect>
                    <Path.Data>
                        <PathGeometry>
                            <PathGeometry.Figures>
                                <PathFigureCollection>
                                    <PathFigure StartPoint="8,0" IsClosed="True">
                                        <PathFigure.Segments>
                                            <PathSegmentCollection>
                                                <ArcSegment
                                                                Point="16,8"
                                                                Size="8,8"
                                                                SweepDirection="Clockwise"
                                                                IsLargeArc="False"
                                                                RotationAngle="0"
                                                                />
                                                <LineSegment Point="14,8"/>
                                                <ArcSegment
                                                                Point="8,1"
                                                                Size="8,8"
                                                                SweepDirection="Counterclockwise"
                                                                IsLargeArc="False"
                                                                RotationAngle="0"
                                                                />
                                            </PathSegmentCollection>
                                        </PathFigure.Segments>
                                    </PathFigure>
                                    <PathFigure StartPoint="16,8" IsClosed="True">
                                        <PathFigure.Segments>
                                            <PathSegmentCollection>
                                                <ArcSegment
                                                                Point="8,16"
                                                                Size="8,8"
                                                                SweepDirection="Clockwise"
                                                                IsLargeArc="False"
                                                                RotationAngle="0"
                                                                />
                                                <LineSegment Point="8,14"/>
                                                <ArcSegment
                                                                Point="14,8"
                                                                Size="7,7"
                                                                SweepDirection="Counterclockwise"
                                                                IsLargeArc="False"
                                                                RotationAngle="0"
                                                                />
                                            </PathSegmentCollection>
                                        </PathFigure.Segments>
                                    </PathFigure>
                                    <PathFigure StartPoint="8,16" IsClosed="True">
                                        <PathFigure.Segments>
                                            <PathSegmentCollection>
                                                <ArcSegment
                                                                Point="0,8"
                                                                Size="8,8"
                                                                SweepDirection="Clockwise"
                                                                IsLargeArc="False"
                                                                RotationAngle="0"
                                                                />
                                                <LineSegment Point="2,8"/>
                                                <ArcSegment
                                                                Point="8,14"
                                                                Size="7,7"
                                                                SweepDirection="Counterclockwise"
                                                                IsLargeArc="False"
                                                                RotationAngle="0"
                                                                />
                                            </PathSegmentCollection>
                                        </PathFigure.Segments>
                                    </PathFigure>

                                </PathFigureCollection>
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </Path.Data>
                    <Path.Fill>
                        <LinearGradientBrush SpreadMethod="Pad" MappingMode="RelativeToBoundingBox" StartPoint="0.515,-0.375" EndPoint="-0.279,0.433">
                            <GradientStop Color="#00000000" Offset="0"/>
                            <GradientStop Color="{StaticResource BackgroundTextColor}" Offset="1"/>
                        </LinearGradientBrush>
                    </Path.Fill>
                </Path>
            </Canvas>
        </Grid>
    </ControlTemplate>

    <Style x:Key="OnClickPopupContainerStyle" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Grid x:Name="LayoutRoot" Height="300" Background="{TemplateBinding Background}" Width="300"
                          FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}">
                        <Grid.Resources>
                            <LinearGradientBrush x:Name="OpacityGradient" StartPoint="0,0.5" EndPoint="1,0.5">
                                <GradientStop Color="White" Offset="0" />
                                <GradientStop Color="#22FFFFFF" Offset="1" />
                            </LinearGradientBrush>
                            <extensibility:HasAttachmentsConverter x:Key="HasAttachmentsConverter" />
                            <Style x:Key="CloseButtonStyle" TargetType="Button">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="Width" Value="20"/>
                                <Setter Property="Height" Value="20"/>
                                <Setter Property="IsTabStop" Value="False"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="2">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal">
                                                            <Storyboard>
                                                                <DoubleAnimation BeginTime="00:00:00" 
                                                        					Storyboard.TargetName="path" 
                                                        					Storyboard.TargetProperty="Opacity" 
                                                        					To="1" 
                                                        					Duration="0:0:0.5" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimation BeginTime="00:00:00" 
                                                        					Storyboard.TargetName="path" 
                                                        					Storyboard.TargetProperty="Opacity" 
                                                        					To="0.6" 
                                                        					Duration="0:0:0.5" >
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <QuarticEase EasingMode="EaseOut"/>
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" To="0.6" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled"/>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Path x:Name="path" Fill="{TemplateBinding Foreground}"
                                    Stroke="{TemplateBinding Foreground}" StrokeThickness="2"
                                                    Width="10"
                                                    Height="10"
                                                    Stretch="Fill"
                                                   >
                                                    <Path.Data>
                                                        <GeometryGroup>
                                                            <LineGeometry StartPoint="2,2" EndPoint="8,8"></LineGeometry>
                                                            <LineGeometry StartPoint="2,8" EndPoint="8,2"></LineGeometry>
                                                        </GeometryGroup>
                                                    </Path.Data>
                                                </Path>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Key="ArrowButtonStyle" TargetType="Button">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="2">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal">
                                                            <Storyboard>
                                                                <DoubleAnimation BeginTime="00:00:00" 
                                                        					Storyboard.TargetName="path" 
                                                        					Storyboard.TargetProperty="Opacity" 
                                                        					To="1" 
                                                        					Duration="0:0:0.5" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimation BeginTime="00:00:00" 
                                                        					Storyboard.TargetName="path" 
                                                        					Storyboard.TargetProperty="Opacity" 
                                                        					To="0.6" 
                                                        					Duration="0:0:0.5" >
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <QuarticEase EasingMode="EaseOut"/>
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" To="0.6" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled"/>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Path x:Name="path"
                                                        Height="12"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Margin="0,0,0,0"
                                                        Width="12"
                                                        RenderTransformOrigin="0.5,0.5"
                                                        Stroke="{TemplateBinding Foreground}"
                                                        StrokeThickness="2"
                                                        Data="M 1,1.5 L 4.5,5 L 8,1.5" Stretch="Uniform"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style TargetType="esri:AttachmentEditor" x:Key="AttachmentViewer" >
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="AllowDrop" Value="True"/>
                                <Setter Property="BorderBrush" Value="#00FFFFFF"/>
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="ItemTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <Grid Margin="3,3,3,0" Background="#00FFFFFF">
                                                <Grid.Resources>
                                                    <Style TargetType="Button" x:Key="ClearButtonStyle" >
                                                        <Setter Property="Background" Value="#00FFFFFF" />
                                                        <Setter Property="Foreground" Value="#00FFFFFF" />
                                                        <Setter Property="Padding" Value="0" />
                                                        <Setter Property="BorderThickness" Value="0" />
                                                        <Setter Property="BorderBrush" Value="#00FFFFFF" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="Button" xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows">
                                                                    <Grid x:Name="ButtonRoot" RenderTransformOrigin="0.5,0.5">
                                                                        <Grid.RenderTransform>
                                                                            <ScaleTransform x:Name="ButtonScaleTransform" ScaleX="1" ScaleY="1" />
                                                                        </Grid.RenderTransform>
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="CommonStates" >
                                                                                <VisualState x:Name="Normal" >
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Storyboard.TargetName="ButtonRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.1" />
                                                                                        <DoubleAnimation Storyboard.TargetName="ButtonRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.1" />
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="MouseOver">
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Storyboard.TargetName="ButtonRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1.25" Duration="0:0:0.1" />
                                                                                        <DoubleAnimation Storyboard.TargetName="ButtonRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1.25" Duration="0:0:0.1" />
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Pressed">
                                                                                </VisualState>
                                                                                <VisualState x:Name="Disabled">
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                            <VisualStateGroup x:Name="FocusStates" >
                                                                                <VisualState x:Name="Focused">
                                                                                </VisualState>
                                                                                <VisualState x:Name="Unfocused" />
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                        <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"  />
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                    <Style TargetType="HyperlinkButton" x:Key="ClearHyperlinkStyle" >
                                                        <Setter Property="Background" Value="#00FFFFFF" />
                                                        <Setter Property="Foreground" Value="#00FFFFFF" />
                                                        <Setter Property="Padding" Value="0" />
                                                        <Setter Property="BorderThickness" Value="0" />
                                                        <Setter Property="BorderBrush" Value="#00FFFFFF" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="HyperlinkButton" >
                                                                    <Grid x:Name="ButtonRoot" RenderTransformOrigin="0.5,0.5">
                                                                        <Grid.RenderTransform>
                                                                            <ScaleTransform x:Name="ButtonScaleTransform" ScaleX="1" ScaleY="1" />
                                                                        </Grid.RenderTransform>
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="CommonStates" >
                                                                                <VisualState x:Name="Normal" >
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Storyboard.TargetName="ButtonRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.1" />
                                                                                        <DoubleAnimation Storyboard.TargetName="ButtonRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.1" />
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="MouseOver">
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Storyboard.TargetName="ButtonRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1.5" Duration="0:0:0.1" />
                                                                                        <DoubleAnimation Storyboard.TargetName="ButtonRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1.5" Duration="0:0:0.1" />
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Pressed">
                                                                                </VisualState>
                                                                                <VisualState x:Name="Disabled">
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                            <VisualStateGroup x:Name="FocusStates" >
                                                                                <VisualState x:Name="Focused">
                                                                                </VisualState>
                                                                                <VisualState x:Name="Unfocused" />
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                        <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"  />
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                    <Style TargetType="HyperlinkButton" x:Key="NoFocusHyperlinkStyle" >
                                                        <Setter Property="Background" Value="#00FFFFFF" />
                                                        <Setter Property="Foreground" Value="#00FFFFFF" />
                                                        <Setter Property="Padding" Value="0" />
                                                        <Setter Property="BorderThickness" Value="0" />
                                                        <Setter Property="BorderBrush" Value="#00FFFFFF" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="HyperlinkButton" >
                                                                    <Grid x:Name="ButtonRoot" RenderTransformOrigin="0.5,0.5">
                                                                        <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"  />
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>

                                                    <extensibility:AttachmentInfoToImageUriConverter x:Key="AttachmentInfoToImageUriConverter"/>
                                                </Grid.Resources>
                                                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="2,3,2,2">
                                                    <Grid MaxWidth="75" HorizontalAlignment="Center">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="14" />
                                                        </Grid.ColumnDefinitions>
                                                        <HyperlinkButton x:Name="ImageHyperlink" NavigateUri="{Binding Uri}" VerticalAlignment="Center" TargetName="_blank" HorizontalAlignment="Left" Style="{StaticResource ClearHyperlinkStyle}" Tag="{Binding Name}" >
                                                            <ToolTipService.ToolTip>
                                                                <Grid>
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="Auto" />
                                                                        <RowDefinition Height="Auto" />
                                                                        <RowDefinition Height="Auto" />
                                                                        <RowDefinition Height="Auto" />
                                                                    </Grid.RowDefinitions>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="Auto" />
                                                                        <ColumnDefinition Width="Auto" />
                                                                    </Grid.ColumnDefinitions>

                                                                    <TextBlock Text="{Binding ConverterParameter=NameColon, Converter={StaticResource LayoutLocalization}}" Margin="10,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Row="0" Grid.Column="0" />
                                                                    <TextBlock Text="{Binding Name}" Margin="5,0" MaxWidth="250" TextWrapping="Wrap" Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" />

                                                                    <TextBlock Text="{Binding ConverterParameter=SizeColon, Converter={StaticResource LayoutLocalization}}" Margin="10,0,0,0" HorizontalAlignment="Right" Grid.Row="1" Grid.Column="0" />
                                                                    <TextBlock Text="{Binding Size}" Margin="5,0" MaxWidth="250" TextWrapping="Wrap" Grid.Row="1" Grid.Column="1" />

                                                                    <TextBlock Text="{Binding ConverterParameter=UriColon, Converter={StaticResource LayoutLocalization}}" Margin="10,0,0,0" HorizontalAlignment="Right" Grid.Row="2" Grid.Column="0" />
                                                                    <TextBlock Text="{Binding Uri}" Margin="5,0" MaxWidth="250" TextWrapping="Wrap" Grid.Row="2" Grid.Column="1" />

                                                                    <TextBlock Text="{Binding ConverterParameter=ContentTypeColon, Converter={StaticResource LayoutLocalization}}" Margin="10,0,0,0" HorizontalAlignment="Right" Grid.Row="3" Grid.Column="0" />
                                                                    <TextBlock Text="{Binding ContentType}" Margin="5,0" MaxWidth="250" TextWrapping="Wrap" Grid.Row="3" Grid.Column="1" />
                                                                </Grid>
                                                            </ToolTipService.ToolTip>
                                                            <Border x:Name= "WaitingBorder" BorderBrush="{StaticResource SelectionColorBrush}" BorderThickness="1" MinWidth="10" MinHeight="10" >
                                                                <Grid >

                                                                    <Image Source="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource AttachmentInfoToImageUriConverter}}" HorizontalAlignment="Right" MaxWidth="63" MaxHeight="25" Stretch="Uniform" >
                                                                    </Image>
                                                                </Grid>
                                                            </Border>
                                                        </HyperlinkButton>
                                                        <Button x:Name="DeleteAttachmentButton" Grid.ColumnSpan="2" Command="{Binding Delete}" VerticalAlignment="Top" Cursor="Hand" 
                                                            ToolTipService.ToolTip="{Binding ConverterParameter=DeleteAttachment, Converter={StaticResource LayoutLocalization}}"                                                                 
                                                            Style="{StaticResource ClearButtonStyle}" HorizontalAlignment="Right" Margin="0,-4,0,0" Visibility="Collapsed">
                                                            <i:Interaction.Triggers>
                                                                
                                                                <!-- Show button if current layer is editable and delete attachment button 
                                                                     is enabled. Whether delete attachment button is enabled is determined 
                                                                     by AttachmentInfo.Delete command-->
                                                                <i:EventTrigger EventName="LayoutUpdated" >
                                                                    <i:Interaction.Behaviors>
                                                                        <ei:ConditionBehavior>
                                                                            <ei:ConditionalExpression ForwardChaining="And">
                                                                                <ei:ComparisonCondition 
                                                                                    LeftOperand="{Binding FeatureLayer.(extensibility:LayerProperties.IsEditable), 
                                                                                        ElementName=AttachmentContainer}" 
                                                                                    Operator="Equal" 
                                                                                    RightOperand="True"/>
                                                                                <ei:ComparisonCondition 
                                                                                    LeftOperand="{Binding IsEnabled, 
                                                                                        ElementName=DeleteAttachmentButton}" 
                                                                                    Operator="Equal" 
                                                                                    RightOperand="True"/>
                                                                            </ei:ConditionalExpression>
                                                                        </ei:ConditionBehavior>
                                                                    </i:Interaction.Behaviors>
                                                                    <ei:ChangePropertyAction 
                                                                        TargetName="DeleteAttachmentButton" 
                                                                        PropertyName="Visibility" 
                                                                        Value="Visible" />
                                                                </i:EventTrigger>

                                                                <!-- Hide button if current layer is not editable or delete attachment button 
                                                                     is disabled. -->
                                                                <i:EventTrigger EventName="LayoutUpdated" >
                                                                    <i:Interaction.Behaviors>
                                                                        <ei:ConditionBehavior>
                                                                            <ei:ConditionalExpression ForwardChaining="Or">
                                                                                <ei:ComparisonCondition 
                                                                                    LeftOperand="{Binding FeatureLayer.(extensibility:LayerProperties.IsEditable), 
                                                                                        ElementName=AttachmentContainer}" 
                                                                                    Operator="Equal" 
                                                                                    RightOperand="False"/>
                                                                                <ei:ComparisonCondition 
                                                                                    LeftOperand="{Binding IsEnabled, 
                                                                                        ElementName=DeleteAttachmentButton}" 
                                                                                    Operator="Equal" 
                                                                                    RightOperand="False"/>
                                                                            </ei:ConditionalExpression>
                                                                        </ei:ConditionBehavior>
                                                                    </i:Interaction.Behaviors>
                                                                    <ei:ChangePropertyAction TargetName="DeleteAttachmentButton" PropertyName="Visibility" Value="Collapsed" />
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>

                                                            <Grid Margin="0">
                                                                <Rectangle Width="18" Height="18" Fill="#00FFFFFF" />
                                                                <Image VerticalAlignment="Center" Source="/ESRI.ArcGIS.Mapping.Controls;component/images/icons/GenericDeleteBlackTiny16.png" Stretch="None" HorizontalAlignment="Center" />
                                                            </Grid>
                                                        </Button>

                                                    </Grid>
                                                    <HyperlinkButton NavigateUri="{Binding Uri}" TargetName="_blank" HorizontalAlignment="Center" Style="{StaticResource NoFocusHyperlinkStyle}" >
                                                        <TextBlock Text="{Binding Name}" Width="75" TextAlignment="Center" TextTrimming="WordEllipsis"  FontSize="9" Foreground="{StaticResource BackgroundTextColorBrush}" Padding="0" Margin="0,5,0,0" />
                                                    </HyperlinkButton>
                                                </StackPanel>

                                            </Grid>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="esri:AttachmentEditor">
                                            <Grid x:Name="rootgrid">
                                                <!-- Hidden Add button must be placed at top of visual tree (just below root grid) so it can be found and used programmatically by application -->
                                                <Button x:Name="AddNewButton" Width="1" Height="1" Visibility="Collapsed" />
                                                <Border Background="Transparent" BorderThickness="1" BorderBrush="Transparent" Margin="5,3,5,0" HorizontalAlignment="Stretch" Padding="0" >
                                                    <Border.Resources>
                                                        <ItemsPanelTemplate x:Key="HorizontalItemsPaneltemplate">
                                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" />
                                                        </ItemsPanelTemplate>
                                                        <Style x:Key="FatHorizontalScrollbarStyle" TargetType="ScrollBar" >
                                                            <Setter Property="MinWidth" Value="17" />
                                                            <Setter Property="MinHeight" Value="0" />
                                                            <Setter Property="IsTabStop" Value="False" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="ScrollBar" xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows">
                                                                        <Grid x:Name="Root" >
                                                                            <Grid.Resources>
                                                                                <ControlTemplate x:Key="RepeatButtonTemplate" TargetType="RepeatButton">
                                                                                    <Grid x:Name="Root" Background="Transparent">
                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                <VisualState x:Name="Normal" />
                                                                                            </VisualStateGroup>
                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                    </Grid>
                                                                                </ControlTemplate>
                                                                                <ControlTemplate x:Key="HorizontalIncrementTemplate" TargetType="RepeatButton">
                                                                                    <Border Background="Transparent" BorderThickness="0" CornerRadius="2" RenderTransformOrigin="0.5,0.5" Cursor="Hand" >
                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                <VisualState x:Name="Normal">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimation BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5" />
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="MouseOver">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimation BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="Opacity" To="0.6" Duration="0:0:0.5" >
                                                                                                            <DoubleAnimation.EasingFunction>
                                                                                                                <QuarticEase EasingMode="EaseOut"/>
                                                                                                            </DoubleAnimation.EasingFunction>
                                                                                                        </DoubleAnimation>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Pressed">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimation Duration="0" To="0.6" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" />
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Disabled"/>
                                                                                            </VisualStateGroup>
                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                        <Path x:Name="path" Height="12" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" Width="12" RenderTransformOrigin="0.5,0.5" 
                                                                                          Stroke="{TemplateBinding Foreground}" StrokeThickness="2" Data="M 1,1.5 L 4.5,5 L 8,1.5" Stretch="Uniform">
                                                                                            <Path.RenderTransform>
                                                                                                <RotateTransform Angle="270" />
                                                                                            </Path.RenderTransform>
                                                                                        </Path>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                                <ControlTemplate x:Key="HorizontalDecrementTemplate" TargetType="RepeatButton">
                                                                                    <Border Background="Transparent" BorderThickness="0" CornerRadius="2" RenderTransformOrigin="0.5,0.5" Cursor="Hand" >
                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                <VisualState x:Name="Normal">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimation BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5" />
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="MouseOver">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimation BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="Opacity" To="0.6" Duration="0:0:0.5" >
                                                                                                            <DoubleAnimation.EasingFunction>
                                                                                                                <QuarticEase EasingMode="EaseOut"/>
                                                                                                            </DoubleAnimation.EasingFunction>
                                                                                                        </DoubleAnimation>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Pressed">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimation Duration="0" To="0.6" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" />
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Disabled"/>
                                                                                            </VisualStateGroup>
                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                        <Path x:Name="path" Height="12" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" Width="12" RenderTransformOrigin="0.5,0.5" 
                                                                                          Stroke="{TemplateBinding Foreground}" StrokeThickness="2" Data="M 1,1.5 L 4.5,5 L 8,1.5" Stretch="Uniform">
                                                                                            <Path.RenderTransform>
                                                                                                <RotateTransform Angle="90" />
                                                                                            </Path.RenderTransform>
                                                                                        </Path>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                                <ControlTemplate x:Key="VerticalIncrementTemplate" TargetType="RepeatButton">
                                                                                    <Grid x:Name="Root">
                                                                                    </Grid>
                                                                                </ControlTemplate>
                                                                                <ControlTemplate x:Key="VerticalDecrementTemplate" TargetType="RepeatButton">
                                                                                    <Grid x:Name="Root">
                                                                                    </Grid>
                                                                                </ControlTemplate>
                                                                                <ControlTemplate x:Key="VerticalThumbTemplate" TargetType="Thumb">
                                                                                    <Grid>
                                                                                    </Grid>
                                                                                </ControlTemplate>
                                                                                <ControlTemplate x:Key="HorizontalThumbTemplate" TargetType="Thumb">
                                                                                    <Grid>
                                                                                        <Grid x:Name="ThumbVisual" Margin="0">
                                                                                        </Grid>
                                                                                    </Grid>
                                                                                </ControlTemplate>
                                                                            </Grid.Resources>
                                                                            <VisualStateManager.VisualStateGroups>
                                                                                <VisualStateGroup x:Name="CommonStates">
                                                                                    <VisualState x:Name="Normal" />
                                                                                    <VisualState x:Name="MouseOver" />
                                                                                    <VisualState x:Name="Disabled">
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0" />
                                                                                        </Storyboard>
                                                                                    </VisualState>
                                                                                </VisualStateGroup>
                                                                            </VisualStateManager.VisualStateGroups>
                                                                            <Grid x:Name="HorizontalRoot">
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition Width="Auto" />
                                                                                    <ColumnDefinition Width="Auto" />
                                                                                    <ColumnDefinition Width="Auto" />
                                                                                    <ColumnDefinition Width="*" />
                                                                                    <ColumnDefinition Width="Auto" />
                                                                                </Grid.ColumnDefinitions>
                                                                                <RepeatButton x:Name="HorizontalSmallDecrease" Grid.Column="0" Width="12" IsTabStop="False" Interval="50" Template="{StaticResource HorizontalDecrementTemplate}" Margin="1" VerticalAlignment="Center" />
                                                                                <RepeatButton x:Name="HorizontalLargeDecrease" Grid.Column="1" Width="0" Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False" />
                                                                                <Thumb x:Name="HorizontalThumb" Background="{TemplateBinding Background}" MinWidth="0" Width="0" Grid.Column="2" Template="{StaticResource HorizontalThumbTemplate}" />
                                                                                <RepeatButton x:Name="HorizontalLargeIncrease" Grid.Column="3" Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False" />
                                                                                <RepeatButton x:Name="HorizontalSmallIncrease" Grid.Column="4" Width="12" IsTabStop="False" Interval="50" Template="{StaticResource HorizontalIncrementTemplate}" Margin="1" VerticalAlignment="Center" />
                                                                            </Grid>
                                                                            <Grid x:Name="VerticalRoot" Visibility="Collapsed">
                                                                                <Grid.RowDefinitions>
                                                                                    <RowDefinition Height="Auto" />
                                                                                    <RowDefinition Height="Auto" />
                                                                                    <RowDefinition Height="Auto" />
                                                                                    <RowDefinition Height="*" />
                                                                                    <RowDefinition Height="Auto" />
                                                                                </Grid.RowDefinitions>
                                                                                <RepeatButton x:Name="VerticalSmallDecrease" Grid.Row="0" Height="16" IsTabStop="False" Interval="50" Template="{StaticResource VerticalDecrementTemplate}" Margin="1" />
                                                                                <RepeatButton x:Name="VerticalLargeDecrease" Grid.Row="1" Height="0" Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False" />
                                                                                <Thumb x:Name="VerticalThumb" MinHeight="18" Height="18" Grid.Row="2" Template="{StaticResource VerticalThumbTemplate}" />
                                                                                <RepeatButton x:Name="VerticalLargeIncrease" Grid.Row="3" Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False" />
                                                                                <RepeatButton x:Name="VerticalSmallIncrease" Grid.Row="4" Height="16" IsTabStop="False" Interval="50" Template="{StaticResource VerticalIncrementTemplate}" Margin="1" />
                                                                            </Grid>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                        <Style x:Key="AttachmentViewerScrollViewerStyle" TargetType="ScrollViewer" >
                                                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                                            <Setter Property="VerticalScrollBarVisibility" Value="Disabled" />
                                                            <Setter Property="Padding" Value="0" />
                                                            <Setter Property="BorderThickness" Value="1" />
                                                            <Setter Property="BorderBrush">
                                                                <Setter.Value>
                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                        <GradientStop Color="#FFA3AEB9" Offset="0" />
                                                                        <GradientStop Color="#FF8399A9" Offset="0.375" />
                                                                        <GradientStop Color="#FF718597" Offset="0.375" />
                                                                        <GradientStop Color="#FF617584" Offset="1" />
                                                                    </LinearGradientBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="ScrollViewer" xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows">
                                                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="0">
                                                                            <Grid Background="{TemplateBinding Background}">
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition Width="14" />
                                                                                    <ColumnDefinition Width="*" />
                                                                                    <ColumnDefinition Width="14" />
                                                                                </Grid.ColumnDefinitions>
                                                                                <ScrollBar x:Name="VerticalScrollBar" Width="0" IsTabStop="False" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="2" Grid.Row="0" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Value="{TemplateBinding VerticalOffset}" Margin="0,-1,-1,-1"  />
                                                                                <ScrollBar x:Name="HorizontalScrollBar" Style="{StaticResource FatHorizontalScrollbarStyle}" IsTabStop="False" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.ColumnSpan="3" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Value="{TemplateBinding HorizontalOffset}" Margin="-1,0,-1,-1" VerticalAlignment="Top" Height="50" />
                                                                                <ScrollContentPresenter x:Name="ScrollContentPresenter" Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.Column="1" VerticalAlignment="Stretch" />
                                                                            </Grid>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>

                                                    </Border.Resources>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="BusyStates">
                                                            <VisualState x:Name="Loaded">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ProgressIndicator">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Visibility>Collapsed</Visibility>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Busy">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ProgressIndicator">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Visibility>Visible</Visibility>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <DoubleAnimation Duration="0:0:0.75" RepeatBehavior="Forever" To="360" Storyboard.TargetName="ProgressIndicator" 
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" />
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Grid Background="{TemplateBinding Background}" HorizontalAlignment="Stretch">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="1" />
                                                            <RowDefinition Height="*" />
                                                        </Grid.RowDefinitions>
                                                        <Rectangle x:Name="SeparatorBar" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" OpacityMask="{StaticResource OpacityGradient}" Fill="{TemplateBinding Foreground}" Visibility="Collapsed" />

                                                        <ScrollViewer x:Name="AttachmentScroller" Grid.Row="1" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Auto" BorderThickness="0" BorderBrush="Transparent" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" Style="{StaticResource AttachmentViewerScrollViewerStyle}" VerticalContentAlignment="Center" >
                                                            <ItemsControl x:Name="AttachmentList" ItemTemplate="{TemplateBinding ItemTemplate}" ItemsPanel="{StaticResource HorizontalItemsPaneltemplate}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="2" >
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="LayoutUpdated" >
                                                                        <i:Interaction.Behaviors>
                                                                            <ei:ConditionBehavior>
                                                                                <ei:ConditionalExpression>
                                                                                    <ei:ComparisonCondition LeftOperand="{Binding Items.Count, ElementName=AttachmentList}" Operator="GreaterThan" RightOperand="0"/>
                                                                                </ei:ConditionalExpression>
                                                                            </ei:ConditionBehavior>
                                                                        </i:Interaction.Behaviors>
                                                                        <ei:ChangePropertyAction TargetName="SeparatorBar" PropertyName="Visibility" Value="Visible" />
                                                                    </i:EventTrigger>
                                                                    <i:EventTrigger EventName="LayoutUpdated" >
                                                                        <i:Interaction.Behaviors>
                                                                            <ei:ConditionBehavior>
                                                                                <ei:ConditionalExpression>
                                                                                    <ei:ComparisonCondition LeftOperand="{Binding Items.Count, ElementName=AttachmentList}" Operator="LessThan" RightOperand="1"/>
                                                                                </ei:ConditionalExpression>
                                                                            </ei:ConditionBehavior>
                                                                        </i:Interaction.Behaviors>
                                                                        <ei:ChangePropertyAction TargetName="SeparatorBar" PropertyName="Visibility" Value="Collapsed" />
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                            </ItemsControl>
                                                        </ScrollViewer>
                                                        <Grid x:Name="ProgressIndicator" Background="Transparent" Grid.Row="1" 
                                                        Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                                            <Grid.RenderTransform>
                                                                <RotateTransform />
                                                            </Grid.RenderTransform>
                                                            <Ellipse Fill="#1E525252" Margin="11,2,11,20" Width="2" Height="2"/>
                                                            <Ellipse Fill="#3F525252" Height="3" Width="3" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,4,5,0" />
                                                            <Ellipse Fill="#7F525252" Width="4" HorizontalAlignment="Right" Height="4" VerticalAlignment="Top" Margin="0,9,1,0" />
                                                            <Ellipse Fill="#BF525252" Height="5" Width="5" VerticalAlignment="Bottom" Margin="0,0,3,3" HorizontalAlignment="Right" />
                                                            <Ellipse Fill="#FF525252" Height="6" Width="6" VerticalAlignment="Bottom" Margin="9,0" />
                                                        </Grid>
                                                    </Grid>
                                                </Border>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <extensibility:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                            <extensibility:NotNullVisibilityConverter x:Key="NotNullVisibilityConverter" />
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" />
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="1"/>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" MaxHeight="30" />
                        </Grid.RowDefinitions>
                        <Grid Margin="3,3,3,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" ></ColumnDefinition>
                                <ColumnDefinition Width="70"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding PopupItem.Title}" Grid.Row="0"
                                      Foreground="{TemplateBinding Foreground}"
                                      FontSize="13" FontWeight="Bold"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                TextTrimming="WordEllipsis">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="LayoutUpdated" >
                                        <i:Interaction.Behaviors>
                                            <ei:ConditionBehavior>
                                                <ei:ConditionalExpression>
                                                    <ei:ComparisonCondition LeftOperand="{Binding PopupItems.Count}" Operator="GreaterThan" RightOperand="1"/>
                                                </ei:ConditionalExpression>
                                            </ei:ConditionBehavior>
                                        </i:Interaction.Behaviors>
                                        <ei:ChangePropertyAction TargetName="PagerStack" PropertyName="Visibility" Value="Visible" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="LayoutUpdated" >
                                        <i:Interaction.Behaviors>
                                            <ei:ConditionBehavior>
                                                <ei:ConditionalExpression>
                                                    <ei:ComparisonCondition LeftOperand="{Binding PopupItems.Count}" Operator="LessThan"  RightOperand="2"/>
                                                </ei:ConditionalExpression>
                                            </ei:ConditionBehavior>
                                        </i:Interaction.Behaviors>
                                        <ei:ChangePropertyAction TargetName="PagerStack" PropertyName="Visibility" Value="Collapsed" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBlock>
                            <StackPanel Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal" Margin="0">
                                <StackPanel x:Name="PagerStack" HorizontalAlignment="Right" Orientation="Horizontal" Margin="0" Visibility="Collapsed" >
                                    <Button Style="{StaticResource ArrowButtonStyle}" Command="{Binding Previous}" 
                                        Foreground="{TemplateBinding Foreground}" Cursor="Hand" RenderTransformOrigin="0.5,0.5" Width="20" Height="20" >
                                        <Button.RenderTransform>
                                            <RotateTransform Angle="90" />
                                        </Button.RenderTransform>
                                    </Button>
                                    <Button Style="{StaticResource ArrowButtonStyle}" Command="{Binding Next}" 
                                        Foreground="{TemplateBinding Foreground}" Cursor="Hand" RenderTransformOrigin="0.5,0.5" 
                                        Margin="0" Width="20" Height="20">
                                        <Button.RenderTransform>
                                            <RotateTransform Angle="270" />
                                        </Button.RenderTransform>
                                    </Button>
                                </StackPanel>
                                <Button Style="{StaticResource CloseButtonStyle}" Foreground="{TemplateBinding Foreground}" Cursor="Hand" Margin="10,0,0,0">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <ei:ChangePropertyAction TargetObject="{Binding Container}" PropertyName="IsOpen" Value="false" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                            </StackPanel>
                        </Grid>
                        <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="12,0,0,2">
                            <TextBlock Text="{Binding SelectionDescription}" VerticalAlignment="Top" HorizontalAlignment="Left" Foreground="{TemplateBinding Foreground}" Visibility="{Binding Path=Visibility, ElementName=PagerStack}" />
                            <ContentControl Margin="5,0,0,0" 
                                Template="{StaticResource ActivityIndicatorTemplate}" 
                                HorizontalAlignment="Right" Visibility="{Binding InProgress, 
                                Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </StackPanel>
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="2" Margin="0" OpacityMask="{StaticResource OpacityGradient}"
                               Fill="{TemplateBinding Foreground}" />
                        <ScrollViewer x:Name="AttributeContainer" HorizontalScrollBarVisibility="Disabled"  VerticalScrollBarVisibility="Auto"  
                            MinHeight="150" MaxHeight="300" MaxWidth="300" Grid.Row="3" BorderThickness="0"
                            Padding="0" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}" Margin="5">
                            <Grid>
                                <ContentControl ContentTemplate="{Binding PopupItem.DataTemplate}"  Content="{Binding}"
                                    HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" 
                                    Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}"
                                    Visibility="{Binding PopupItem.DataTemplate, Converter={StaticResource NotNullVisibilityConverter}}" >
                                </ContentControl>
                            </Grid>
                        </ScrollViewer>

                        <esri:AttachmentEditor x:Name="AttachmentContainer" Grid.Row="4" FeatureLayer="{Binding PopupItem.Layer, Converter={StaticResource HasAttachmentsConverter}}" GraphicSource="{Binding PopupItem.Graphic}" Margin="0" 
                                               HorizontalAlignment="Stretch" Style="{StaticResource AttachmentViewer}"
                                               Filter="All Files (*.*)|*.*|Image Files|*.tif;*.jpg;*.gif;*.png;*.bmp|Text Files (.txt)|*.txt" 
                                               FilterIndex="1" Multiselect="True"
                                               >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="LayoutUpdated">
                                    <ei:ChangePropertyAction x:Name="BindSelf" TargetObject="{Binding}" PropertyName="AttachmentContainer" Value="{Binding ElementName=AttachmentContainer}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </esri:AttachmentEditor>
                        <ContentControl x:Name="PopupToolbarContainer"
                                        DataContext="{Binding }"
                                        Grid.Row="5"
                                        Margin="2"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Right" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
