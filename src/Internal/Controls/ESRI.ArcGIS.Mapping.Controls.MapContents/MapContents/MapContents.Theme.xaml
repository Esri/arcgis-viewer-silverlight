<!--
(c) Copyright ESRI.
This source is subject to the Microsoft Public License (Ms-PL).
Please see http://go.microsoft.com/fwlink/?LinkID=131993 for details.
All other rights reserved.
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:esri="http://schemas.esri.com/arcgis/client/2009" 
    xmlns:local="clr-namespace:ESRI.ArcGIS.Mapping.Controls.MapContents"
    xmlns:ext="http://schemas.esri.com/arcgis/client/extensibility/2010"
    xmlns:extWindowing="clr-namespace:ESRI.ArcGIS.Client.Extensibility;assembly=ESRI.ArcGIS.Mapping.Windowing"
    xmlns:controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit"
    xmlns:esriPrimitives="clr-namespace:ESRI.ArcGIS.Client.Toolkit.Primitives;assembly=ESRI.ArcGIS.Client.Toolkit"
    xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk">

    <local:ReverseBooleanConverter x:Key="ReverseBooleanConverter"/>
    <local:VisibilityConverter x:Key="VisibilityConverter"/>
    <local:ReverseVisibilityConverter x:Key="ReverseVisibilityConverter"/>
    <local:MapContentsLayerDisplayNameConverter x:Key="MapContentsLayerDisplayNameConverter"/>
    <sys:Double x:Key="SmallFontSize">11.0</sys:Double>
    <local:VisibilityStringNotNullOrEmptyConverter x:Key="VisibilityStringNotNullOrEmptyConverter"/>
    <local:SubLayerSupportsToggleVisibilityToVisibility x:Key="SubLayerSupportsToggleVisibilityToVisibility"/>
    <local:DisabledOpacityConverter x:Key="DisabledOpacityConverter"/>
    <local:ReverseEnumerationConverter x:Key="ReverseEnumerationConverter" />
    <local:CanToggleLayerVisibility x:Key="CanToggleLayerVisibility"/>
    <local:ShowLegendSwatchesByModeToVisibility x:Key="ShowLegendSwatchesByModeToVisibility" />
    <local:StringResourcesManager x:Key="Localization" />
    <local:IsBaseMapToVisibilityConverter x:Key="IsBaseMapToVisibilityConverter"/>
    <local:LegendItemLabelConverter x:Key="LegendItemLabelConverter"/>
    
    <Style x:Key="LegendToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="Root" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".7" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="UncheckedVisual"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckedVisual"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid HorizontalAlignment="Right" Margin="2 2 5 2">
                            <Path x:Name="UncheckedVisual" Data="M 0,0 L 0,9 L 5,4.5 Z" Fill="{StaticResource BackgroundTextColorBrush}" 
                                                      HorizontalAlignment="Right" Height="9" Stroke="{StaticResource BackgroundTextColorBrush}" StrokeThickness="1" 
                                                      StrokeLineJoin="Miter" VerticalAlignment="Center" Width="6"/>
                            <Path x:Name="CheckedVisual" Data="M 6,0 L 6,6 L 0,6 Z" Fill="{StaticResource BackgroundTextColorBrush}" 
                                                      Stroke="{StaticResource BackgroundTextColorBrush}"
                                                      HorizontalAlignment="Center" Height="6" Opacity="0" StrokeLineJoin="Miter"
                                                      VerticalAlignment="Center" Width="6"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Busy indicator displayed while the legend is requested-->
    <DataTemplate x:Key="BusyIndicatorTemplate">
        <Grid x:Name="BusyIndicator" Background="Transparent" Margin="3,0" 
							HorizontalAlignment="Left" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" >
            <Grid.Triggers>
                <EventTrigger RoutedEvent="Grid.Loaded">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard RepeatBehavior="Forever">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="canvas" 
			                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:01" Value="360"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Grid.Triggers>
            <Canvas RenderTransformOrigin="0.5,0.5" x:Name="canvas" Width="16" Height="16">
                <Canvas.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                        <SkewTransform AngleX="0" AngleY="0"/>
                        <RotateTransform Angle="0"/>
                        <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                </Canvas.RenderTransform>
                <Path x:Name="path" Opacity="1" RenderTransformOrigin="0.5,0.5" >
                    <Path.Effect>
                        <DropShadowEffect ShadowDepth="0" BlurRadius="5" Color="White" />
                    </Path.Effect>
                    <Path.Data>
                        <PathGeometry>
                            <PathGeometry.Figures>
                                <PathFigureCollection>
                                    <PathFigure StartPoint="8,0" IsClosed="True">
                                        <PathFigure.Segments>
                                            <PathSegmentCollection>
                                                <ArcSegment
                                                                Point="16,8"
                                                                Size="8,8"
                                                                SweepDirection="Clockwise"
                                                                IsLargeArc="False"
                                                                RotationAngle="0"
                                                                />
                                                <LineSegment Point="14,8"/>
                                                <ArcSegment
                                                                Point="8,1"
                                                                Size="8,8"
                                                                SweepDirection="Counterclockwise"
                                                                IsLargeArc="False"
                                                                RotationAngle="0"
                                                                />
                                            </PathSegmentCollection>
                                        </PathFigure.Segments>
                                    </PathFigure>
                                    <PathFigure StartPoint="16,8" IsClosed="True">
                                        <PathFigure.Segments>
                                            <PathSegmentCollection>
                                                <ArcSegment
                                                                Point="8,16"
                                                                Size="8,8"
                                                                SweepDirection="Clockwise"
                                                                IsLargeArc="False"
                                                                RotationAngle="0"
                                                                />
                                                <LineSegment Point="8,14"/>
                                                <ArcSegment
                                                                Point="14,8"
                                                                Size="7,7"
                                                                SweepDirection="Counterclockwise"
                                                                IsLargeArc="False"
                                                                RotationAngle="0"
                                                                />
                                            </PathSegmentCollection>
                                        </PathFigure.Segments>
                                    </PathFigure>
                                    <PathFigure StartPoint="8,16" IsClosed="True">
                                        <PathFigure.Segments>
                                            <PathSegmentCollection>
                                                <ArcSegment
                                                                Point="0,8"
                                                                Size="8,8"
                                                                SweepDirection="Clockwise"
                                                                IsLargeArc="False"
                                                                RotationAngle="0"
                                                                />
                                                <LineSegment Point="2,8"/>
                                                <ArcSegment
                                                                Point="8,14"
                                                                Size="7,7"
                                                                SweepDirection="Counterclockwise"
                                                                IsLargeArc="False"
                                                                RotationAngle="0"
                                                                />
                                            </PathSegmentCollection>
                                        </PathFigure.Segments>
                                    </PathFigure>

                                </PathFigureCollection>
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </Path.Data>
                    <Path.Fill>
                        <LinearGradientBrush SpreadMethod="Pad" MappingMode="RelativeToBoundingBox" StartPoint="0.515,-0.375" EndPoint="-0.279,0.433">
                            <GradientStop Color="#00000000" Offset="0"/>
                            <GradientStop Color="#FF000000" Offset="1"/>
                        </LinearGradientBrush>
                    </Path.Fill>
                </Path>
            </Canvas>
        </Grid>
    </DataTemplate>

    <ControlTemplate x:Key="CommonValidationToolTipTemplate" TargetType="ToolTip">
        <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="Translation" X="-25"/>
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0"/>
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="Translation">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="Translation"/>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4"/>
            <Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
            <Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2"/>
            <Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1"/>
            <Border Background="#FFDC000C" CornerRadius="2">
                <TextBlock Foreground="White" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" UseLayoutRounding="false"/>
            </Border>
        </Grid>
    </ControlTemplate>

    <Style x:Key="NoSelectionTreeViewItemStyle" TargetType="sdk:TreeViewItem">
        <Setter Property="Padding" Value="3"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="Margin" Value="0 1 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="sdk:TreeViewItem">
                    <Grid Background="{x:Null}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="15"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected"/>
                                <VisualState x:Name="SelectedInactive"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="HasItemsStates">
                                <VisualState x:Name="HasItems"/>
                                <VisualState x:Name="NoItems">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ExpanderButton">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualState x:Name="Collapsed"/>
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHost">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Validation">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Validation">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="ValidationToolTip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <local:ShowLayersVisibleAtScaleControl x:Name="ShowLayersVisibleAtScaleToVisibilityConverter" 
                                                                                         ShowLayersVisibleAtScale="{Binding Path=Tag.ShowLayersVisibleAtScale}"
                                                                                         IsInScaleRange="{Binding IsInScaleRange}"
                                                                                         LayerItems="{Binding LayerItems}"/>

                        <ToggleButton x:Name="ExpanderButton" Style="{StaticResource LegendToggleButtonStyle}"></ToggleButton>
                        <Button x:Name="Header" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}" ClickMode="Hover" Grid.Column="1" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="False" TabNavigation="Once" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Grid Background="{TemplateBinding Background}">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="Pressed"/>
                                                <VisualState x:Name="Disabled"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <ContentPresenter x:Name="Content" Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}"/>
                                    </Grid>
                                </ControlTemplate>
                            </Button.Template>
                            <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}"/>
                        </Button>
                        <Border x:Name="Validation" BorderBrush="#FFDB000C" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1" CornerRadius="2" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="ValidationToolTip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="True" Placement="Right" PlacementTarget="{Binding ElementName=Header}" Template="{StaticResource CommonValidationToolTipTemplate}"/>
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 Z" Fill="#FFDC000C" Margin="-1,3,0,0"/>
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#FFFFFFFF" Margin="-1,3,0,0"/>
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1" Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LegendStyle" TargetType="esri:Legend">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="esri:Legend">
                    <esriPrimitives:TreeViewExtended	
                            ItemsSource="{Binding LayerItemsSource, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ReverseEnumerationConverter}}"
							Background="{TemplateBinding Background}"
							Foreground="{TemplateBinding Foreground}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"      
							Padding="{TemplateBinding Padding}"
                            ItemContainerStyle="{StaticResource NoSelectionTreeViewItemStyle}"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
						>
                        <esriPrimitives:TreeViewExtended.ItemTemplate>
                            <sdk:HierarchicalDataTemplate ItemsSource="{Binding LayerItemsSource}" ItemContainerStyle="{StaticResource NoSelectionTreeViewItemStyle}">
                                <ContentPresenter Content="{Binding}" ContentTemplate="{Binding Template}" />
                            </sdk:HierarchicalDataTemplate>
                        </esriPrimitives:TreeViewExtended.ItemTemplate>
                    </esriPrimitives:TreeViewExtended>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Corresponds to the style assigned to layer configuration context menu -->
    <Style x:Key="LayerConfigContextMenuStyle" TargetType="toolkit:ContextMenu">
        <Setter Property="Background" Value="{StaticResource BackgroundGradientBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource BackgroundTextColorBrush}"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#FF959595" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="toolkit:ContextMenu">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2">
                        <Border.Effect>
                            <DropShadowEffect Color="LightGray" ShadowDepth="3" />
                        </Border.Effect>
                        <Grid>
                            <Rectangle RadiusX="2" RadiusY="2" Width="28" Margin="2" HorizontalAlignment="Left" />
                            <Rectangle Fill="{StaticResource SelectionColorBrush}" Width="1" Margin="30,2,0,2" HorizontalAlignment="Left" />
                            <ItemsPresenter Margin="{TemplateBinding Padding}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:MapContents">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource BackgroundTextColorBrush}" />
        <Setter Property="ScrollViewerStyle" Value="{StaticResource ThinBarScrollViewerStyle}" />
        <Setter Property="ToggleButtonStyle" Value="{StaticResource LegendToggleButtonStyle}" />
        <Setter Property="SelectionColorBrush" Value="{StaticResource SelectionColorBrush}" />
        <Setter Property="SelectionOutlineColorBrush" Value="{StaticResource SelectionOutlineColorBrush}"  />
        <Setter Property="FontSize" Value="{StaticResource SmallFontSize}" />
        <Setter Property="Opacity" Value=".8" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:MapContents">
                    <Grid Margin="0,3,0,3">
                        <Grid.Resources>

                            <SolidColorBrush x:Key="LegendSelectionColorBrush" Color="{Binding SelectionColorBrush.Color, RelativeSource={RelativeSource TemplatedParent}}" />
                            <SolidColorBrush x:Key="LegendSelectionOutlineColorBrush" Color="{Binding SelectionOutlineColorBrush.Color, RelativeSource={RelativeSource TemplatedParent}}" />
                            
                            <DataTemplate x:Key="MapLayerTemplate">
                                <Grid Margin="-1,-1,-1,-1" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition MinHeight="25"/>
                                    </Grid.RowDefinitions>

                                    <Grid>
                                        <Grid Visibility="{Binding Path=Tag.AllowLayerSelection, Converter={StaticResource VisibilityConverter}}">
                                            <Rectangle                                               
                                                Visibility="{Binding Path=Layer.(local:CoreExtensions.IsSelected), Converter={StaticResource VisibilityConverter}}"
                                                Fill="{StaticResource LegendSelectionColorBrush}"                                                
                                                Stroke="{StaticResource LegendSelectionOutlineColorBrush}"
                                                Margin="-2"
                                                RadiusX="2"
                                                RadiusY="2">
                                            </Rectangle>
                                        </Grid>
                                        
                                        <Rectangle                                               
                                            Fill="Transparent"                                                
                                            Stroke="Transparent"
                                            Margin="-2"
                                            RadiusX="2"
                                            RadiusY="2"
                                            Visibility="{Binding Path=(extWindowing:LayerExtensions.InitialUpdateFailed), Converter={StaticResource ReverseVisibilityConverter}}">
                                            <i:Interaction.Behaviors>
                                                <local:RenameLayerOnDoubleClickBehavior/>
                                                <local:ContextMenuOpenCloseBehavior
                                                    ContextMenuStyle="{StaticResource LayerConfigContextMenuStyle}"
                                                    ContextMenuBackground="{Binding Background, RelativeSource={RelativeSource AncestorType=local:MapContents}}"
                                                    ContextMenuForeground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=local:MapContents}}"/>
                                                <local:MapContentsSelectLayerItemOnClickBehavior IsEnabled="{Binding Path=Tag.AllowLayerSelection}"/>
                                            </i:Interaction.Behaviors>
                                        </Rectangle>

                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Name="layerStackPanel">

                                            <ContentControl ContentTemplate="{StaticResource BusyIndicatorTemplate}"
									            Visibility="{Binding BusyIndicatorVisibility}"/>

                                            <Grid Visibility="{Binding Path=Layer, Converter={StaticResource IsBaseMapToVisibilityConverter}}">
                                                <Grid Visibility="{Binding Path=Layer.(extWindowing:LayerExtensions.InitialUpdateFailed), Converter={StaticResource ReverseVisibilityConverter}}">
                                                    <CheckBox VerticalAlignment="Center" 
                                                        Visibility="{Binding Path=Tag.Mode, Converter={StaticResource CanToggleLayerVisibility}}"
                                                    IsChecked="{Binding IsEnabled, Mode=TwoWay}" />
                                                </Grid>
                                            </Grid>

                                            <Image x:Name="ErrorIcon" VerticalAlignment="Center" Source="/ESRI.ArcGIS.Mapping.Controls.MapContents;component/Images/caution16.png" Stretch="None" Margin="2"
                                                   Visibility="{Binding Path=Layer.(extWindowing:LayerExtensions.ErrorMessage), Converter={StaticResource VisibilityStringNotNullOrEmptyConverter}}">
                                                <ToolTipService.ToolTip>
                                                    <TextBlock Text="{Binding Path=Layer.(extWindowing:LayerExtensions.ErrorMessage)}" Foreground="Red" FontSize="{StaticResource SmallFontSize}" TextWrapping="Wrap" />
                                                </ToolTipService.ToolTip>
                                            </Image>
                                            
                                            <TextBlock 
                                                Text="{Binding Path=Layer.(ext:MapApplication.LayerName)}"
                                                IsHitTestVisible="False" VerticalAlignment="Center"
                                                Opacity="{Binding Path=Layer.(extWindowing:LayerExtensions.InitialUpdateFailed), Converter={StaticResource DisabledOpacityConverter}}" 
                                                Visibility="{Binding ElementName=layerStackPanel, Path=(local:CoreExtensions.IsEdit), Converter={StaticResource ReverseVisibilityConverter}}">
                                            </TextBlock>

                                            <TextBox
                                                Text="{Binding Path=Layer.(ext:MapApplication.LayerName)}"
                                                VerticalAlignment="Center"
                                                Visibility="{Binding ElementName=layerStackPanel, Path=(local:CoreExtensions.IsEdit), Converter={StaticResource VisibilityConverter}}"
                                                IsEnabled="{Binding ElementName=layerStackPanel, Path=(local:CoreExtensions.IsEdit)}">
                                                <i:Interaction.Behaviors>
                                                    <local:RenameLayerCompletedBehavior />
                                                </i:Interaction.Behaviors>
                                            </TextBox>

                                        </StackPanel>
                                    </Grid>
                                </Grid>
                            </DataTemplate>

                            <DataTemplate x:Key="LayerTemplate">
                                <Grid Margin="-1,-3,0,-3" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition MinHeight="25"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- Column 2 -->
                                    <Grid>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">

                                            <Grid Visibility="{Binding Layer, Converter={StaticResource SubLayerSupportsToggleVisibilityToVisibility}}">
                                                <CheckBox VerticalAlignment="Center"
                                                    Visibility="{Binding Path=Tag.Mode,  Converter={StaticResource CanToggleLayerVisibility}}"
                                                IsChecked="{Binding IsEnabled, Mode=TwoWay}" />
											</Grid>

                                            <TextBlock Text="{Binding Converter={StaticResource MapContentsLayerDisplayNameConverter}}" 
                                                IsHitTestVisible="False" VerticalAlignment="Center">
                                            </TextBlock>
                                        </StackPanel>

                                    </Grid>
                                </Grid>
                            </DataTemplate>

                            <DataTemplate x:Key="LegendItemTemplate">
                                <StackPanel Orientation="Horizontal" Margin="0,-1">
                                    <Grid Visibility="{Binding Path=Tag.Mode, Converter={StaticResource ShowLegendSwatchesByModeToVisibility}}">
                                        <Image Source="{Binding ImageSource}" HorizontalAlignment="Center" VerticalAlignment="Center"
						                    Stretch="None" MaxHeight="55" MaxWidth="55" MinWidth="20" Margin="0,-1" />
                                    </Grid>
                                    <TextBlock Text="{Binding Label, Converter={StaticResource LegendItemLabelConverter}}" Margin="5,0,0,0" VerticalAlignment="Center" />
                                </StackPanel>
                            </DataTemplate>

                        </Grid.Resources>
                        
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <i:Interaction.Behaviors>
                            <local:OverrideMouseRightButtonDownBehavior />
                        </i:Interaction.Behaviors>

                        <!--Legend Control-->
                        <ScrollViewer x:Name="ScrollViewer"
                                          BorderThickness="0" 
                                          Style="{TemplateBinding ScrollViewerStyle}"
                                          HorizontalScrollBarVisibility="Auto"
                                          VerticalScrollBarVisibility="Auto"
                                          HorizontalContentAlignment="Stretch"
                                          VerticalContentAlignment="Stretch">
                                <Grid>
                                    <esri:Legend x:Name="Legend"
                                             Foreground="{TemplateBinding Foreground}"
                                             Map="{Binding Map, RelativeSource={RelativeSource TemplatedParent}}" 
                                             LayerItemsMode="Tree" 
                                             LayerIDs="{Binding LayerIds}"
                                             ShowOnlyVisibleLayers="False"
                                             BorderThickness="0"
                                             Margin="-10,-10,0,0"
                                             LayerTemplate="{StaticResource LayerTemplate}"
                                             LegendItemTemplate="{StaticResource LegendItemTemplate}"
                                             MapLayerTemplate="{StaticResource MapLayerTemplate}"
                                             Style="{StaticResource LegendStyle}">
                                        <i:Interaction.Behaviors>
                                            <local:MapContentsRefreshed/>
                                        </i:Interaction.Behaviors>
                                    </esri:Legend> 

                                </Grid>
                        </ScrollViewer>

                        <!-- Configure section -->
                        <Grid Grid.Row="1" Margin="2,4,2,4"
                              Visibility="{Binding Path=IsEditMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource VisibilityConverter}}">
                            <Button Name="ConfigureButton" HorizontalAlignment="Stretch" Margin="2"
                                    Foreground="{StaticResource AccentTextColorBrush}" Style="{StaticResource TransparentButtonStyle}" 
                                    Background="{StaticResource AccentColorBrush}" BorderBrush="{StaticResource AccentColorBrush}"
                                    Padding="5">
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                    <Image Source="/ESRI.ArcGIS.Mapping.Controls.MapContents;component/Images/configure16.png" 
                                          Stretch="None" />
                                    <TextBlock Margin="4,0,0,0" Text="{Binding ConverterParameter=ConfigureMapContents, Converter={StaticResource Localization}, Source={StaticResource Localization}}" FontWeight="Bold" />
                                </StackPanel>
                            </Button>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>
