<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExceptionAdditionConverterDoesNotSupportType" xml:space="preserve">
    <value>AdditionConverter не поддерживает тип {0}</value>
  </data>
  <data name="ExceptionCannotcallSyncronousMethodGetFileAsText" xml:space="preserve">
    <value>Не удалось вызвать синхронный метод GetFileAsText в Silverlight. Используйте GetFileAsTextAsync.</value>
  </data>
  <data name="ExceptionCannotCompareWith" xml:space="preserve">
    <value>Не удалось сравнить с {0}</value>
  </data>
  <data name="ExceptionCannotDeserializeResponse" xml:space="preserve">
    <value>Не удалось выполнить десериализацию ответа</value>
  </data>
  <data name="ExceptionClusterer" xml:space="preserve">
    <value>Кластеризация</value>
  </data>
  <data name="ExceptionConfigFileUrlMustBeSpecified" xml:space="preserve">
    <value>ConfigFileUrl должен быть указан</value>
  </data>
  <data name="ExceptionConfigurationFileEmpty" xml:space="preserve">
    <value>Файл конфигурации был пуст</value>
  </data>
  <data name="ExceptionConfigurationXmlIsEmpty" xml:space="preserve">
    <value>Файл конфигурации xml пуст</value>
  </data>
  <data name="ExceptionDataSource" xml:space="preserve">
    <value>dataSource</value>
  </data>
  <data name="ExceptionElement" xml:space="preserve">
    <value>элемент</value>
  </data>
  <data name="ExceptionEmptyFile" xml:space="preserve">
    <value>Файл пуст</value>
  </data>
  <data name="ExceptionExtensionUrl" xml:space="preserve">
    <value>extensionURL</value>
  </data>
  <data name="ExceptionFileNotFound" xml:space="preserve">
    <value>Файл не найден</value>
  </data>
  <data name="ExceptionGraphicsLayer" xml:space="preserve">
    <value>graphicsLayer</value>
  </data>
  <data name="ExceptionIdforDataSourceMustNotBeEmpty" xml:space="preserve">
    <value>Id для dataSource не может быть пустым</value>
  </data>
  <data name="ExceptionInconsistentTotalNumberOfValues" xml:space="preserve">
    <value>Несовместимое общее количество значений</value>
  </data>
  <data name="ExceptionInvalidFileMustBeUrlForSilverlightApplication" xml:space="preserve">
    <value>Файл поврежден. Необходим Url для приложений silverlight</value>
  </data>
  <data name="ExceptionInvalidPathForresourceDictionary" xml:space="preserve">
    <value>Неверный путь к словарю ресурсов {0}</value>
  </data>
  <data name="ExceptionLayer" xml:space="preserve">
    <value>слой</value>
  </data>
  <data name="ExceptionMap" xml:space="preserve">
    <value>карта</value>
  </data>
  <data name="ExceptionMustSpecifyConfigurationFile" xml:space="preserve">
    <value>Необходимо задать ConfigurationFile</value>
  </data>
  <data name="ExceptionMustSpecifyFile" xml:space="preserve">
    <value>Необходимо задать файл</value>
  </data>
  <data name="ExceptionMustSpecifyFileUrl" xml:space="preserve">
    <value>Необходимо задать FileUrl</value>
  </data>
  <data name="ExceptionMustSpecifyLocatorUrl" xml:space="preserve">
    <value>Необходимо задать LocatorUrl</value>
  </data>
  <data name="ExceptionMustSpecifyValidFileUrl" xml:space="preserve">
    <value>Необходимо задать корректный FileUrl</value>
  </data>
  <data name="ExceptionNamespaces" xml:space="preserve">
    <value>namespaces</value>
  </data>
  <data name="ExceptionNoBrushesFound" xml:space="preserve">
    <value>Кисти не найдены</value>
  </data>
  <data name="ExceptionNoDefaultSymbolsFoundInDictionaryForGeometryType" xml:space="preserve">
    <value>Не найдены символы по умолчанию в словаре {0} для geometrytype = {1}</value>
  </data>
  <data name="ExceptionNoResourceDictionaryAvailableForGeometryType" xml:space="preserve">
    <value>Для geometryType = {0} нет доступных словарей ресурсов</value>
  </data>
  <data name="ExceptionNoResourceDictionaryfoundForGeometryType" xml:space="preserve">
    <value>Для geometrytype = {0} не найден словарь ресурсов</value>
  </data>
  <data name="ExceptionNoResultsFromProjection" xml:space="preserve">
    <value>Нет результатов проекции</value>
  </data>
  <data name="ExceptionNoSymbolAvailableInResourceDictionary" xml:space="preserve">
    <value>В словаре ресурсов {0} нет доступных символов</value>
  </data>
  <data name="ExceptionNoThemeFileUrlSpecified" xml:space="preserve">
    <value>Не задан ThemeFileUrl</value>
  </data>
  <data name="ExceptionNumberofGraphicsBeforeAndAfterProjectionAreNotEqual" xml:space="preserve">
    <value>Количество графики до и после проецирования не совпадает</value>
  </data>
  <data name="ExceptionOutputSpatialReference" xml:space="preserve">
    <value>outputSpatialReference</value>
  </data>
  <data name="ExceptionRequiresPointValue" xml:space="preserve">
    <value>Необходимо значение точки</value>
  </data>
  <data name="ExceptionResourceDictionaryEmpty" xml:space="preserve">
    <value>словарь ресурсов пуст</value>
  </data>
  <data name="ExceptionSymbolConfigXmlEmpty" xml:space="preserve">
    <value>symbolConfigXml пуст</value>
  </data>
  <data name="ExceptionSymbolDescriptionValueNull" xml:space="preserve">
    <value>значение SymbolDescription равно 0</value>
  </data>
  <data name="ExceptionSymbolFolderParentUrlMustBeSpecified" xml:space="preserve">
    <value>Необходимо задать SymbolFolderParentUrl</value>
  </data>
  <data name="ExceptionUnableToLoadconfigurationStoreFromEmbeddedResource" xml:space="preserve">
    <value>Не удалось загрузить конфигурацию из встроенных ресурсов</value>
  </data>
  <data name="ExceptionUnableToParseFile" xml:space="preserve">
    <value>Не удалось интерпретировать файл</value>
  </data>
  <data name="ExceptionUnableToRetrieveConnectionsFromEmbeddedResource" xml:space="preserve">
    <value>Не удалось получить подключения из встроенных ресурсов</value>
  </data>
  <data name="ExceptionUnableToretrievedefaultLinearGradientBrushes" xml:space="preserve">
    <value>Не удалось получить кисти линейного градиента по умолчанию</value>
  </data>
  <data name="ExceptionUnableToRetrieveLinearGradientBrushes" xml:space="preserve">
    <value>Не удалось получить кисти линейного градиента.</value>
  </data>
  <data name="ExceptionUnableToretrieveResourceDictionaryContents" xml:space="preserve">
    <value>Не удалось получить содержание словаря ресурсов</value>
  </data>
  <data name="ExceptionUnknownError" xml:space="preserve">
    <value>Неизвестная ошибка</value>
  </data>
  <data name="Graphics" xml:space="preserve">
    <value>графика</value>
  </data>
  <data name="NoneInAngleBraces" xml:space="preserve">
    <value>&lt;нет&gt;</value>
  </data>
  <data name="Points" xml:space="preserve">
    <value>точки</value>
  </data>
  <data name="FlagCheckered" xml:space="preserve">
    <value>Клетчатый флаг</value>
  </data>
  <data name="FlagGreen" xml:space="preserve">
    <value>Зеленый флаг</value>
  </data>
  <data name="FlagRed" xml:space="preserve">
    <value>Красный флаг</value>
  </data>
  <data name="FlagWhite" xml:space="preserve">
    <value>Белый флаг</value>
  </data>
  <data name="FlagYellow" xml:space="preserve">
    <value>Желтый флаг</value>
  </data>
  <data name="Pin2RedShiny" xml:space="preserve">
    <value>Красная блестящая булавка 2</value>
  </data>
  <data name="PinBlueShiny" xml:space="preserve">
    <value>Синяя блестящая булавка</value>
  </data>
  <data name="PinGoldShiny" xml:space="preserve">
    <value>Золотая блестящая булавка</value>
  </data>
  <data name="PinGreenShiny" xml:space="preserve">
    <value>Зеленая блестящая булавка</value>
  </data>
  <data name="PinLightBlueShiny" xml:space="preserve">
    <value>Голубая блестящая булавка</value>
  </data>
  <data name="PinLightGreenShiny" xml:space="preserve">
    <value>Светло-зеленая блестящая булавка</value>
  </data>
  <data name="PinPurpleShiny" xml:space="preserve">
    <value>Фиолетовая блестящая булавка</value>
  </data>
  <data name="PinShiny" xml:space="preserve">
    <value>Блестящая булавка</value>
  </data>
  <data name="RedShinyPin" xml:space="preserve">
    <value>Красная блестящая булавка</value>
  </data>
  <data name="StickpinBlack" xml:space="preserve">
    <value>Черная булавка</value>
  </data>
  <data name="StickpinBlue" xml:space="preserve">
    <value>Синяя булавка</value>
  </data>
  <data name="StickpinBrown" xml:space="preserve">
    <value>Коричневая булавка</value>
  </data>
  <data name="StickpinGray" xml:space="preserve">
    <value>Серая булавка</value>
  </data>
  <data name="StickpinGreen" xml:space="preserve">
    <value>Зеленая булавка</value>
  </data>
  <data name="StickpinLightBlue" xml:space="preserve">
    <value>Голубая булавка</value>
  </data>
  <data name="StickpinOrange" xml:space="preserve">
    <value>Оранжевая булавка</value>
  </data>
  <data name="StickpinPurple" xml:space="preserve">
    <value>Фиолетовая булавка</value>
  </data>
  <data name="StickpinRed" xml:space="preserve">
    <value>Красная булавка</value>
  </data>
  <data name="StickpinSpringGreen" xml:space="preserve">
    <value>Светло-зеленая булавка</value>
  </data>
  <data name="StickpinWhite" xml:space="preserve">
    <value>Белая булавка</value>
  </data>
  <data name="StickpinYellow" xml:space="preserve">
    <value>Желтая булавка</value>
  </data>
  <data name="SymbolAmberBeacon" xml:space="preserve">
    <value>Желтый маячок</value>
  </data>
  <data name="SymbolBlackBeacon" xml:space="preserve">
    <value>Черный маячок</value>
  </data>
  <data name="SymbolBlackWaypoint" xml:space="preserve">
    <value>Черная остановка</value>
  </data>
  <data name="SymbolBlueBeacon" xml:space="preserve">
    <value>Голубой маячок</value>
  </data>
  <data name="SymbolBlueSphere" xml:space="preserve">
    <value>Голубой шар</value>
  </data>
  <data name="SymbolBlueWaypoint" xml:space="preserve">
    <value>Голубая остановка</value>
  </data>
  <data name="SymbolCapital1" xml:space="preserve">
    <value>Столица 1</value>
  </data>
  <data name="SymbolCapital2" xml:space="preserve">
    <value>Столица 2</value>
  </data>
  <data name="SymbolCircleX" xml:space="preserve">
    <value>Круг с перекрестием</value>
  </data>
  <data name="SymbolCrossHair" xml:space="preserve">
    <value>Перекрестие</value>
  </data>
  <data name="SymbolGreenBeacon" xml:space="preserve">
    <value>Зеленый маячок</value>
  </data>
  <data name="SymbolGreenSphere" xml:space="preserve">
    <value>Зеленый шар</value>
  </data>
  <data name="SymbolOrangeBeacon" xml:space="preserve">
    <value>Оранжевый маячок</value>
  </data>
  <data name="SymbolOrangeSphere" xml:space="preserve">
    <value>Оранжевый шар</value>
  </data>
  <data name="SymbolPopulated1" xml:space="preserve">
    <value>Заполнение 1</value>
  </data>
  <data name="SymbolPopulated2" xml:space="preserve">
    <value>Заполнение 2</value>
  </data>
  <data name="SymbolPopulated3" xml:space="preserve">
    <value>Заполнение 3</value>
  </data>
  <data name="SymbolPopulated4" xml:space="preserve">
    <value>Заполнение 4</value>
  </data>
  <data name="SymbolPopulated5" xml:space="preserve">
    <value>Заполнение 5</value>
  </data>
  <data name="SymbolPopulated6" xml:space="preserve">
    <value>Заполнение 6</value>
  </data>
  <data name="SymbolPopulated7" xml:space="preserve">
    <value>Заполнение 7</value>
  </data>
  <data name="SymbolPurpleSphere" xml:space="preserve">
    <value>Фиолетовый шар</value>
  </data>
  <data name="SymbolRedBeacon" xml:space="preserve">
    <value>Красный маячок</value>
  </data>
  <data name="SymbolRedSphere" xml:space="preserve">
    <value>Красный шар</value>
  </data>
  <data name="SymbolWhiteWaypoint" xml:space="preserve">
    <value>Белая остановка</value>
  </data>
  <data name="SymbolYellowArrow" xml:space="preserve">
    <value>Желтая стрелка</value>
  </data>
  <data name="SymbolYellowSphere" xml:space="preserve">
    <value>Желтый шар</value>
  </data>
  <data name="ExceptionRequiresParameter" xml:space="preserve">
    <value>Необходимо задать параметр</value>
  </data>
  <data name="ExceptionAppendPropertyCalledOutsideOfAnObject" xml:space="preserve">
    <value>AppendProperty вызывается вне объекта</value>
  </data>
  <data name="ExceptionBadEscape" xml:space="preserve">
    <value>Ошибка выхода</value>
  </data>
  <data name="ExceptionConverters" xml:space="preserve">
    <value>конвертеры</value>
  </data>
  <data name="ExceptionEndArrayCalledwithNoMatchingStartArray" xml:space="preserve">
    <value>EndArray вызывается без сопоставленного StartArray</value>
  </data>
  <data name="ExceptionEndArrayIndentedCalledwithNoMatchingStartArray" xml:space="preserve">
    <value>EndArrayIndented вызывается без сопоставленного StartArray</value>
  </data>
  <data name="ExceptionEndObjectCalledWithNoMatchingStartObject" xml:space="preserve">
    <value>EndObject вызывается без сопоставленного StartObject</value>
  </data>
  <data name="ExceptionEndObjectIndentedCalledWithNoMatchingStartObject" xml:space="preserve">
    <value>EndObjectIndented вызывается без сопоставленного StartObject</value>
  </data>
  <data name="ExceptionInput" xml:space="preserve">
    <value>ввод</value>
  </data>
  <data name="ExceptionStartPropertycalledOutsideOfAnObject" xml:space="preserve">
    <value>StartProperty вызывается вне объекта</value>
  </data>
  <data name="ExceptionType" xml:space="preserve">
    <value>тип</value>
  </data>
  <data name="ExceptionWritePropertyCalledOutsideOfAnObject" xml:space="preserve">
    <value>WriteProperty вызывается вне объекта</value>
  </data>
  <data name="MoreInfo" xml:space="preserve">
    <value>Дополнительная информация</value>
  </data>
  <data name="RootVisualError" xml:space="preserve">
    <value>Не удалось визуализировать корневое приложение</value>
  </data>
  <data name="ExceptionNoResult" xml:space="preserve">
    <value>По этому запросу не возвращено ни одного результата</value>
  </data>
</root>