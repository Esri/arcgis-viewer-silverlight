<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExceptionAdditionConverterDoesNotSupportType" xml:space="preserve">
    <value>AdditionConverter はタイプ {0} をサポートしません</value>
  </data>
  <data name="ExceptionCannotcallSyncronousMethodGetFileAsText" xml:space="preserve">
    <value>Silverlight では同期メソッドの GetFileAsText を呼び出せません。GetFileAsTextAsync を代わりに使用してください。</value>
  </data>
  <data name="ExceptionCannotCompareWith" xml:space="preserve">
    <value>{0} と比較できません</value>
  </data>
  <data name="ExceptionCannotDeserializeResponse" xml:space="preserve">
    <value>応答をデシリアライズできません</value>
  </data>
  <data name="ExceptionClusterer" xml:space="preserve">
    <value>クラスタリング</value>
  </data>
  <data name="ExceptionConfigFileUrlMustBeSpecified" xml:space="preserve">
    <value>ConfigFileUrl を指定する必要があります</value>
  </data>
  <data name="ExceptionConfigurationFileEmpty" xml:space="preserve">
    <value>構成ファイルが空です</value>
  </data>
  <data name="ExceptionConfigurationXmlIsEmpty" xml:space="preserve">
    <value>構成ファイルの xml が空です</value>
  </data>
  <data name="ExceptionDataSource" xml:space="preserve">
    <value>dataSource</value>
  </data>
  <data name="ExceptionElement" xml:space="preserve">
    <value>エレメント</value>
  </data>
  <data name="ExceptionEmptyFile" xml:space="preserve">
    <value>ファイルが空です</value>
  </data>
  <data name="ExceptionExtensionUrl" xml:space="preserve">
    <value>extensionURL</value>
  </data>
  <data name="ExceptionFileNotFound" xml:space="preserve">
    <value>ファイルが見つかりませんでした</value>
  </data>
  <data name="ExceptionGraphicsLayer" xml:space="preserve">
    <value>graphicsLayer</value>
  </data>
  <data name="ExceptionIdforDataSourceMustNotBeEmpty" xml:space="preserve">
    <value>dataSource の ID は空にできません</value>
  </data>
  <data name="ExceptionInconsistentTotalNumberOfValues" xml:space="preserve">
    <value>値の総数が一致しません</value>
  </data>
  <data name="ExceptionInvalidFileMustBeUrlForSilverlightApplication" xml:space="preserve">
    <value>ファイルが無効です。Silverlight アプリケーションの URL を指定する必要があります</value>
  </data>
  <data name="ExceptionInvalidPathForresourceDictionary" xml:space="preserve">
    <value>リソース ディクショナリ {0} のパスが無効です</value>
  </data>
  <data name="ExceptionLayer" xml:space="preserve">
    <value>レイヤ</value>
  </data>
  <data name="ExceptionMap" xml:space="preserve">
    <value>マップ</value>
  </data>
  <data name="ExceptionMustSpecifyConfigurationFile" xml:space="preserve">
    <value>ConfigurationFile を指定する必要があります</value>
  </data>
  <data name="ExceptionMustSpecifyFile" xml:space="preserve">
    <value>ファイルを指定する必要があります</value>
  </data>
  <data name="ExceptionMustSpecifyFileUrl" xml:space="preserve">
    <value>FileUrl を指定する必要があります</value>
  </data>
  <data name="ExceptionMustSpecifyLocatorUrl" xml:space="preserve">
    <value>LocatorUrl を指定する必要があります</value>
  </data>
  <data name="ExceptionMustSpecifyValidFileUrl" xml:space="preserve">
    <value>有効な FileUrl を指定する必要があります</value>
  </data>
  <data name="ExceptionNamespaces" xml:space="preserve">
    <value>namespaces</value>
  </data>
  <data name="ExceptionNoBrushesFound" xml:space="preserve">
    <value>ブラシが見つかりませんでした</value>
  </data>
  <data name="ExceptionNoDefaultSymbolsFoundInDictionaryForGeometryType" xml:space="preserve">
    <value>ジオメトリ タイプが {1} のデフォルト シンボルがディクショナリ {0} に見つかりませんでした</value>
  </data>
  <data name="ExceptionNoResourceDictionaryAvailableForGeometryType" xml:space="preserve">
    <value>ジオメトリ タイプが {0} のリソース ディクショナリはありません</value>
  </data>
  <data name="ExceptionNoResourceDictionaryfoundForGeometryType" xml:space="preserve">
    <value>ジオメトリ タイプが {0} のリソース ディクショナリは見つかりませんでした</value>
  </data>
  <data name="ExceptionNoResultsFromProjection" xml:space="preserve">
    <value>投影変換の結果はありません</value>
  </data>
  <data name="ExceptionNoSymbolAvailableInResourceDictionary" xml:space="preserve">
    <value>リソース ディクショナリ {0} にシンボルがありません</value>
  </data>
  <data name="ExceptionNoThemeFileUrlSpecified" xml:space="preserve">
    <value>ThemeFileUrl が指定されていません</value>
  </data>
  <data name="ExceptionNumberofGraphicsBeforeAndAfterProjectionAreNotEqual" xml:space="preserve">
    <value>投影変換の前後でグラフィックスの数が等しくありません</value>
  </data>
  <data name="ExceptionOutputSpatialReference" xml:space="preserve">
    <value>outputSpatialReference</value>
  </data>
  <data name="ExceptionRequiresPointValue" xml:space="preserve">
    <value>ポイント値が必要です</value>
  </data>
  <data name="ExceptionResourceDictionaryEmpty" xml:space="preserve">
    <value>リソース ディクショナリが空です</value>
  </data>
  <data name="ExceptionSymbolConfigXmlEmpty" xml:space="preserve">
    <value>symbolConfigXml が空です</value>
  </data>
  <data name="ExceptionSymbolDescriptionValueNull" xml:space="preserve">
    <value>SymbolDescription の値が Null です</value>
  </data>
  <data name="ExceptionSymbolFolderParentUrlMustBeSpecified" xml:space="preserve">
    <value>SymbolFolderParentUrl を指定する必要があります</value>
  </data>
  <data name="ExceptionUnableToLoadconfigurationStoreFromEmbeddedResource" xml:space="preserve">
    <value>埋め込まれたリソースから構成ストアを読み込めません</value>
  </data>
  <data name="ExceptionUnableToParseFile" xml:space="preserve">
    <value>ファイルを解析できません</value>
  </data>
  <data name="ExceptionUnableToRetrieveConnectionsFromEmbeddedResource" xml:space="preserve">
    <value>埋め込まれたリソースから接続を取得できません</value>
  </data>
  <data name="ExceptionUnableToretrievedefaultLinearGradientBrushes" xml:space="preserve">
    <value>デフォルトの線形グラデーション ブラシを取得できません</value>
  </data>
  <data name="ExceptionUnableToRetrieveLinearGradientBrushes" xml:space="preserve">
    <value>線形グラデーション ブラシを取得できません。</value>
  </data>
  <data name="ExceptionUnableToretrieveResourceDictionaryContents" xml:space="preserve">
    <value>リソース ディクショナリの内容を取得できません</value>
  </data>
  <data name="ExceptionUnknownError" xml:space="preserve">
    <value>原因不明のエラー</value>
  </data>
  <data name="Graphics" xml:space="preserve">
    <value>グラフィックス</value>
  </data>
  <data name="NoneInAngleBraces" xml:space="preserve">
    <value>&lt;なし&gt;</value>
  </data>
  <data name="Points" xml:space="preserve">
    <value>ポイント</value>
  </data>
  <data name="FlagCheckered" xml:space="preserve">
    <value>チェッカ フラグ</value>
  </data>
  <data name="FlagGreen" xml:space="preserve">
    <value>旗（緑）</value>
  </data>
  <data name="FlagRed" xml:space="preserve">
    <value>旗（赤）</value>
  </data>
  <data name="FlagWhite" xml:space="preserve">
    <value>旗（白）</value>
  </data>
  <data name="FlagYellow" xml:space="preserve">
    <value>旗（黄）</value>
  </data>
  <data name="Pin2RedShiny" xml:space="preserve">
    <value>光沢ピン（赤）2</value>
  </data>
  <data name="PinBlueShiny" xml:space="preserve">
    <value>光沢ピン（青）</value>
  </data>
  <data name="PinGoldShiny" xml:space="preserve">
    <value>光沢ピン（金）</value>
  </data>
  <data name="PinGreenShiny" xml:space="preserve">
    <value>光沢ピン（緑）</value>
  </data>
  <data name="PinLightBlueShiny" xml:space="preserve">
    <value>光沢ピン（水色）</value>
  </data>
  <data name="PinLightGreenShiny" xml:space="preserve">
    <value>光沢ピン（ライト グリーン）</value>
  </data>
  <data name="PinPurpleShiny" xml:space="preserve">
    <value>光沢ピン（紫）</value>
  </data>
  <data name="PinShiny" xml:space="preserve">
    <value>光沢ピン</value>
  </data>
  <data name="RedShinyPin" xml:space="preserve">
    <value>光沢ピン（赤）</value>
  </data>
  <data name="StickpinBlack" xml:space="preserve">
    <value>飾りピン（黒）</value>
  </data>
  <data name="StickpinBlue" xml:space="preserve">
    <value>飾りピン（青）</value>
  </data>
  <data name="StickpinBrown" xml:space="preserve">
    <value>飾りピン（茶）</value>
  </data>
  <data name="StickpinGray" xml:space="preserve">
    <value>飾りピン（灰）</value>
  </data>
  <data name="StickpinGreen" xml:space="preserve">
    <value>飾りピン（緑）</value>
  </data>
  <data name="StickpinLightBlue" xml:space="preserve">
    <value>飾りピン（水色）</value>
  </data>
  <data name="StickpinOrange" xml:space="preserve">
    <value>飾りピン（オレンジ）</value>
  </data>
  <data name="StickpinPurple" xml:space="preserve">
    <value>飾りピン（紫）</value>
  </data>
  <data name="StickpinRed" xml:space="preserve">
    <value>飾りピン（赤）</value>
  </data>
  <data name="StickpinSpringGreen" xml:space="preserve">
    <value>飾りピン（黄緑）</value>
  </data>
  <data name="StickpinWhite" xml:space="preserve">
    <value>飾りピン（白）</value>
  </data>
  <data name="StickpinYellow" xml:space="preserve">
    <value>飾りピン（黄）</value>
  </data>
  <data name="SymbolAmberBeacon" xml:space="preserve">
    <value>信号（琥珀）</value>
  </data>
  <data name="SymbolBlackBeacon" xml:space="preserve">
    <value>信号（黒）</value>
  </data>
  <data name="SymbolBlackWaypoint" xml:space="preserve">
    <value>正方形（黒）</value>
  </data>
  <data name="SymbolBlueBeacon" xml:space="preserve">
    <value>信号（青）</value>
  </data>
  <data name="SymbolBlueSphere" xml:space="preserve">
    <value>球体（青）</value>
  </data>
  <data name="SymbolBlueWaypoint" xml:space="preserve">
    <value>正方形（青）</value>
  </data>
  <data name="SymbolCapital1" xml:space="preserve">
    <value>中心地 1</value>
  </data>
  <data name="SymbolCapital2" xml:space="preserve">
    <value>中心地 2</value>
  </data>
  <data name="SymbolCircleX" xml:space="preserve">
    <value>×印</value>
  </data>
  <data name="SymbolCrossHair" xml:space="preserve">
    <value>十字線</value>
  </data>
  <data name="SymbolGreenBeacon" xml:space="preserve">
    <value>信号（緑）</value>
  </data>
  <data name="SymbolGreenSphere" xml:space="preserve">
    <value>球体（緑）</value>
  </data>
  <data name="SymbolOrangeBeacon" xml:space="preserve">
    <value>信号（オレンジ）</value>
  </data>
  <data name="SymbolOrangeSphere" xml:space="preserve">
    <value>球体（オレンジ）</value>
  </data>
  <data name="SymbolPopulated1" xml:space="preserve">
    <value>居住区 1</value>
  </data>
  <data name="SymbolPopulated2" xml:space="preserve">
    <value>居住区 2</value>
  </data>
  <data name="SymbolPopulated3" xml:space="preserve">
    <value>居住区 3</value>
  </data>
  <data name="SymbolPopulated4" xml:space="preserve">
    <value>居住区 4</value>
  </data>
  <data name="SymbolPopulated5" xml:space="preserve">
    <value>居住区 5</value>
  </data>
  <data name="SymbolPopulated6" xml:space="preserve">
    <value>居住区 6</value>
  </data>
  <data name="SymbolPopulated7" xml:space="preserve">
    <value>居住区 7</value>
  </data>
  <data name="SymbolPurpleSphere" xml:space="preserve">
    <value>球体（紫）</value>
  </data>
  <data name="SymbolRedBeacon" xml:space="preserve">
    <value>信号（赤）</value>
  </data>
  <data name="SymbolRedSphere" xml:space="preserve">
    <value>球体（赤）</value>
  </data>
  <data name="SymbolWhiteWaypoint" xml:space="preserve">
    <value>正方形（白）</value>
  </data>
  <data name="SymbolYellowArrow" xml:space="preserve">
    <value>矢印（黄）</value>
  </data>
  <data name="SymbolYellowSphere" xml:space="preserve">
    <value>球体（黄）</value>
  </data>
  <data name="ExceptionRequiresParameter" xml:space="preserve">
    <value>パラメータを指定する必要があります</value>
  </data>
  <data name="ExceptionAppendPropertyCalledOutsideOfAnObject" xml:space="preserve">
    <value>オブジェクトの外で AppendProperty が呼び出されました</value>
  </data>
  <data name="ExceptionBadEscape" xml:space="preserve">
    <value>エスケープが不正です</value>
  </data>
  <data name="ExceptionConverters" xml:space="preserve">
    <value>コンバータ</value>
  </data>
  <data name="ExceptionEndArrayCalledwithNoMatchingStartArray" xml:space="preserve">
    <value>EndArray が呼び出されましたが、対応する StartArray がありません</value>
  </data>
  <data name="ExceptionEndArrayIndentedCalledwithNoMatchingStartArray" xml:space="preserve">
    <value>EndArrayIndented が呼び出されましたが、対応する StartArray がありません</value>
  </data>
  <data name="ExceptionEndObjectCalledWithNoMatchingStartObject" xml:space="preserve">
    <value>EndObject が呼び出されましたが、対応する StartObject がありません</value>
  </data>
  <data name="ExceptionEndObjectIndentedCalledWithNoMatchingStartObject" xml:space="preserve">
    <value>EndObjectIndented が呼び出されましたが、対応する StartObject がありません</value>
  </data>
  <data name="ExceptionInput" xml:space="preserve">
    <value>入力</value>
  </data>
  <data name="ExceptionStartPropertycalledOutsideOfAnObject" xml:space="preserve">
    <value>オブジェクトの外で StartProperty が呼び出されました</value>
  </data>
  <data name="ExceptionType" xml:space="preserve">
    <value>タイプ</value>
  </data>
  <data name="ExceptionWritePropertyCalledOutsideOfAnObject" xml:space="preserve">
    <value>オブジェクトの外で WriteProperty が呼び出されました</value>
  </data>
  <data name="MoreInfo" xml:space="preserve">
    <value>詳細情報</value>
  </data>
  <data name="RootVisualError" xml:space="preserve">
    <value>アプリケーションのルートを表示できませんでした</value>
  </data>
  <data name="ExceptionNoResult" xml:space="preserve">
    <value>リクエストによって返された結果はありませんでした。</value>
  </data>
</root>