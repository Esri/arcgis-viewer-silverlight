<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExceptionAdditionConverterDoesNotSupportType" xml:space="preserve">
    <value>Typ {0} wird von AdditionConverter nicht unterstützt</value>
  </data>
  <data name="ExceptionCannotcallSyncronousMethodGetFileAsText" xml:space="preserve">
    <value>Synchrone Methode GetFileAsText kann in Silverlight nicht aufgerufen werden. Stattdessen wird GetFileAsTextAsync verwendet.</value>
  </data>
  <data name="ExceptionCannotCompareWith" xml:space="preserve">
    <value>Vergleich mit {0} nicht möglich</value>
  </data>
  <data name="ExceptionCannotDeserializeResponse" xml:space="preserve">
    <value>Deserialisieren der Antwort nicht möglich</value>
  </data>
  <data name="ExceptionClusterer" xml:space="preserve">
    <value>Clusterer</value>
  </data>
  <data name="ExceptionConfigFileUrlMustBeSpecified" xml:space="preserve">
    <value>ConfigFileUrl muss angegeben werden</value>
  </data>
  <data name="ExceptionConfigurationFileEmpty" xml:space="preserve">
    <value>Konfigurationsdatei war leer</value>
  </data>
  <data name="ExceptionConfigurationXmlIsEmpty" xml:space="preserve">
    <value>XML-Konfigurationsdatei ist leer</value>
  </data>
  <data name="ExceptionDataSource" xml:space="preserve">
    <value>dataSource</value>
  </data>
  <data name="ExceptionElement" xml:space="preserve">
    <value>Element</value>
  </data>
  <data name="ExceptionEmptyFile" xml:space="preserve">
    <value>Leere Datei</value>
  </data>
  <data name="ExceptionExtensionUrl" xml:space="preserve">
    <value>extensionURL</value>
  </data>
  <data name="ExceptionFileNotFound" xml:space="preserve">
    <value>Datei nicht gefunden</value>
  </data>
  <data name="ExceptionGraphicsLayer" xml:space="preserve">
    <value>graphicsLayer</value>
  </data>
  <data name="ExceptionIdforDataSourceMustNotBeEmpty" xml:space="preserve">
    <value>ID für dataSource darf nicht leer sein</value>
  </data>
  <data name="ExceptionInconsistentTotalNumberOfValues" xml:space="preserve">
    <value>Inkonsistente Gesamtzahl der Werte</value>
  </data>
  <data name="ExceptionInvalidFileMustBeUrlForSilverlightApplication" xml:space="preserve">
    <value>Ungültige Datei. URL für Silverlight-Anwendungen erforderlich</value>
  </data>
  <data name="ExceptionInvalidPathForresourceDictionary" xml:space="preserve">
    <value>Ungültiger Pfad für Ressourcen-Wörterbuch {0}</value>
  </data>
  <data name="ExceptionLayer" xml:space="preserve">
    <value>Layer</value>
  </data>
  <data name="ExceptionMap" xml:space="preserve">
    <value>Karte</value>
  </data>
  <data name="ExceptionMustSpecifyConfigurationFile" xml:space="preserve">
    <value>ConfigurationFile muss angegeben werden</value>
  </data>
  <data name="ExceptionMustSpecifyFile" xml:space="preserve">
    <value>Datei muss angegeben werden</value>
  </data>
  <data name="ExceptionMustSpecifyFileUrl" xml:space="preserve">
    <value>FileUrl muss angegeben werden</value>
  </data>
  <data name="ExceptionMustSpecifyLocatorUrl" xml:space="preserve">
    <value>LocatorUrl muss angegeben werden</value>
  </data>
  <data name="ExceptionMustSpecifyValidFileUrl" xml:space="preserve">
    <value>Gültige FileUrl muss angegeben werden</value>
  </data>
  <data name="ExceptionNamespaces" xml:space="preserve">
    <value>namespaces</value>
  </data>
  <data name="ExceptionNoBrushesFound" xml:space="preserve">
    <value>Keine Pinsel gefunden</value>
  </data>
  <data name="ExceptionNoDefaultSymbolsFoundInDictionaryForGeometryType" xml:space="preserve">
    <value>Keine Standardsymbole im Wörterbuch {0} für Geometrietyp = {1} gefunden</value>
  </data>
  <data name="ExceptionNoResourceDictionaryAvailableForGeometryType" xml:space="preserve">
    <value>Keine Ressourcen-Wörterbücher verfügbar für Geometrietyp = {0}</value>
  </data>
  <data name="ExceptionNoResourceDictionaryfoundForGeometryType" xml:space="preserve">
    <value>Kein Ressourcen-Wörterbuch gefunden für Geometrietyp = {0}</value>
  </data>
  <data name="ExceptionNoResultsFromProjection" xml:space="preserve">
    <value>Keine Projektionsergebnisse</value>
  </data>
  <data name="ExceptionNoSymbolAvailableInResourceDictionary" xml:space="preserve">
    <value>Keine Symbole verfügbar im Ressourcen-Wörterbuch {0}</value>
  </data>
  <data name="ExceptionNoThemeFileUrlSpecified" xml:space="preserve">
    <value>Keine ThemeFileUrl angegeben</value>
  </data>
  <data name="ExceptionNumberofGraphicsBeforeAndAfterProjectionAreNotEqual" xml:space="preserve">
    <value>Die Anzahl der Grafiken vor und nach der Projektion stimmt nicht überein.</value>
  </data>
  <data name="ExceptionOutputSpatialReference" xml:space="preserve">
    <value>outputSpatialReference</value>
  </data>
  <data name="ExceptionRequiresPointValue" xml:space="preserve">
    <value>Punktwert erforderlich</value>
  </data>
  <data name="ExceptionResourceDictionaryEmpty" xml:space="preserve">
    <value>Ressourcen-Wörterbuch ist leer</value>
  </data>
  <data name="ExceptionSymbolConfigXmlEmpty" xml:space="preserve">
    <value>symbolConfigXml ist leer</value>
  </data>
  <data name="ExceptionSymbolDescriptionValueNull" xml:space="preserve">
    <value>Wert für SymbolDescription ist NULL</value>
  </data>
  <data name="ExceptionSymbolFolderParentUrlMustBeSpecified" xml:space="preserve">
    <value>SymbolFolderParentUrl muss angegeben werden</value>
  </data>
  <data name="ExceptionUnableToLoadconfigurationStoreFromEmbeddedResource" xml:space="preserve">
    <value>Konfigurationsspeicher kann nicht aus der eingebetteten Ressource abgerufen werden.</value>
  </data>
  <data name="ExceptionUnableToParseFile" xml:space="preserve">
    <value>Die Datei kann nicht geparst werden.</value>
  </data>
  <data name="ExceptionUnableToRetrieveConnectionsFromEmbeddedResource" xml:space="preserve">
    <value>Verbindungen können nicht aus der eingebetteten Ressource abgerufen werden.</value>
  </data>
  <data name="ExceptionUnableToretrievedefaultLinearGradientBrushes" xml:space="preserve">
    <value>Standardmäßige lineare Gradientenpinsel können nicht abgerufen werden.</value>
  </data>
  <data name="ExceptionUnableToRetrieveLinearGradientBrushes" xml:space="preserve">
    <value>Lineare Gradientenpinsel können nicht abgerufen werden.</value>
  </data>
  <data name="ExceptionUnableToretrieveResourceDictionaryContents" xml:space="preserve">
    <value>Inhalte des Ressource-Wörterbuchs können nicht abgerufen werden.</value>
  </data>
  <data name="ExceptionUnknownError" xml:space="preserve">
    <value>Unbekannter Fehler</value>
  </data>
  <data name="Graphics" xml:space="preserve">
    <value>Grafiken</value>
  </data>
  <data name="NoneInAngleBraces" xml:space="preserve">
    <value>&lt;keine&gt;</value>
  </data>
  <data name="Points" xml:space="preserve">
    <value>Punkte</value>
  </data>
  <data name="FlagCheckered" xml:space="preserve">
    <value>Karierte Flagge</value>
  </data>
  <data name="FlagGreen" xml:space="preserve">
    <value>Grüne Flagge</value>
  </data>
  <data name="FlagRed" xml:space="preserve">
    <value>Rote Flagge</value>
  </data>
  <data name="FlagWhite" xml:space="preserve">
    <value>Weiße Flagge</value>
  </data>
  <data name="FlagYellow" xml:space="preserve">
    <value>Gelbe Flagge</value>
  </data>
  <data name="Pin2RedShiny" xml:space="preserve">
    <value>Glänzender roter Pin 2</value>
  </data>
  <data name="PinBlueShiny" xml:space="preserve">
    <value>Glänzender blauer Pin</value>
  </data>
  <data name="PinGoldShiny" xml:space="preserve">
    <value>Glänzender goldener Pin</value>
  </data>
  <data name="PinGreenShiny" xml:space="preserve">
    <value>Glänzender grüner Pin</value>
  </data>
  <data name="PinLightBlueShiny" xml:space="preserve">
    <value>Glänzender hellblauer Pin</value>
  </data>
  <data name="PinLightGreenShiny" xml:space="preserve">
    <value>Glänzender hellgrüner Pin</value>
  </data>
  <data name="PinPurpleShiny" xml:space="preserve">
    <value>Glänzender lilafarbener Pin</value>
  </data>
  <data name="PinShiny" xml:space="preserve">
    <value>Glänzender Pin</value>
  </data>
  <data name="RedShinyPin" xml:space="preserve">
    <value>Glänzender roter Pin</value>
  </data>
  <data name="StickpinBlack" xml:space="preserve">
    <value>Schwarze Stecknadel</value>
  </data>
  <data name="StickpinBlue" xml:space="preserve">
    <value>Blaue Stecknadel</value>
  </data>
  <data name="StickpinBrown" xml:space="preserve">
    <value>Braune Stecknadel</value>
  </data>
  <data name="StickpinGray" xml:space="preserve">
    <value>Graue Stecknadel</value>
  </data>
  <data name="StickpinGreen" xml:space="preserve">
    <value>Grüne Stecknadel</value>
  </data>
  <data name="StickpinLightBlue" xml:space="preserve">
    <value>Hellblaue Stecknadel</value>
  </data>
  <data name="StickpinOrange" xml:space="preserve">
    <value>Orange Stecknadel</value>
  </data>
  <data name="StickpinPurple" xml:space="preserve">
    <value>Violette Stecknadel</value>
  </data>
  <data name="StickpinRed" xml:space="preserve">
    <value>Rote Stecknadel</value>
  </data>
  <data name="StickpinSpringGreen" xml:space="preserve">
    <value>Frühlingsgrüne Stecknadel</value>
  </data>
  <data name="StickpinWhite" xml:space="preserve">
    <value>Weiße Stecknadel</value>
  </data>
  <data name="StickpinYellow" xml:space="preserve">
    <value>Gelbe Stecknadel</value>
  </data>
  <data name="SymbolAmberBeacon" xml:space="preserve">
    <value>Leuchtfeuer Gelb</value>
  </data>
  <data name="SymbolBlackBeacon" xml:space="preserve">
    <value>Leuchtfeuer Schwarz</value>
  </data>
  <data name="SymbolBlackWaypoint" xml:space="preserve">
    <value>Schwarzer Wegpunkt</value>
  </data>
  <data name="SymbolBlueBeacon" xml:space="preserve">
    <value>Leuchtfeuer Blau</value>
  </data>
  <data name="SymbolBlueSphere" xml:space="preserve">
    <value>Blaue Kugel</value>
  </data>
  <data name="SymbolBlueWaypoint" xml:space="preserve">
    <value>Blauer Wegpunkt</value>
  </data>
  <data name="SymbolCapital1" xml:space="preserve">
    <value>Hauptstadt 1</value>
  </data>
  <data name="SymbolCapital2" xml:space="preserve">
    <value>Hauptstadt 2</value>
  </data>
  <data name="SymbolCircleX" xml:space="preserve">
    <value>Kreis X</value>
  </data>
  <data name="SymbolCrossHair" xml:space="preserve">
    <value>Fadenkreuz</value>
  </data>
  <data name="SymbolGreenBeacon" xml:space="preserve">
    <value>Leuchtfeuer Grün</value>
  </data>
  <data name="SymbolGreenSphere" xml:space="preserve">
    <value>Grüne Kugel</value>
  </data>
  <data name="SymbolOrangeBeacon" xml:space="preserve">
    <value>Leuchtfeuer Orange</value>
  </data>
  <data name="SymbolOrangeSphere" xml:space="preserve">
    <value>Orange Kugel</value>
  </data>
  <data name="SymbolPopulated1" xml:space="preserve">
    <value>Bewohnt 1</value>
  </data>
  <data name="SymbolPopulated2" xml:space="preserve">
    <value>Bewohnt 2</value>
  </data>
  <data name="SymbolPopulated3" xml:space="preserve">
    <value>Bewohnt 3</value>
  </data>
  <data name="SymbolPopulated4" xml:space="preserve">
    <value>Bewohnt 4</value>
  </data>
  <data name="SymbolPopulated5" xml:space="preserve">
    <value>Bewohnt 5</value>
  </data>
  <data name="SymbolPopulated6" xml:space="preserve">
    <value>Bewohnt 6</value>
  </data>
  <data name="SymbolPopulated7" xml:space="preserve">
    <value>Bewohnt 7</value>
  </data>
  <data name="SymbolPurpleSphere" xml:space="preserve">
    <value>Violette Kugel</value>
  </data>
  <data name="SymbolRedBeacon" xml:space="preserve">
    <value>Leuchtfeuer Rot</value>
  </data>
  <data name="SymbolRedSphere" xml:space="preserve">
    <value>Rote Kugel</value>
  </data>
  <data name="SymbolWhiteWaypoint" xml:space="preserve">
    <value>Weißer Wegpunkt</value>
  </data>
  <data name="SymbolYellowArrow" xml:space="preserve">
    <value>Gelber Pfeil</value>
  </data>
  <data name="SymbolYellowSphere" xml:space="preserve">
    <value>Gelbe Kugel</value>
  </data>
  <data name="ExceptionRequiresParameter" xml:space="preserve">
    <value>Eingabe eines Parameters erforderlich</value>
  </data>
  <data name="ExceptionAppendPropertyCalledOutsideOfAnObject" xml:space="preserve">
    <value>AppendProperty außerhalb eines Objekts aufgerufen</value>
  </data>
  <data name="ExceptionBadEscape" xml:space="preserve">
    <value>Fehlerhaftes Escape</value>
  </data>
  <data name="ExceptionConverters" xml:space="preserve">
    <value>Konvertierungsprogramme</value>
  </data>
  <data name="ExceptionEndArrayCalledwithNoMatchingStartArray" xml:space="preserve">
    <value>EndArray ohne passendes StartArray aufgerufen</value>
  </data>
  <data name="ExceptionEndArrayIndentedCalledwithNoMatchingStartArray" xml:space="preserve">
    <value>EndArrayIndented ohne passendes StartArray aufgerufen</value>
  </data>
  <data name="ExceptionEndObjectCalledWithNoMatchingStartObject" xml:space="preserve">
    <value>EndObject ohne passendes StartObject aufgerufen</value>
  </data>
  <data name="ExceptionEndObjectIndentedCalledWithNoMatchingStartObject" xml:space="preserve">
    <value>EndObjectIndented ohne passendes StartObject aufgerufen</value>
  </data>
  <data name="ExceptionInput" xml:space="preserve">
    <value>Eingabe</value>
  </data>
  <data name="ExceptionStartPropertycalledOutsideOfAnObject" xml:space="preserve">
    <value>StartProperty außerhalb eines Objekts aufgerufen</value>
  </data>
  <data name="ExceptionType" xml:space="preserve">
    <value>Typ</value>
  </data>
  <data name="ExceptionWritePropertyCalledOutsideOfAnObject" xml:space="preserve">
    <value>WriteProperty außerhalb eines Objekts aufgerufen</value>
  </data>
  <data name="MoreInfo" xml:space="preserve">
    <value>Weitere Informationen</value>
  </data>
  <data name="RootVisualError" xml:space="preserve">
    <value>Das Stammverzeichnis der Anwendung konnte nicht angezeigt werden</value>
  </data>
  <data name="ExceptionNoResult" xml:space="preserve">
    <value>Die Anforderung gab kein Ergebnis zurück</value>
  </data>
</root>