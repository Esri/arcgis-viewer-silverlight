<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExceptionAdditionConverterDoesNotSupportType" xml:space="preserve">
    <value>AdditionConverter ne prend pas en charge le type {0}</value>
  </data>
  <data name="ExceptionCannotcallSyncronousMethodGetFileAsText" xml:space="preserve">
    <value>Impossible d'appeler la méthode synchrone GetFileAsText dans Silverlight. Utilisez à la place GetFileAsTextAsync.</value>
  </data>
  <data name="ExceptionCannotCompareWith" xml:space="preserve">
    <value>Impossible de comparer avec {0}</value>
  </data>
  <data name="ExceptionCannotDeserializeResponse" xml:space="preserve">
    <value>Impossible de désérialiser la réponse</value>
  </data>
  <data name="ExceptionClusterer" xml:space="preserve">
    <value>Agrégat</value>
  </data>
  <data name="ExceptionConfigFileUrlMustBeSpecified" xml:space="preserve">
    <value>ConfigFileUrl doit être spécifié</value>
  </data>
  <data name="ExceptionConfigurationFileEmpty" xml:space="preserve">
    <value>Le fichier de configuration était vide.</value>
  </data>
  <data name="ExceptionConfigurationXmlIsEmpty" xml:space="preserve">
    <value>Le file de configuration xml est vide.</value>
  </data>
  <data name="ExceptionDataSource" xml:space="preserve">
    <value>dataSource</value>
  </data>
  <data name="ExceptionElement" xml:space="preserve">
    <value>élément</value>
  </data>
  <data name="ExceptionEmptyFile" xml:space="preserve">
    <value>Fichier vide</value>
  </data>
  <data name="ExceptionExtensionUrl" xml:space="preserve">
    <value>extensionURL</value>
  </data>
  <data name="ExceptionFileNotFound" xml:space="preserve">
    <value>Fichier introuvable</value>
  </data>
  <data name="ExceptionGraphicsLayer" xml:space="preserve">
    <value>graphicsLayer</value>
  </data>
  <data name="ExceptionIdforDataSourceMustNotBeEmpty" xml:space="preserve">
    <value>L'identifiant dataSource ne doit être vide</value>
  </data>
  <data name="ExceptionInconsistentTotalNumberOfValues" xml:space="preserve">
    <value>Nombre total de valeurs incohérent</value>
  </data>
  <data name="ExceptionInvalidFileMustBeUrlForSilverlightApplication" xml:space="preserve">
    <value>Fichier non valide. Doit être une URL pour les applications Silverlight</value>
  </data>
  <data name="ExceptionInvalidPathForresourceDictionary" xml:space="preserve">
    <value>Chemin non valide pour le dictionnaire de ressources {0}</value>
  </data>
  <data name="ExceptionLayer" xml:space="preserve">
    <value>couche</value>
  </data>
  <data name="ExceptionMap" xml:space="preserve">
    <value>carte</value>
  </data>
  <data name="ExceptionMustSpecifyConfigurationFile" xml:space="preserve">
    <value>Vous devez spécifier ConfigurationFile</value>
  </data>
  <data name="ExceptionMustSpecifyFile" xml:space="preserve">
    <value>Vous devez indiquer un fichier</value>
  </data>
  <data name="ExceptionMustSpecifyFileUrl" xml:space="preserve">
    <value>Vous devez spécifier FileUrl</value>
  </data>
  <data name="ExceptionMustSpecifyLocatorUrl" xml:space="preserve">
    <value>Vous devez spécifier LocatorUrl</value>
  </data>
  <data name="ExceptionMustSpecifyValidFileUrl" xml:space="preserve">
    <value>Vous devez spécifier un élément FileUrl valide</value>
  </data>
  <data name="ExceptionNamespaces" xml:space="preserve">
    <value>namespaces</value>
  </data>
  <data name="ExceptionNoBrushesFound" xml:space="preserve">
    <value>Aucun pinceau n'a été trouvé.</value>
  </data>
  <data name="ExceptionNoDefaultSymbolsFoundInDictionaryForGeometryType" xml:space="preserve">
    <value>Aucun symbole par défaut n'a été trouvé dans le dictionnaire {0} pour le type de géométrie = {1}</value>
  </data>
  <data name="ExceptionNoResourceDictionaryAvailableForGeometryType" xml:space="preserve">
    <value>Aucun dictionnaire de ressources disponible pour le type de géométrie = {0}</value>
  </data>
  <data name="ExceptionNoResourceDictionaryfoundForGeometryType" xml:space="preserve">
    <value>Aucun dictionnaire de ressources n'a été trouvé pour le type de géométrie = {0}</value>
  </data>
  <data name="ExceptionNoResultsFromProjection" xml:space="preserve">
    <value>Aucun résultat de la projection</value>
  </data>
  <data name="ExceptionNoSymbolAvailableInResourceDictionary" xml:space="preserve">
    <value>Aucun symbole disponible dans le dictionnaire de ressources {0}</value>
  </data>
  <data name="ExceptionNoThemeFileUrlSpecified" xml:space="preserve">
    <value>Aucun élément ThemeFileUrl spécifié</value>
  </data>
  <data name="ExceptionNumberofGraphicsBeforeAndAfterProjectionAreNotEqual" xml:space="preserve">
    <value>Le nombre de graphiques avant et après la projection est différent</value>
  </data>
  <data name="ExceptionOutputSpatialReference" xml:space="preserve">
    <value>outputSpatialReference</value>
  </data>
  <data name="ExceptionRequiresPointValue" xml:space="preserve">
    <value>Valeur de point requise</value>
  </data>
  <data name="ExceptionResourceDictionaryEmpty" xml:space="preserve">
    <value>le dictionnaire de ressources est vide</value>
  </data>
  <data name="ExceptionSymbolConfigXmlEmpty" xml:space="preserve">
    <value>symbolConfigXml est vide</value>
  </data>
  <data name="ExceptionSymbolDescriptionValueNull" xml:space="preserve">
    <value>La valeur SymbolDescription est nulle</value>
  </data>
  <data name="ExceptionSymbolFolderParentUrlMustBeSpecified" xml:space="preserve">
    <value>SymbolFolderParentUrl doit être spécifié</value>
  </data>
  <data name="ExceptionUnableToLoadconfigurationStoreFromEmbeddedResource" xml:space="preserve">
    <value>Impossible de charger le magasin de configuration à partir de la ressource intégrée</value>
  </data>
  <data name="ExceptionUnableToParseFile" xml:space="preserve">
    <value>Impossible d'analyser le fichier</value>
  </data>
  <data name="ExceptionUnableToRetrieveConnectionsFromEmbeddedResource" xml:space="preserve">
    <value>Impossible de récupérer les connexions de la ressource intégrée</value>
  </data>
  <data name="ExceptionUnableToretrievedefaultLinearGradientBrushes" xml:space="preserve">
    <value>Impossible de récupérer les pinceaux de dégradé linéaire par défaut</value>
  </data>
  <data name="ExceptionUnableToRetrieveLinearGradientBrushes" xml:space="preserve">
    <value>Impossible de récupérer les pinceaux de dégradé linéaire.</value>
  </data>
  <data name="ExceptionUnableToretrieveResourceDictionaryContents" xml:space="preserve">
    <value>Impossible de récupérer le contenu du dictionnaire de ressources</value>
  </data>
  <data name="ExceptionUnknownError" xml:space="preserve">
    <value>Erreur inconnue</value>
  </data>
  <data name="Graphics" xml:space="preserve">
    <value>graphiques</value>
  </data>
  <data name="NoneInAngleBraces" xml:space="preserve">
    <value>&lt;Aucun&gt;</value>
  </data>
  <data name="Points" xml:space="preserve">
    <value>points</value>
  </data>
  <data name="FlagCheckered" xml:space="preserve">
    <value>Drapeau à damiers</value>
  </data>
  <data name="FlagGreen" xml:space="preserve">
    <value>Drapeau vert</value>
  </data>
  <data name="FlagRed" xml:space="preserve">
    <value>Drapeau rouge</value>
  </data>
  <data name="FlagWhite" xml:space="preserve">
    <value>Drapeau blanc</value>
  </data>
  <data name="FlagYellow" xml:space="preserve">
    <value>Drapeau jaune</value>
  </data>
  <data name="Pin2RedShiny" xml:space="preserve">
    <value>Punaise brillante rouge 2</value>
  </data>
  <data name="PinBlueShiny" xml:space="preserve">
    <value>Punaise brillante bleue</value>
  </data>
  <data name="PinGoldShiny" xml:space="preserve">
    <value>Punaise brillante dorée</value>
  </data>
  <data name="PinGreenShiny" xml:space="preserve">
    <value>Punaise brillante verte</value>
  </data>
  <data name="PinLightBlueShiny" xml:space="preserve">
    <value>Punaise brillante bleu clair</value>
  </data>
  <data name="PinLightGreenShiny" xml:space="preserve">
    <value>Punaise brillante vert clair</value>
  </data>
  <data name="PinPurpleShiny" xml:space="preserve">
    <value>Punaise brillante violette</value>
  </data>
  <data name="PinShiny" xml:space="preserve">
    <value>Punaise brillante</value>
  </data>
  <data name="RedShinyPin" xml:space="preserve">
    <value>Punaise brillante rouge</value>
  </data>
  <data name="StickpinBlack" xml:space="preserve">
    <value>Epingle noire</value>
  </data>
  <data name="StickpinBlue" xml:space="preserve">
    <value>Epingle bleue</value>
  </data>
  <data name="StickpinBrown" xml:space="preserve">
    <value>Epingle marron</value>
  </data>
  <data name="StickpinGray" xml:space="preserve">
    <value>Epingle grise</value>
  </data>
  <data name="StickpinGreen" xml:space="preserve">
    <value>Epingle verte</value>
  </data>
  <data name="StickpinLightBlue" xml:space="preserve">
    <value>Epingle bleu clair</value>
  </data>
  <data name="StickpinOrange" xml:space="preserve">
    <value>Epingle orange</value>
  </data>
  <data name="StickpinPurple" xml:space="preserve">
    <value>Epingle pourpre</value>
  </data>
  <data name="StickpinRed" xml:space="preserve">
    <value>Epingle rouge</value>
  </data>
  <data name="StickpinSpringGreen" xml:space="preserve">
    <value>Epingle vert printemps</value>
  </data>
  <data name="StickpinWhite" xml:space="preserve">
    <value>Epingle blanche</value>
  </data>
  <data name="StickpinYellow" xml:space="preserve">
    <value>Epingle jaune</value>
  </data>
  <data name="SymbolAmberBeacon" xml:space="preserve">
    <value>Balise ambre jaune</value>
  </data>
  <data name="SymbolBlackBeacon" xml:space="preserve">
    <value>Balise noire</value>
  </data>
  <data name="SymbolBlackWaypoint" xml:space="preserve">
    <value>Point de cheminement noir</value>
  </data>
  <data name="SymbolBlueBeacon" xml:space="preserve">
    <value>Balise bleue</value>
  </data>
  <data name="SymbolBlueSphere" xml:space="preserve">
    <value>Sphère bleue</value>
  </data>
  <data name="SymbolBlueWaypoint" xml:space="preserve">
    <value>Point de cheminement bleu</value>
  </data>
  <data name="SymbolCapital1" xml:space="preserve">
    <value>Capitale 1</value>
  </data>
  <data name="SymbolCapital2" xml:space="preserve">
    <value>Capitale 2</value>
  </data>
  <data name="SymbolCircleX" xml:space="preserve">
    <value>Cercle X</value>
  </data>
  <data name="SymbolCrossHair" xml:space="preserve">
    <value>Réticule</value>
  </data>
  <data name="SymbolGreenBeacon" xml:space="preserve">
    <value>Balise verte</value>
  </data>
  <data name="SymbolGreenSphere" xml:space="preserve">
    <value>Sphère verte</value>
  </data>
  <data name="SymbolOrangeBeacon" xml:space="preserve">
    <value>Balise orange</value>
  </data>
  <data name="SymbolOrangeSphere" xml:space="preserve">
    <value>Sphère orange</value>
  </data>
  <data name="SymbolPopulated1" xml:space="preserve">
    <value>Renseigné 1</value>
  </data>
  <data name="SymbolPopulated2" xml:space="preserve">
    <value>Renseigné 2</value>
  </data>
  <data name="SymbolPopulated3" xml:space="preserve">
    <value>Renseigné 3</value>
  </data>
  <data name="SymbolPopulated4" xml:space="preserve">
    <value>Renseigné 4</value>
  </data>
  <data name="SymbolPopulated5" xml:space="preserve">
    <value>Renseigné 5</value>
  </data>
  <data name="SymbolPopulated6" xml:space="preserve">
    <value>Renseigné 6</value>
  </data>
  <data name="SymbolPopulated7" xml:space="preserve">
    <value>Renseigné 7</value>
  </data>
  <data name="SymbolPurpleSphere" xml:space="preserve">
    <value>Sphère pourpre</value>
  </data>
  <data name="SymbolRedBeacon" xml:space="preserve">
    <value>Balise rouge</value>
  </data>
  <data name="SymbolRedSphere" xml:space="preserve">
    <value>Sphère rouge</value>
  </data>
  <data name="SymbolWhiteWaypoint" xml:space="preserve">
    <value>Point de cheminement blanc</value>
  </data>
  <data name="SymbolYellowArrow" xml:space="preserve">
    <value>Flèche jaune</value>
  </data>
  <data name="SymbolYellowSphere" xml:space="preserve">
    <value>Sphère jaune</value>
  </data>
  <data name="ExceptionRequiresParameter" xml:space="preserve">
    <value>Un paramètre doit être spécifié</value>
  </data>
  <data name="ExceptionAppendPropertyCalledOutsideOfAnObject" xml:space="preserve">
    <value>AppendProperty appelé en dehors d'un objet</value>
  </data>
  <data name="ExceptionBadEscape" xml:space="preserve">
    <value>Annulation incorrecte</value>
  </data>
  <data name="ExceptionConverters" xml:space="preserve">
    <value>convertisseurs</value>
  </data>
  <data name="ExceptionEndArrayCalledwithNoMatchingStartArray" xml:space="preserve">
    <value>EndArray appelé sans StartArray correspondant</value>
  </data>
  <data name="ExceptionEndArrayIndentedCalledwithNoMatchingStartArray" xml:space="preserve">
    <value>EndArrayIndented appelé sans StartArray correspondant</value>
  </data>
  <data name="ExceptionEndObjectCalledWithNoMatchingStartObject" xml:space="preserve">
    <value>EndObject appelé sans StartObject correspondant</value>
  </data>
  <data name="ExceptionEndObjectIndentedCalledWithNoMatchingStartObject" xml:space="preserve">
    <value>EndObjectIndented appelé sans StartObject correspondant</value>
  </data>
  <data name="ExceptionInput" xml:space="preserve">
    <value>entrée</value>
  </data>
  <data name="ExceptionStartPropertycalledOutsideOfAnObject" xml:space="preserve">
    <value>StartProperty appelé en dehors d'un objet</value>
  </data>
  <data name="ExceptionType" xml:space="preserve">
    <value>type</value>
  </data>
  <data name="ExceptionWritePropertyCalledOutsideOfAnObject" xml:space="preserve">
    <value>WriteProperty appelé en dehors d'un objet</value>
  </data>
  <data name="MoreInfo" xml:space="preserve">
    <value>Plus d'informations</value>
  </data>
  <data name="RootVisualError" xml:space="preserve">
    <value>Impossible d’obtenir le Visual racine de l’application</value>
  </data>
  <data name="ExceptionNoResult" xml:space="preserve">
    <value>Aucun résultat n'a été renvoyé par la requête</value>
  </data>
</root>