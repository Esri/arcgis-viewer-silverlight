<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExceptionAdditionConverterDoesNotSupportType" xml:space="preserve">
    <value>AdditionConverter non supporta il tipo {0}</value>
  </data>
  <data name="ExceptionCannotcallSyncronousMethodGetFileAsText" xml:space="preserve">
    <value>Impossibile chiamare il metodo sincrono GetFileAsText in Silverlight. Utilizzare GetFileAsTextAsync.</value>
  </data>
  <data name="ExceptionCannotCompareWith" xml:space="preserve">
    <value>Impossibile eseguire il confronto con {0}</value>
  </data>
  <data name="ExceptionCannotDeserializeResponse" xml:space="preserve">
    <value>Impossibile deserializzare la risposta</value>
  </data>
  <data name="ExceptionClusterer" xml:space="preserve">
    <value>Clusterer</value>
  </data>
  <data name="ExceptionConfigFileUrlMustBeSpecified" xml:space="preserve">
    <value>È necessario specificare ConfigFileUrl</value>
  </data>
  <data name="ExceptionConfigurationFileEmpty" xml:space="preserve">
    <value>File di configurazione vuoto</value>
  </data>
  <data name="ExceptionConfigurationXmlIsEmpty" xml:space="preserve">
    <value>XML file di configurazione vuoto</value>
  </data>
  <data name="ExceptionDataSource" xml:space="preserve">
    <value>dataSource</value>
  </data>
  <data name="ExceptionElement" xml:space="preserve">
    <value>elemento</value>
  </data>
  <data name="ExceptionEmptyFile" xml:space="preserve">
    <value>File vuoto</value>
  </data>
  <data name="ExceptionExtensionUrl" xml:space="preserve">
    <value>extensionURL</value>
  </data>
  <data name="ExceptionFileNotFound" xml:space="preserve">
    <value>File non trovato</value>
  </data>
  <data name="ExceptionGraphicsLayer" xml:space="preserve">
    <value>graphicsLayer</value>
  </data>
  <data name="ExceptionIdforDataSourceMustNotBeEmpty" xml:space="preserve">
    <value>L'ID di dataSource non deve essere vuoto</value>
  </data>
  <data name="ExceptionInconsistentTotalNumberOfValues" xml:space="preserve">
    <value>Numero totale di valori incoerente</value>
  </data>
  <data name="ExceptionInvalidFileMustBeUrlForSilverlightApplication" xml:space="preserve">
    <value>File non valido. Deve essere un URL per applicazioni Silverlight</value>
  </data>
  <data name="ExceptionInvalidPathForresourceDictionary" xml:space="preserve">
    <value>Percorso non valido per il dizionario risorse {0}</value>
  </data>
  <data name="ExceptionLayer" xml:space="preserve">
    <value>layer</value>
  </data>
  <data name="ExceptionMap" xml:space="preserve">
    <value>mappa</value>
  </data>
  <data name="ExceptionMustSpecifyConfigurationFile" xml:space="preserve">
    <value>Impostazione di ConfigurationFile necessaria</value>
  </data>
  <data name="ExceptionMustSpecifyFile" xml:space="preserve">
    <value>Impostazione file necessaria</value>
  </data>
  <data name="ExceptionMustSpecifyFileUrl" xml:space="preserve">
    <value>Impostazione di FileUrl necessaria</value>
  </data>
  <data name="ExceptionMustSpecifyLocatorUrl" xml:space="preserve">
    <value>Impostazione di LocatorUrl necessaria</value>
  </data>
  <data name="ExceptionMustSpecifyValidFileUrl" xml:space="preserve">
    <value>Impostazione di un FileUrl valido necessaria</value>
  </data>
  <data name="ExceptionNamespaces" xml:space="preserve">
    <value>namespaces</value>
  </data>
  <data name="ExceptionNoBrushesFound" xml:space="preserve">
    <value>Nessun pennello trovato</value>
  </data>
  <data name="ExceptionNoDefaultSymbolsFoundInDictionaryForGeometryType" xml:space="preserve">
    <value>Nessun simbolo di default trovato nel dizionario {0} per geometrytype = {1}</value>
  </data>
  <data name="ExceptionNoResourceDictionaryAvailableForGeometryType" xml:space="preserve">
    <value>Nessun dizionario risorse disponibile per geometryType = {0}</value>
  </data>
  <data name="ExceptionNoResourceDictionaryfoundForGeometryType" xml:space="preserve">
    <value>Nessun dizionario risorse trovato per geometrytype = {0}</value>
  </data>
  <data name="ExceptionNoResultsFromProjection" xml:space="preserve">
    <value>Nessun risultato dalla proiezione</value>
  </data>
  <data name="ExceptionNoSymbolAvailableInResourceDictionary" xml:space="preserve">
    <value>Nessun simbolo disponibile nel dizionario risorse {0}</value>
  </data>
  <data name="ExceptionNoThemeFileUrlSpecified" xml:space="preserve">
    <value>ThemeFileUrl non specificato</value>
  </data>
  <data name="ExceptionNumberofGraphicsBeforeAndAfterProjectionAreNotEqual" xml:space="preserve">
    <value>Numero di elementi grafici prima e dopo la proiezione non corrispondente</value>
  </data>
  <data name="ExceptionOutputSpatialReference" xml:space="preserve">
    <value>outputSpatialReference</value>
  </data>
  <data name="ExceptionRequiresPointValue" xml:space="preserve">
    <value>Richiede un valore di punto</value>
  </data>
  <data name="ExceptionResourceDictionaryEmpty" xml:space="preserve">
    <value>dizionario risorse vuoto</value>
  </data>
  <data name="ExceptionSymbolConfigXmlEmpty" xml:space="preserve">
    <value>symbolConfigXml vuoto</value>
  </data>
  <data name="ExceptionSymbolDescriptionValueNull" xml:space="preserve">
    <value>Valore di SymbolDescription null</value>
  </data>
  <data name="ExceptionSymbolFolderParentUrlMustBeSpecified" xml:space="preserve">
    <value>È necessario specificare SymbolFolderParentUrl</value>
  </data>
  <data name="ExceptionUnableToLoadconfigurationStoreFromEmbeddedResource" xml:space="preserve">
    <value>Impossibile caricare l'archivio di configurazione dalla risorsa incorporata</value>
  </data>
  <data name="ExceptionUnableToParseFile" xml:space="preserve">
    <value>Impossibile analizzare il file</value>
  </data>
  <data name="ExceptionUnableToRetrieveConnectionsFromEmbeddedResource" xml:space="preserve">
    <value>Impossibile recuperare connessioni dalla risorsa incorporata</value>
  </data>
  <data name="ExceptionUnableToretrievedefaultLinearGradientBrushes" xml:space="preserve">
    <value>Impossibile recuperare pennelli di gradiente lineare di default</value>
  </data>
  <data name="ExceptionUnableToRetrieveLinearGradientBrushes" xml:space="preserve">
    <value>Impossibile recuperare pennelli di gradiente lineare.</value>
  </data>
  <data name="ExceptionUnableToretrieveResourceDictionaryContents" xml:space="preserve">
    <value>Impossibile recuperare contenuti del dizionario risorse</value>
  </data>
  <data name="ExceptionUnknownError" xml:space="preserve">
    <value>Errore sconosciuto</value>
  </data>
  <data name="Graphics" xml:space="preserve">
    <value>elementi grafici</value>
  </data>
  <data name="NoneInAngleBraces" xml:space="preserve">
    <value>&lt;None&gt;</value>
  </data>
  <data name="Points" xml:space="preserve">
    <value>punti</value>
  </data>
  <data name="FlagCheckered" xml:space="preserve">
    <value>Contrassegno a scacchi</value>
  </data>
  <data name="FlagGreen" xml:space="preserve">
    <value>Contrassegno verde</value>
  </data>
  <data name="FlagRed" xml:space="preserve">
    <value>Contrassegno rosso</value>
  </data>
  <data name="FlagWhite" xml:space="preserve">
    <value>Contrassegno bianco</value>
  </data>
  <data name="FlagYellow" xml:space="preserve">
    <value>Contrassegno giallo</value>
  </data>
  <data name="Pin2RedShiny" xml:space="preserve">
    <value>Puntina lucida rossa 2</value>
  </data>
  <data name="PinBlueShiny" xml:space="preserve">
    <value>Puntina lucida blu</value>
  </data>
  <data name="PinGoldShiny" xml:space="preserve">
    <value>Puntina lucida oro</value>
  </data>
  <data name="PinGreenShiny" xml:space="preserve">
    <value>Puntina lucida verde</value>
  </data>
  <data name="PinLightBlueShiny" xml:space="preserve">
    <value>Puntina lucida azzurra</value>
  </data>
  <data name="PinLightGreenShiny" xml:space="preserve">
    <value>Puntina lucida verde chiaro</value>
  </data>
  <data name="PinPurpleShiny" xml:space="preserve">
    <value>Puntina lucida viola</value>
  </data>
  <data name="PinShiny" xml:space="preserve">
    <value>Puntina lucida</value>
  </data>
  <data name="RedShinyPin" xml:space="preserve">
    <value>Puntina lucida rossa</value>
  </data>
  <data name="StickpinBlack" xml:space="preserve">
    <value>Puntina nera</value>
  </data>
  <data name="StickpinBlue" xml:space="preserve">
    <value>Puntina blu</value>
  </data>
  <data name="StickpinBrown" xml:space="preserve">
    <value>Puntina marrone</value>
  </data>
  <data name="StickpinGray" xml:space="preserve">
    <value>Puntina grigia</value>
  </data>
  <data name="StickpinGreen" xml:space="preserve">
    <value>Puntina verde</value>
  </data>
  <data name="StickpinLightBlue" xml:space="preserve">
    <value>Puntina azzurra</value>
  </data>
  <data name="StickpinOrange" xml:space="preserve">
    <value>Puntina arancione</value>
  </data>
  <data name="StickpinPurple" xml:space="preserve">
    <value>Puntina viola</value>
  </data>
  <data name="StickpinRed" xml:space="preserve">
    <value>Puntina rossa</value>
  </data>
  <data name="StickpinSpringGreen" xml:space="preserve">
    <value>Puntina verde primavera</value>
  </data>
  <data name="StickpinWhite" xml:space="preserve">
    <value>Puntina bianca</value>
  </data>
  <data name="StickpinYellow" xml:space="preserve">
    <value>Puntina gialla</value>
  </data>
  <data name="SymbolAmberBeacon" xml:space="preserve">
    <value>Faro ambra</value>
  </data>
  <data name="SymbolBlackBeacon" xml:space="preserve">
    <value>Faro nero</value>
  </data>
  <data name="SymbolBlackWaypoint" xml:space="preserve">
    <value>Waypoint nero</value>
  </data>
  <data name="SymbolBlueBeacon" xml:space="preserve">
    <value>Faro blue</value>
  </data>
  <data name="SymbolBlueSphere" xml:space="preserve">
    <value>Sfera blu</value>
  </data>
  <data name="SymbolBlueWaypoint" xml:space="preserve">
    <value>Waypoint blu</value>
  </data>
  <data name="SymbolCapital1" xml:space="preserve">
    <value>Capitale 1</value>
  </data>
  <data name="SymbolCapital2" xml:space="preserve">
    <value>Capitale 2</value>
  </data>
  <data name="SymbolCircleX" xml:space="preserve">
    <value>Cerchio X</value>
  </data>
  <data name="SymbolCrossHair" xml:space="preserve">
    <value>Mirino</value>
  </data>
  <data name="SymbolGreenBeacon" xml:space="preserve">
    <value>Faro verde</value>
  </data>
  <data name="SymbolGreenSphere" xml:space="preserve">
    <value>Sfera verde</value>
  </data>
  <data name="SymbolOrangeBeacon" xml:space="preserve">
    <value>Faro arancione</value>
  </data>
  <data name="SymbolOrangeSphere" xml:space="preserve">
    <value>Sfera arancione</value>
  </data>
  <data name="SymbolPopulated1" xml:space="preserve">
    <value>Popolato 1</value>
  </data>
  <data name="SymbolPopulated2" xml:space="preserve">
    <value>Popolato 2</value>
  </data>
  <data name="SymbolPopulated3" xml:space="preserve">
    <value>Popolato 3</value>
  </data>
  <data name="SymbolPopulated4" xml:space="preserve">
    <value>Popolato 4</value>
  </data>
  <data name="SymbolPopulated5" xml:space="preserve">
    <value>Popolato 5</value>
  </data>
  <data name="SymbolPopulated6" xml:space="preserve">
    <value>Popolato 6</value>
  </data>
  <data name="SymbolPopulated7" xml:space="preserve">
    <value>Popolato 7</value>
  </data>
  <data name="SymbolPurpleSphere" xml:space="preserve">
    <value>Sfera viola</value>
  </data>
  <data name="SymbolRedBeacon" xml:space="preserve">
    <value>Faro rosso</value>
  </data>
  <data name="SymbolRedSphere" xml:space="preserve">
    <value>Sfera rossa</value>
  </data>
  <data name="SymbolWhiteWaypoint" xml:space="preserve">
    <value>Waypoint bianco</value>
  </data>
  <data name="SymbolYellowArrow" xml:space="preserve">
    <value>Freccia gialla</value>
  </data>
  <data name="SymbolYellowSphere" xml:space="preserve">
    <value>Sfera gialla</value>
  </data>
  <data name="ExceptionRequiresParameter" xml:space="preserve">
    <value>Richiede che sia specificato un parametro</value>
  </data>
  <data name="ExceptionAppendPropertyCalledOutsideOfAnObject" xml:space="preserve">
    <value>AppendProperty chiamato all'esterno di un oggetto</value>
  </data>
  <data name="ExceptionBadEscape" xml:space="preserve">
    <value>Escape non valido</value>
  </data>
  <data name="ExceptionConverters" xml:space="preserve">
    <value>convertitori</value>
  </data>
  <data name="ExceptionEndArrayCalledwithNoMatchingStartArray" xml:space="preserve">
    <value>EndArray chiamato senza StartArray corrispondente</value>
  </data>
  <data name="ExceptionEndArrayIndentedCalledwithNoMatchingStartArray" xml:space="preserve">
    <value>EndArrayIndented chiamato senza StartArray corrispondente</value>
  </data>
  <data name="ExceptionEndObjectCalledWithNoMatchingStartObject" xml:space="preserve">
    <value>EndObject chiamato senza StartObject corrispondente</value>
  </data>
  <data name="ExceptionEndObjectIndentedCalledWithNoMatchingStartObject" xml:space="preserve">
    <value>EndObjectIndented chiamato senza StartObject corrispondente</value>
  </data>
  <data name="ExceptionInput" xml:space="preserve">
    <value>input</value>
  </data>
  <data name="ExceptionStartPropertycalledOutsideOfAnObject" xml:space="preserve">
    <value>StartProperty chiamato all'esterno di un oggetto</value>
  </data>
  <data name="ExceptionType" xml:space="preserve">
    <value>tipo</value>
  </data>
  <data name="ExceptionWritePropertyCalledOutsideOfAnObject" xml:space="preserve">
    <value>WriteProperty chiamato all'esterno di un oggetto</value>
  </data>
  <data name="MoreInfo" xml:space="preserve">
    <value>Altre informazioni</value>
  </data>
  <data name="RootVisualError" xml:space="preserve">
    <value>Impossibile recuperare il root visual dell'applicazione</value>
  </data>
  <data name="ExceptionNoResult" xml:space="preserve">
    <value>Nessun risultato restituito dalla richiesta</value>
  </data>
</root>