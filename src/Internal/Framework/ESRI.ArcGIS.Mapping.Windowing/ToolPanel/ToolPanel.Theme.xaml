<!--
(c) Copyright ESRI.
This source is subject to the Microsoft Public License (Ms-PL).
Please see https://opensource.org/licenses/ms-pl for details.
All other rights reserved.
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
    xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit" 
    xmlns:local="clr-namespace:ESRI.ArcGIS.Client.Application.Controls"
    xmlns:converters="clr-namespace:ESRI.ArcGIS.Client.Application.Layout.Converters;assembly=ESRI.ArcGIS.Client.Application.Layout"
    xmlns:Layout="clr-namespace:ESRI.ArcGIS.Client.Application.Layout;assembly=ESRI.ArcGIS.Client.Application.Layout">

    <Layout:RTLHelper x:Key="RTLHelper" />
    <converters:ImageUrlResolver x:Key="ImageUrlResolver"/>
    
    <!-- Primary Styles -->
    <Color x:Key="ButtonPushedBackgroundDarkColor">#FF2D2D2D</Color>
    <Color x:Key="ButtonPushedBackgroundLightColor">#FFB4B4B4</Color>

    <SolidColorBrush x:Key="ButtonHotOuterBorderBrush" Color="#99FFFFFF" /> 
    <SolidColorBrush x:Key="ButtonHotOuterBackgroundBrush" Color="#22FFFFFF" />

    <SolidColorBrush x:Key="HelpLinksBrush" Color="{StaticResource AccentTextColor}" />

    <LinearGradientBrush x:Key="ButtonPushedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0.75">
        <GradientStop Color="{StaticResource ButtonPushedBackgroundDarkColor}" Offset="1"/>
        <GradientStop Color="{StaticResource ButtonPushedBackgroundLightColor}"/>
    </LinearGradientBrush>

    <Color x:Key="DarkGradientBackgroundLightColor">#ee76a8d3</Color>
    <Color x:Key="DarkGradientBackgroundDarkColor">#ee4b7ba7</Color>
    <Color x:Key="DarkGradientBackgroundMediumColor">#ee5b8cb5</Color>

    <SolidColorBrush x:Key="DarkGradientBackgroundDarkBrush" Color="{StaticResource DarkGradientBackgroundDarkColor}" />

    <LinearGradientBrush x:Key="DarkGradientBackgroundBrush"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <LinearGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterX="0.5"
                          CenterY="0.5"
                          ScaleX="-1"
                          ScaleY="1" />
                <SkewTransform AngleX="0"
                         AngleY="0"
                         CenterX="0.5"
                         CenterY="0.5" />
                <RotateTransform CenterX="0.5"
                           CenterY="0.5" />
                <TranslateTransform />
            </TransformGroup>
        </LinearGradientBrush.RelativeTransform>
        <GradientStop Color="{StaticResource DarkGradientBackgroundLightColor}" />
        <GradientStop Color="{StaticResource DarkGradientBackgroundDarkColor}" Offset="1" />
        <GradientStop Color="{StaticResource DarkGradientBackgroundMediumColor}" Offset="0.548"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DarkBorderBrush" Color="#FF292727" />

    <Color x:Key="ButtonPressedForegroundColor">White</Color>
    <SolidColorBrush x:Key="ButtonPressedForegroundBrush" Color="{StaticResource ButtonPressedForegroundColor}" />

    <LinearGradientBrush x:Key="ButtonHoverGlowBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#00CACACA" Offset="0"/>
        <GradientStop Color="#B2CACACA" Offset="1"/>
    </LinearGradientBrush>

    <Color x:Key="DarkButtonBackgroundDarkColor">#FF8F8F8F</Color>
    <LinearGradientBrush x:Key="DarkButtonBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource DarkButtonBackgroundDarkColor}" Offset="1"/>
        <GradientStop Color="{StaticResource ButtonPushedBackgroundLightColor}"/>
    </LinearGradientBrush>

    <Style x:Key="GlassyBorder"
           TargetType="Border">
        <Setter Property="Background"
              Value="{StaticResource AccentColorBrush}" />
        <Setter Property="BorderBrush"
              Value="{StaticResource AccentColorBrush}" />
        <Setter Property="BorderThickness"
              Value="1,1,1,1" />
        <Setter Property="CornerRadius"
              Value="3" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black"
                            Direction="-45"
                            BlurRadius="20"
                            Opacity=".75">
                </DropShadowEffect>
            </Setter.Value>
        </Setter>
    </Style>

    <DropShadowEffect x:Key="CommonDropShadow" BlurRadius="5" Direction="-45" Color="Black" ShadowDepth="5" Opacity="0.75" />
    <DropShadowEffect x:Key="SlightDropShadow" BlurRadius="2" Direction="-45" Color="Black" ShadowDepth="2" Opacity="0.65" />

    <!-- MenuContainer Style is the style applied to the menu dropdowns -->
    <Style x:Key="MenuContainerStyle" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border CornerRadius="3" HorizontalAlignment="Stretch" Height="Auto"
                                Background="{StaticResource BackgroundGradientBrush}">
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Defines the style used by a button that is contained within a menu button. Typically this would contain
            an arrow to indicate that the button has dropdown content -->
    <Style x:Key="MenuButtonStyle" TargetType="Button">
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid ToolTipService.Placement="Bottom">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState> 
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundDarkColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundLightColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ToolTipService.ToolTip>
                            <ToolTip FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}">
                                <StackPanel Orientation="Vertical"
                                            Margin="3">
                                    <TextBlock Text="{Binding Label}"
                                               FontWeight="Bold"
                                               Margin="0,0,0,3" />
                                <TextBlock Text="{Binding Description}" />
                            </StackPanel>
                            </ToolTip>
                        </ToolTipService.ToolTip>

                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />

                        <Border x:Name="darkborder" Visibility="Collapsed" BorderBrush="{StaticResource DarkBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="2" Background="{StaticResource DarkButtonBackgroundBrush}">
                            <Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="2" Background="{StaticResource ButtonHoverGlowBrush}" />
                        </Border>

                        <Grid>
                            <Border x:Name="HoverBorder" Background="{StaticResource ButtonHotOuterBackgroundBrush}" BorderBrush="{StaticResource ButtonHotOuterBorderBrush}" Visibility="Collapsed" CornerRadius="1.5" BorderThickness="1" />
                            <Border x:Name="PressedBorder" Background="{StaticResource ButtonPushedBackgroundBrush}" Visibility="Collapsed" CornerRadius="1.5"  BorderBrush="{StaticResource ButtonHotOuterBorderBrush}" BorderThickness="1" />
                        </Grid>

                        <Grid Margin="3">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Image Source="{Binding Icon, Converter={StaticResource ImageUrlResolver}}" Cursor="Hand" Effect="{StaticResource SlightDropShadow}" />
                                <Grid x:Name="SplitElement" Grid.Row="1" HorizontalAlignment="Center" Background="Transparent">
                                    <Path Data="M 0,0 L 8,0 L 4,4 Z" Fill="{TemplateBinding Foreground}" Margin="2 0 4 0" VerticalAlignment="Center"/>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Defines the style used by a togglebutton that is placed directly on the toolPanel.
            ToggleButtons correspond to implemenations of ISupportsConfiguration -->
    <Style x:Key="ToolButtonStyle" TargetType="Button">
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid ToolTipService.Placement="Bottom">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundDarkColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundLightColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="ToolButtonIcon"
                                                         Storyboard.TargetProperty="Opacity" From="1.0" To="0.3" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ToolTipService.ToolTip >
                            <ToolTip FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}">
                                <StackPanel Orientation="Vertical"
                                            Margin="3">
                                    <TextBlock Text="{Binding Label}"
                                               FontWeight="Bold"
                                               Margin="0,0,0,3" />
                                <TextBlock Text="{Binding Description}" />
                            </StackPanel>
                            </ToolTip>
                        </ToolTipService.ToolTip>

                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />

                        <Border x:Name="darkborder" Visibility="Collapsed" BorderBrush="{StaticResource DarkBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="2" Background="{StaticResource DarkButtonBackgroundBrush}">
                            <Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="2" Background="{StaticResource ButtonHoverGlowBrush}" />
                        </Border>

                        <Grid>
                            <Border x:Name="HoverBorder" Background="{StaticResource ButtonHotOuterBackgroundBrush}" BorderBrush="{StaticResource ButtonHotOuterBorderBrush}" Visibility="Collapsed" CornerRadius="1.5" BorderThickness="1" />
                            <Border x:Name="PressedBorder" Background="{StaticResource ButtonPushedBackgroundBrush}" Visibility="Collapsed" CornerRadius="1.5"  BorderBrush="{StaticResource ButtonHotOuterBorderBrush}" BorderThickness="1" />
                        </Grid>

                        <Grid Margin="3">
                            <Image x:Name="ToolButtonIcon" Source="{Binding Icon, Converter={StaticResource ImageUrlResolver}}"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Defines the style used by a togglebutton that is placed directly on the toolPanel.
            ToggleButtons correspond to commands that implement ISupportsConfiguration -->
    <Style x:Key="ToolToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid ToolTipService.Placement="Bottom">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundDarkColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundLightColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckedStates">
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ToolTipService.ToolTip >
                            <ToolTip FlowDirection="{Binding Source={StaticResource RTLHelper}, Path=FlowDirection}">
                                <StackPanel Orientation="Vertical"
                                            Margin="3">
                                    <TextBlock Text="{Binding Label}"
                                               FontWeight="Bold"
                                               Margin="0,0,0,3" />
                                <TextBlock Text="{Binding Description}" />
                            </StackPanel>
                            </ToolTip>
                        </ToolTipService.ToolTip>

                        <Border x:Name="CheckedBorder" Visibility="Collapsed" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{StaticResource ButtonPushedBackgroundBrush}"
                                    BorderBrush="{StaticResource ButtonHotOuterBorderBrush}"/>

                        <Border x:Name="darkborder" Visibility="Collapsed" BorderBrush="{StaticResource DarkBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="2" Background="{StaticResource DarkButtonBackgroundBrush}">
                            <Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="2" Background="{StaticResource ButtonHoverGlowBrush}" />
                        </Border>

                        <Grid>
                            <Border x:Name="HoverBorder" Background="{StaticResource ButtonHotOuterBackgroundBrush}" BorderBrush="{StaticResource ButtonHotOuterBorderBrush}" Visibility="Collapsed" CornerRadius="1.5" BorderThickness="1" />
                            <Border x:Name="PressedBorder" Background="{StaticResource ButtonPushedBackgroundBrush}" Visibility="Collapsed" CornerRadius="1.5"  BorderBrush="{StaticResource ButtonHotOuterBorderBrush}" BorderThickness="1" />
                        </Grid>

                        <Grid Margin="3">
                            <Image Source="{Binding Icon, Converter={StaticResource ImageUrlResolver}}" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Defines the style used by a button that is contained within a popup menu button. Typically this would contain
            an arrow to indicate that the button has dropdown content -->
    <Style x:Key="PopupMenuButtonStyle" TargetType="Button">
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="root" ToolTipService.Placement="Bottom">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundDarkColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundLightColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="root" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ToolTipService.ToolTip>
                            <StackPanel Orientation="Vertical" Margin="3">
                                <TextBlock Text="{Binding Label}" FontWeight="Bold" Margin="0,0,0,3" />
                                <TextBlock Text="{Binding Description}" />
                            </StackPanel>
                        </ToolTipService.ToolTip>

                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />

                        <Border x:Name="darkborder" Visibility="Collapsed" BorderBrush="{StaticResource DarkBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="2" Background="{StaticResource DarkButtonBackgroundBrush}">
                            <Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="2" Background="{StaticResource ButtonHoverGlowBrush}" />
                        </Border>

                        <Grid>
                            <Border x:Name="HoverBorder" Background="{StaticResource SelectionColorBrush}" BorderBrush="{StaticResource AccentTextColorBrush}" Visibility="Collapsed" CornerRadius="1.5" BorderThickness="1" Opacity="0.5" />
                            <Border x:Name="PressedBorder" Background="{StaticResource SelectionColorBrush}" Visibility="Collapsed" CornerRadius="1.5"  BorderBrush="{StaticResource ButtonHotOuterBorderBrush}" BorderThickness="1" />
                        </Grid>

                        <Grid Margin="3">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Image Source="{Binding Icon, Converter={StaticResource ImageUrlResolver}}" Cursor="Hand" Effect="{StaticResource SlightDropShadow}" Height="16" Stretch="Uniform" />
                                <Grid x:Name="SplitElement" Grid.Row="1" HorizontalAlignment="Center" Background="Transparent" Margin="3 1 3 0" Width="8" >
                                    <Path Data="M 0,0 L 8,0 L 4,4 Z" Fill="{StaticResource AccentTextColorBrush}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Defines the style used by a togglebutton that is placed directly on the popup toolbar.
            ToggleButtons correspond to implemenations of ISupportsConfiguration -->
    <Style x:Key="PopupToolButtonStyle" TargetType="Button">
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="root" ToolTipService.Placement="Bottom">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundDarkColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundLightColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="root" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ToolTipService.ToolTip >
                            <StackPanel Orientation="Vertical" Margin="3">
                                <TextBlock Text="{Binding Label}" FontWeight="Bold" Margin="0,0,0,3" />
                                <TextBlock Text="{Binding Description}" />
                            </StackPanel>
                        </ToolTipService.ToolTip>

                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />

                        <Border x:Name="darkborder" Visibility="Collapsed" BorderBrush="{StaticResource DarkBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="2" Background="{StaticResource DarkButtonBackgroundBrush}">
                            <Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="2" Background="{StaticResource ButtonHoverGlowBrush}" />
                        </Border>

                        <Grid>
                            <Border x:Name="HoverBorder" Background="{StaticResource SelectionColorBrush}" BorderBrush="{StaticResource AccentTextColorBrush}" Visibility="Collapsed" CornerRadius="1.5" BorderThickness="1" Opacity="0.5" />
                            <Border x:Name="PressedBorder" Background="{StaticResource SelectionColorBrush}" Visibility="Collapsed" CornerRadius="1.5"  BorderBrush="{StaticResource ButtonHotOuterBorderBrush}" BorderThickness="1" />
                        </Grid>

                        <Grid Margin="3">
                            <Image x:Name="ToolButtonIcon" Source="{Binding Icon, Converter={StaticResource ImageUrlResolver}}" Height="16" Stretch="Uniform" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Defines the style used by a togglebutton that is placed directly on the popup toolbar.
            ToggleButtons correspond to commands that implement ISupportsConfiguration -->
    <Style x:Key="PopupToolToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="root" ToolTipService.Placement="Bottom">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundDarkColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundLightColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="root" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckedStates">
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ToolTipService.ToolTip >
                            <StackPanel Orientation="Vertical" Margin="3">
                                <TextBlock Text="{Binding Label}" FontWeight="Bold" Margin="0,0,0,3" />
                                <TextBlock Text="{Binding Description}" />
                            </StackPanel>
                        </ToolTipService.ToolTip>

                        <Border x:Name="CheckedBorder" Visibility="Collapsed" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{StaticResource ButtonPushedBackgroundBrush}"
                                    BorderBrush="{StaticResource ButtonHotOuterBorderBrush}"/>

                        <Border x:Name="darkborder" Visibility="Collapsed" BorderBrush="{StaticResource DarkBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="2" Background="{StaticResource DarkButtonBackgroundBrush}">
                            <Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="2" Background="{StaticResource ButtonHoverGlowBrush}" />
                        </Border>

                        <Grid>
                            <Border x:Name="HoverBorder" Background="{StaticResource SelectionColorBrush}" BorderBrush="{StaticResource AccentTextColorBrush}" Visibility="Collapsed" CornerRadius="1.5" BorderThickness="1" Opacity="0.5" />
                            <Border x:Name="PressedBorder" Background="{StaticResource SelectionColorBrush}" Visibility="Collapsed" CornerRadius="1.5"  BorderBrush="{StaticResource ButtonHotOuterBorderBrush}" BorderThickness="1" />
                        </Grid>

                        <Grid Margin="3">
                            <Image x:Name="ToolButtonIcon" Source="{Binding Icon, Converter={StaticResource ImageUrlResolver}}" Height="16" Stretch="Uniform" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Corresponds the style assigned to a button that is placed within a menu. -->
    <!-- Corresponds the style assigned to a button that is placed within a menu. -->
    <Style x:Key="MenuItemStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundDarkColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundLightColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />

                        <Border x:Name="darkborder" Visibility="Collapsed" BorderBrush="{StaticResource DarkBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="2" Background="{StaticResource DarkButtonBackgroundBrush}">
                            <Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="2" Background="{StaticResource ButtonHoverGlowBrush}" />
                        </Border>

                        <Grid>
                            <Border x:Name="HoverBorder" Background="{StaticResource ButtonHotOuterBackgroundBrush}" BorderBrush="{StaticResource ButtonHotOuterBorderBrush}" Visibility="Collapsed" CornerRadius="1.5" BorderThickness="1" />
                            <Border x:Name="PressedBorder" Background="{StaticResource ButtonPushedBackgroundBrush}" Visibility="Collapsed" CornerRadius="1.5"  BorderBrush="{StaticResource ButtonHotOuterBorderBrush}" BorderThickness="1" />
                        </Grid>

                        <Grid Margin="3">
                            <StackPanel Margin="2" Cursor="Hand" Orientation="Horizontal">
                                <Image Source="{Binding Icon, Converter={StaticResource ImageUrlResolver}}" Margin="2" Width="16" Height="16" />
                                <TextBlock Text="{Binding Label}" Foreground="{StaticResource ButtonPressedForegroundBrush}" />
                            </StackPanel>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Corresponds to the style assigned to a toggle button that is placed within a menu -->
    <Style x:Key="MenuItemToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundDarkColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                        <ColorAnimation Duration="0" To="{StaticResource ButtonPushedBackgroundLightColor}" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="darkborder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckedStates">
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="CheckedBorder" BorderBrush="Black" Visibility="Collapsed" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />

                        <Border x:Name="darkborder" Visibility="Collapsed" BorderBrush="{StaticResource DarkBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="2" Background="{StaticResource DarkButtonBackgroundBrush}">
                            <Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="2" Background="{StaticResource ButtonHoverGlowBrush}" />
                        </Border>

                        <Grid>
                            <Border x:Name="HoverBorder" Background="{StaticResource ButtonHotOuterBackgroundBrush}" BorderBrush="{StaticResource ButtonHotOuterBorderBrush}" Visibility="Collapsed" CornerRadius="1.5" BorderThickness="1" />
                            <Border x:Name="PressedBorder" Background="{StaticResource ButtonPushedBackgroundBrush}" Visibility="Collapsed" CornerRadius="1.5"  BorderBrush="{StaticResource ButtonHotOuterBorderBrush}" BorderThickness="1" />
                        </Grid>

                        <Grid Margin="3">
                            <StackPanel Margin="2" Cursor="Hand" Orientation="Horizontal">
                                <Image Source="{Binding Icon, Converter={StaticResource ImageUrlResolver}}" Margin="2" Width="16" Height="16" />
                                <TextBlock Text="{Binding Label}" Foreground="{StaticResource ButtonPressedForegroundBrush}" />
                            </StackPanel>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Corresponds to the style assigned to the group element -->
    <Style x:Key="GroupContainerStyle" TargetType="sdk:HeaderedItemsControl">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="sdk:HeaderedItemsControl">
                    <Grid x:Name="Root">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <ItemsPresenter x:Name="Items" />
                        <TextBlock Text="{Binding Label}" VerticalAlignment="Bottom" HorizontalAlignment="Center" Grid.Row="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Corresponds to the style assigned to the separator elements placed on the toolPanel -->
    <Style x:Key="ToolSeparatorStyle" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Rectangle Height="20" Fill="Black" Width="2" Margin="2,0,2,0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Corresponds to the style assigned to separators placed within a menu -->
    <Style x:Key="MenuItemSeparatorStyle" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Rectangle Width="80" Fill="Black" Height="2" Margin="0,2,0,2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Corresponds to the style assigned to layer configuration context menu -->
    <!--<Style x:Key="LayerConfigContextMenuStyle" TargetType="toolkit:ContextMenu">
        <Setter Property="Background" Value="{StaticResource BackgroundGradientBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource BackgroundTextColorBrush}"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#FF959595" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="toolkit:ContextMenu">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2">
                        <Border.Effect>
                            <DropShadowEffect Color="LightGray" ShadowDepth="3" />
                        </Border.Effect>
                        <Grid>
                            <Rectangle RadiusX="2" RadiusY="2" Width="28" Margin="2" HorizontalAlignment="Left" />
                            <Rectangle Fill="{StaticResource SelectionColorBrush}" Width="1" Margin="30,2,0,2" HorizontalAlignment="Left" />
                            <ItemsPresenter Margin="{TemplateBinding Padding}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <!-- Corresponds to the style assigned to popups for Layer Configuration and Toolbars -->
    <Style x:Key="PopupContentControl" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border BorderBrush="{StaticResource SelectionColorBrush}" 
                                BorderThickness="1" CornerRadius="6" Margin="-1,0,0,0">
                        <Border BorderBrush="{StaticResource AccentColorBrush}" 
                                BorderThickness="5" CornerRadius="3">
                            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Background="{StaticResource BackgroundGradientBrush}"
                                          Style="{StaticResource ThinBarScrollViewerStyle}">
                                <ContentPresenter Content="{TemplateBinding Content}" />
                            </ScrollViewer>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Corresponds to the style assigned to popups's leader for Layer Configuration and Search -->
    <Style x:Key="PopupLeader" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Path Stroke="{StaticResource SelectionColorBrush}" Fill="{StaticResource AccentColorBrush}"
                                      Data="M 20,0 L 0,10 20,20"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:ToolPanel">
        <!--<Setter Property="MenuContainerStyle" Value="{StaticResource MenuContainerStyle}"/>
        <Setter Property="MenuButtonStyle" Value="{StaticResource MenuButtonStyle}"/>
        <Setter Property="ToolButtonStyle" Value="{StaticResource ToolButtonStyle}"/>
        <Setter Property="ToolToggleButtonStyle" Value="{StaticResource ToolToggleButtonStyle}"/>
        <Setter Property="MenuItemStyle" Value="{StaticResource MenuItemStyle}"/>
        <Setter Property="MenuItemToggleButtonStyle" Value="{StaticResource MenuItemToggleButtonStyle}"/>
        <Setter Property="GroupContainerStyle" Value="{StaticResource GroupContainerStyle}"/>
        <Setter Property="ToolSeparatorStyle" Value="{StaticResource ToolSeparatorStyle}"/>
        <Setter Property="MenuItemSeparatorStyle" Value="{StaticResource MenuItemSeparatorStyle}"/>
        <Setter Property="LayerConfigContextMenuStyle" Value="{StaticResource LayerConfigContextMenuStyle}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ToolPanel">
                    <ItemsControl x:Name="ToolPanelItemsControl" ItemsSource="{TemplateBinding ToolPanelItems}" Padding="0" Margin="0" BorderThickness="0">
                    </ItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>
