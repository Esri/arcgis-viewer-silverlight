<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddPointInstructions" xml:space="preserve">
    <value>マップをクリックして {0} フィーチャを作成します。</value>
  </data>
  <data name="AddSelect" xml:space="preserve">
    <value>選択セットに追加</value>
  </data>
  <data name="AddSelectDescription" xml:space="preserve">
    <value>フィーチャを現在の選択セットに追加します</value>
  </data>
  <data name="AddShapeInstructions" xml:space="preserve">
    <value>マップをクリックして頂点を追加し、ダブルクリックして {0} フィーチャを作成します。</value>
  </data>
  <data name="AttributesOf" xml:space="preserve">
    <value>{0} の属性</value>
  </data>
  <data name="AutoCompleteDescription" xml:space="preserve">
    <value>自動完成ポリゴンを作成します</value>
  </data>
  <data name="AutoComplete" xml:space="preserve">
    <value>自動完成</value>
  </data>
  <data name="AutoZoomToSelected" xml:space="preserve">
    <value>選択セットに自動ズーム</value>
  </data>
  <data name="BrowseTabHeader" xml:space="preserve">
    <value>参照</value>
  </data>
  <data name="BtnBack" xml:space="preserve">
    <value>戻る</value>
  </data>
  <data name="BtnCancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="BtnNext" xml:space="preserve">
    <value>次へ</value>
  </data>
  <data name="BtnOk" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Button" xml:space="preserve">
    <value>ボタン</value>
  </data>
  <data name="CancelTool" xml:space="preserve">
    <value>ツールをキャンセル</value>
  </data>
  <data name="ClearSelect" xml:space="preserve">
    <value>選択の解除</value>
  </data>
  <data name="ClickToMoveEast" xml:space="preserve">
    <value>クリックして東へ移動</value>
  </data>
  <data name="ClickToMoveNorth" xml:space="preserve">
    <value>クリックして北へ移動</value>
  </data>
  <data name="ClickToMoveSouth" xml:space="preserve">
    <value>クリックして南へ移動</value>
  </data>
  <data name="ClickToMoveWest" xml:space="preserve">
    <value>クリックして西へ移動</value>
  </data>
  <data name="Commit" xml:space="preserve">
    <value>変更を確定</value>
  </data>
  <data name="ContentsTabHeader" xml:space="preserve">
    <value>コンテンツ</value>
  </data>
  <data name="ContentTypeColon" xml:space="preserve">
    <value>コンテンツ タイプ: </value>
  </data>
  <data name="Cut" xml:space="preserve">
    <value>切り取り</value>
  </data>
  <data name="CutDescription" xml:space="preserve">
    <value>フィーチャを切り取ります</value>
  </data>
  <data name="DeleteAttachment" xml:space="preserve">
    <value>このアタッチメントを削除します</value>
  </data>
  <data name="DeleteSelect" xml:space="preserve">
    <value>選択セットの削除</value>
  </data>
  <data name="DeleteSelectDescription" xml:space="preserve">
    <value>選択されたフィーチャを削除します</value>
  </data>
  <data name="DragToRotate" xml:space="preserve">
    <value>ドラッグして回転</value>
  </data>
  <data name="DragToZoomInOrOut" xml:space="preserve">
    <value>ドラッグして拡大/縮小</value>
  </data>
  <data name="DrawingDotDot" xml:space="preserve">
    <value>描画しています...</value>
  </data>
  <data name="EditGeometry" xml:space="preserve">
    <value>形状の編集</value>
  </data>
  <data name="EditShapeDescription" xml:space="preserve">
    <value>フィーチャのジオメトリ、位置、回転、スケールを編集します</value>
  </data>
  <data name="EditTabHeader" xml:space="preserve">
    <value>フィーチャの追加</value>
  </data>
  <data name="EditValues" xml:space="preserve">
    <value>値の編集</value>
  </data>
  <data name="EditValuesDescription" xml:space="preserve">
    <value>フィーチャの値を編集します</value>
  </data>
  <data name="Freehand" xml:space="preserve">
    <value>フリーハンド</value>
  </data>
  <data name="FreehandDescription" xml:space="preserve">
    <value>フリーハンドを使用してラインまたはシェープを作成します</value>
  </data>
  <data name="FullExtent" xml:space="preserve">
    <value>全体表示</value>
  </data>
  <data name="MapContentsTabHeader" xml:space="preserve">
    <value>マップ コンテンツ</value>
  </data>
  <data name="MoveBarUpZoomInMoveDownToZoomOut" xml:space="preserve">
    <value>バーの上下移動で拡大/縮小</value>
  </data>
  <data name="MoveFirst" xml:space="preserve">
    <value>先頭へ移動</value>
  </data>
  <data name="MoveLast" xml:space="preserve">
    <value>末尾へ移動</value>
  </data>
  <data name="MoveNext" xml:space="preserve">
    <value>次へ移動</value>
  </data>
  <data name="MovePrevious" xml:space="preserve">
    <value>前へ移動</value>
  </data>
  <data name="NameColon" xml:space="preserve">
    <value>名前: </value>
  </data>
  <data name="NewSelect" xml:space="preserve">
    <value>新しい選択セット</value>
  </data>
  <data name="NewSelectDescription" xml:space="preserve">
    <value>新しい選択セットを作成します</value>
  </data>
  <data name="OpenItem" xml:space="preserve">
    <value>アイテムを開く</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>オプション</value>
  </data>
  <data name="OptionsDotDot" xml:space="preserve">
    <value>オプション...</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>印刷</value>
  </data>
  <data name="PrintPreviewColon" xml:space="preserve">
    <value>印刷プレビュー:</value>
  </data>
  <data name="RecordColon" xml:space="preserve">
    <value>レコード:</value>
  </data>
  <data name="RecordsOutOfSelected" xml:space="preserve">
    <value>（{0} / {1} レコードを選択）</value>
  </data>
  <data name="RemoveSelect" xml:space="preserve">
    <value>選択セットから削除</value>
  </data>
  <data name="RemoveSelectDescription" xml:space="preserve">
    <value>現在の選択セットからフィーチャを削除します</value>
  </data>
  <data name="ResetNorth" xml:space="preserve">
    <value>方位のリセット</value>
  </data>
  <data name="Reshape" xml:space="preserve">
    <value>形状変更</value>
  </data>
  <data name="ReshapeDescription" xml:space="preserve">
    <value>フィーチャの形状を変更します</value>
  </data>
  <data name="SaveEdit" xml:space="preserve">
    <value>編集内容を保存します</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="SearchTabHeader" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="SizeColon" xml:space="preserve">
    <value>サイズ: </value>
  </data>
  <data name="SwitchSelection" xml:space="preserve">
    <value>選択セットの切り替え</value>
  </data>
  <data name="Union" xml:space="preserve">
    <value>ユニオン</value>
  </data>
  <data name="UnionDescription" xml:space="preserve">
    <value>選択されたフィーチャにユニオンを実行します</value>
  </data>
  <data name="UriColon" xml:space="preserve">
    <value>Uri: </value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>バージョン</value>
  </data>
  <data name="Zoom" xml:space="preserve">
    <value>ズーム</value>
  </data>
  <data name="ZoomIn" xml:space="preserve">
    <value>拡大</value>
  </data>
  <data name="ZoomOut" xml:space="preserve">
    <value>縮小</value>
  </data>
  <data name="CouldNotLoadViewer" xml:space="preserve">
    <value>ビューアを読み込めませんでした。詳細については、お使いのブラウザのコンソールを確認してください。</value>
  </data>
  <data name="InitializingViewer" xml:space="preserve">
    <value>ビューアを初期化しています...</value>
  </data>
</root>