<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutDescription" xml:space="preserve">
    <value>显示“关于”对话框</value>
  </data>
  <data name="AboutDisplayName" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="AddGeoRssFeedDescription" xml:space="preserve">
    <value>向该地图添加 GeoRSS 源</value>
  </data>
  <data name="AddGeoRssFeedDisplayName" xml:space="preserve">
    <value>添加 GeoRss</value>
  </data>
  <data name="AddHeatMapDescription" xml:space="preserve">
    <value>向该地图添加热点图</value>
  </data>
  <data name="AddHeatMapDisplayName" xml:space="preserve">
    <value>添加热点图</value>
  </data>
  <data name="BaseMapGalleryDescription" xml:space="preserve">
    <value>为您的地图选择一个底图</value>
  </data>
  <data name="BaseMapGalleryDisplayName" xml:space="preserve">
    <value>选择底图</value>
  </data>
  <data name="BrowseDescription" xml:space="preserve">
    <value>通过浏览到 ArcGIS Server 端点来向地图添加数据 </value>
  </data>
  <data name="BrowseDisplayName" xml:space="preserve">
    <value>浏览</value>
  </data>
  <data name="CategoryApplication" xml:space="preserve">
    <value>应用程序</value>
  </data>
  <data name="CategoryAttributeTable" xml:space="preserve">
    <value>属性表</value>
  </data>
  <data name="CategoryConfigure" xml:space="preserve">
    <value>配置</value>
  </data>
  <data name="CategoryEditing" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="CategoryGeoprocessing" xml:space="preserve">
    <value>地理处理</value>
  </data>
  <data name="CategoryLayer" xml:space="preserve">
    <value>图层</value>
  </data>
  <data name="CategoryMap" xml:space="preserve">
    <value>地图</value>
  </data>
  <data name="CategoryMouseEvents" xml:space="preserve">
    <value>鼠标事件</value>
  </data>
  <data name="CategoryPopup" xml:space="preserve">
    <value>弹出窗口</value>
  </data>
  <data name="CategorySelection" xml:space="preserve">
    <value>选择</value>
  </data>
  <data name="CategorySymbology" xml:space="preserve">
    <value>符号系统</value>
  </data>
  <data name="CategoryTheme" xml:space="preserve">
    <value>主题</value>
  </data>
  <data name="ChangeThemeBackgroundDescription" xml:space="preserve">
    <value>更改某个主题的背景色</value>
  </data>
  <data name="ChangeThemeBackgroundDisplayName" xml:space="preserve">
    <value>更改主题背景</value>
  </data>
  <data name="ClearSelectionDescription" xml:space="preserve">
    <value>清除当前图层中的选择内容</value>
  </data>
  <data name="ClearSelectionDisplayName" xml:space="preserve">
    <value>清除所选内容</value>
  </data>
  <data name="ConfigureLayerDescription" xml:space="preserve">
    <value>指定所选图层的外观和行为</value>
  </data>
  <data name="ConfigureLayerDisplayName" xml:space="preserve">
    <value>配置图层</value>
  </data>
  <data name="ConfigureLayerRendererDescription" xml:space="preserve">
    <value>允许配置当前图层的渲染器</value>
  </data>
  <data name="ConfigureLayerRendererDisplayName" xml:space="preserve">
    <value>配置符号系统</value>
  </data>
  <data name="ConfigureSelectedLayerDescription" xml:space="preserve">
    <value>允许配置所选图层</value>
  </data>
  <data name="ConfigureSelectedLayerDisplayName" xml:space="preserve">
    <value>配置图层</value>
  </data>
  <data name="DeleteGraphicToolDescription" xml:space="preserve">
    <value>从图层中移除要素</value>
  </data>
  <data name="DeleteGraphicToolDisplayName" xml:space="preserve">
    <value>删除要素</value>
  </data>
  <data name="DeleteLayerDescription" xml:space="preserve">
    <value>从该地图中删除所选图层</value>
  </data>
  <data name="DeleteLayerDisplayName" xml:space="preserve">
    <value>移除图层</value>
  </data>
  <data name="EditShapeToolDescription" xml:space="preserve">
    <value>修改要素的几何</value>
  </data>
  <data name="EditShapeToolDisplayName" xml:space="preserve">
    <value>编辑几何形状</value>
  </data>
  <data name="EditValuesToolDescription" xml:space="preserve">
    <value>修改要素的属性值</value>
  </data>
  <data name="EditValuesToolDisplayName" xml:space="preserve">
    <value>编辑值</value>
  </data>
  <data name="AddAttachmentsToolDescription" xml:space="preserve">
    <value>向要素添加附件</value>
  </data>
  <data name="AddAttachmentsToolDisplayName" xml:space="preserve">
    <value>添加附件</value>
  </data>
  <data name="ExceptionNoValidApplicationContextForApplication" xml:space="preserve">
    <value>没有适用于此应用程序的有效应用程序上下文</value>
  </data>
  <data name="ExportSelectionDescription" xml:space="preserve">
    <value>将当前图层中所选要素的属性导出到 CSV 文件中</value>
  </data>
  <data name="ExportSelectionDisplayName" xml:space="preserve">
    <value>导出所选内容</value>
  </data>
  <data name="FilterByMapExtentDescription" xml:space="preserve">
    <value>仅显示当前地图范围内要素的记录</value>
  </data>
  <data name="FilterByMapExtentName" xml:space="preserve">
    <value>按地图范围过滤</value>
  </data>
  <data name="FilterBySelectionAll" xml:space="preserve">
    <value>显示全部表</value>
  </data>
  <data name="FilterBySelectionAllDescription" xml:space="preserve">
    <value>表将显示已选择的要素和未选择的要素</value>
  </data>
  <data name="FilterBySelectionNotSelected" xml:space="preserve">
    <value>表显示未选择的要素</value>
  </data>
  <data name="FilterBySelectionNotSelectedDescription" xml:space="preserve">
    <value>过滤表以便只显示当前未选择的要素。</value>
  </data>
  <data name="FilterBySelectionSelected" xml:space="preserve">
    <value>表显示已选择的要素</value>
  </data>
  <data name="FilterBySelectionSelectedDescription" xml:space="preserve">
    <value>过滤表以便只显示已选择的要素。</value>
  </data>
  <data name="FilterLayerDescription" xml:space="preserve">
    <value>基于某一属性查询过滤所选图层中的要素</value>
  </data>
  <data name="FilterLayerDisplayName" xml:space="preserve">
    <value>过滤图层</value>
  </data>
  <data name="FindNearbyDescription" xml:space="preserve">
    <value>查找当前选择内容附近的要素</value>
  </data>
  <data name="FindNearbyDisplayName" xml:space="preserve">
    <value>查找邻近要素</value>
  </data>
  <data name="GeoprocessingDescription" xml:space="preserve">
    <value>使用 ArcGIS Server 地理处理服务的工具</value>
  </data>
  <data name="GeoprocessingDisplayName" xml:space="preserve">
    <value>地理处理</value>
  </data>
  <data name="GoToLayerDescription" xml:space="preserve">
    <value>缩放至所选图层</value>
  </data>
  <data name="GoToLayerDisplayName" xml:space="preserve">
    <value>转至图层</value>
  </data>
  <data name="IdentifyBehaviorDisplayName" xml:space="preserve">
    <value>识别行为</value>
  </data>
  <data name="MoveLayerDownDescription" xml:space="preserve">
    <value>将图层的显示顺序在地图中上移一位</value>
  </data>
  <data name="MoveLayerDownDisplayName" xml:space="preserve">
    <value>上移</value>
  </data>
  <data name="MoveLayerUpDescription" xml:space="preserve">
    <value>将图层的显示顺序在地图中下移一位</value>
  </data>
  <data name="MoveLayerUpDisplayName" xml:space="preserve">
    <value>下移</value>
  </data>
  <data name="NavigateToHelpLinkDescription" xml:space="preserve">
    <value>导航至帮助系统</value>
  </data>
  <data name="NavigateToHelpLinkDisplayName" xml:space="preserve">
    <value>导航至帮助链接</value>
  </data>
  <data name="PrintDescription" xml:space="preserve">
    <value>打印地图</value>
  </data>
  <data name="PrintDisplayName" xml:space="preserve">
    <value>打印</value>
  </data>
  <data name="RefreshLayerDescription" xml:space="preserve">
    <value>刷新所选图层</value>
  </data>
  <data name="RefreshLayerDisplayName" xml:space="preserve">
    <value>刷新图层</value>
  </data>
  <data name="RenameLayerDescription" xml:space="preserve">
    <value>重命名所选图层</value>
  </data>
  <data name="RenameLayerDisplayName" xml:space="preserve">
    <value>重命名图层</value>
  </data>
  <data name="RestoreDefaultThemeDescription" xml:space="preserve">
    <value>将地图所用的颜色恢复到默认设置</value>
  </data>
  <data name="RestoreDefaultThemeDisplayName" xml:space="preserve">
    <value>重置主题</value>
  </data>
  <data name="SelectAllDescription" xml:space="preserve">
    <value>选择当前图层中的所有要素</value>
  </data>
  <data name="SelectAllDisplayName" xml:space="preserve">
    <value>全选</value>
  </data>
  <data name="SelectByDrawDescription" xml:space="preserve">
    <value>在地图中要素的周围拖出一个框来选择要素</value>
  </data>
  <data name="SelectByDrawDisplayName" xml:space="preserve">
    <value>选择</value>
  </data>
  <data name="SelectedIndexOfTotal" xml:space="preserve">
    <value>{0}/{1}</value>
  </data>
  <data name="ServiceDetailsDescription" xml:space="preserve">
    <value>打开所选图层的服务端点</value>
  </data>
  <data name="ServiceDetailsDisplayName" xml:space="preserve">
    <value>服务详细信息</value>
  </data>
  <data name="ShowMapCoordinatesDescription" xml:space="preserve">
    <value>当鼠标悬停在地图上方时显示坐标</value>
  </data>
  <data name="ShowMapCoordinatesDisplayName" xml:space="preserve">
    <value>显示地图坐标</value>
  </data>
  <data name="ShowPreviewControlDescription" xml:space="preserve">
    <value>显示一个对话框来演示在地图的不同组成部分应用主题颜色时的效果</value>
  </data>
  <data name="ShowPreviewControlDisplayName" xml:space="preserve">
    <value>预览主题</value>
  </data>
  <data name="ToggleAddContentDescription" xml:space="preserve">
    <value>向地图添加 ArcGIS Server、SharePoint、空间数据服务器或 GeoRSS 数据</value>
  </data>
  <data name="ToggleAddContentDisplayName" xml:space="preserve">
    <value>添加内容</value>
  </data>
  <data name="ToggleEditDescription" xml:space="preserve">
    <value>显示或隐藏编辑工具</value>
  </data>
  <data name="ToggleEditDisplayName" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="ToggleFullScreenDescription" xml:space="preserve">
    <value>以全屏模式显示地图</value>
  </data>
  <data name="ToggleFullScreenDisplayName" xml:space="preserve">
    <value>全屏</value>
  </data>
  <data name="ToggleMapContentsDescription" xml:space="preserve">
    <value>打开“地图内容”面板以查看地图的图层</value>
  </data>
  <data name="ToggleMapContentsDisplayName" xml:space="preserve">
    <value>地图内容</value>
  </data>
  <data name="ToggleSearchDescription" xml:space="preserve">
    <value>搜索地点或 ArcGIS Server 服务</value>
  </data>
  <data name="ToggleSearchDisplayName" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="ToggleTableDescription" xml:space="preserve">
    <value>打开所选图层的属性表</value>
  </data>
  <data name="ToggleTableDisplayName" xml:space="preserve">
    <value>显示表</value>
  </data>
  <data name="ZoomToSelectionDescription" xml:space="preserve">
    <value>缩放至当前图层中的所选要素</value>
  </data>
  <data name="ZoomToSelectionDisplayName" xml:space="preserve">
    <value>缩放至</value>
  </data>
</root>