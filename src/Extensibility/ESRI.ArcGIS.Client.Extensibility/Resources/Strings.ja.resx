<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutDescription" xml:space="preserve">
    <value>バージョン情報を表示します</value>
  </data>
  <data name="AboutDisplayName" xml:space="preserve">
    <value>バージョン情報</value>
  </data>
  <data name="AddGeoRssFeedDescription" xml:space="preserve">
    <value>GeoRSS フィードをマップに追加します</value>
  </data>
  <data name="AddGeoRssFeedDisplayName" xml:space="preserve">
    <value>GeoRSS の追加</value>
  </data>
  <data name="AddHeatMapDescription" xml:space="preserve">
    <value>ヒート マップをマップに追加します</value>
  </data>
  <data name="AddHeatMapDisplayName" xml:space="preserve">
    <value>ヒート マップの追加</value>
  </data>
  <data name="BaseMapGalleryDescription" xml:space="preserve">
    <value>マップのベースマップを選択します</value>
  </data>
  <data name="BaseMapGalleryDisplayName" xml:space="preserve">
    <value>ベースマップの選択</value>
  </data>
  <data name="BrowseDescription" xml:space="preserve">
    <value>ArcGIS Server のエンドポイントを参照してデータをマップに追加します </value>
  </data>
  <data name="BrowseDisplayName" xml:space="preserve">
    <value>参照</value>
  </data>
  <data name="CategoryApplication" xml:space="preserve">
    <value>アプリケーション</value>
  </data>
  <data name="CategoryAttributeTable" xml:space="preserve">
    <value>属性テーブル</value>
  </data>
  <data name="CategoryConfigure" xml:space="preserve">
    <value>構成</value>
  </data>
  <data name="CategoryEditing" xml:space="preserve">
    <value>編集</value>
  </data>
  <data name="CategoryGeoprocessing" xml:space="preserve">
    <value>ジオプロセシング</value>
  </data>
  <data name="CategoryLayer" xml:space="preserve">
    <value>レイヤ</value>
  </data>
  <data name="CategoryMap" xml:space="preserve">
    <value>マップ</value>
  </data>
  <data name="CategoryMouseEvents" xml:space="preserve">
    <value>マウス イベント</value>
  </data>
  <data name="CategoryPopup" xml:space="preserve">
    <value>ポップアップ</value>
  </data>
  <data name="CategorySelection" xml:space="preserve">
    <value>選択セット</value>
  </data>
  <data name="CategorySymbology" xml:space="preserve">
    <value>シンボル</value>
  </data>
  <data name="CategoryTheme" xml:space="preserve">
    <value>テーマ</value>
  </data>
  <data name="ChangeThemeBackgroundDescription" xml:space="preserve">
    <value>テーマの背景を変更します</value>
  </data>
  <data name="ChangeThemeBackgroundDisplayName" xml:space="preserve">
    <value>テーマの背景の変更</value>
  </data>
  <data name="ClearSelectionDescription" xml:space="preserve">
    <value>現在のレイヤから選択セットを解除します</value>
  </data>
  <data name="ClearSelectionDisplayName" xml:space="preserve">
    <value>選択の解除</value>
  </data>
  <data name="ConfigureLayerDescription" xml:space="preserve">
    <value>選択されているレイヤの表示設定およびビヘイビアーを指定します</value>
  </data>
  <data name="ConfigureLayerDisplayName" xml:space="preserve">
    <value>レイヤの構成</value>
  </data>
  <data name="ConfigureLayerRendererDescription" xml:space="preserve">
    <value>現在のレイヤのレンダラを構成できるようにします</value>
  </data>
  <data name="ConfigureLayerRendererDisplayName" xml:space="preserve">
    <value>シンボルを構成します</value>
  </data>
  <data name="ConfigureSelectedLayerDescription" xml:space="preserve">
    <value>選択されているレイヤを構成できるようにします</value>
  </data>
  <data name="ConfigureSelectedLayerDisplayName" xml:space="preserve">
    <value>レイヤを構成します</value>
  </data>
  <data name="DeleteGraphicToolDescription" xml:space="preserve">
    <value>フィーチャをレイヤから削除します</value>
  </data>
  <data name="DeleteGraphicToolDisplayName" xml:space="preserve">
    <value>フィーチャの削除</value>
  </data>
  <data name="DeleteLayerDescription" xml:space="preserve">
    <value>選択されているレイヤをマップから削除します</value>
  </data>
  <data name="DeleteLayerDisplayName" xml:space="preserve">
    <value>レイヤの削除</value>
  </data>
  <data name="EditShapeToolDescription" xml:space="preserve">
    <value>フィーチャのジオメトリを変更します</value>
  </data>
  <data name="EditShapeToolDisplayName" xml:space="preserve">
    <value>形状の編集</value>
  </data>
  <data name="EditValuesToolDescription" xml:space="preserve">
    <value>フィーチャの属性値を変更します</value>
  </data>
  <data name="EditValuesToolDisplayName" xml:space="preserve">
    <value>値の編集</value>
  </data>
  <data name="AddAttachmentsToolDescription" xml:space="preserve">
    <value>フィーチャに添付ファイルを追加します</value>
  </data>
  <data name="AddAttachmentsToolDisplayName" xml:space="preserve">
    <value>添付ファイルの追加</value>
  </data>
  <data name="ExceptionNoValidApplicationContextForApplication" xml:space="preserve">
    <value>このアプリケーションの有効なアプリケーション コンテキストがありません</value>
  </data>
  <data name="ExportSelectionDescription" xml:space="preserve">
    <value>現在のレイヤ内で選択したフィーチャの属性を CSV ファイルにエクスポートします</value>
  </data>
  <data name="ExportSelectionDisplayName" xml:space="preserve">
    <value>選択セットのエクスポート</value>
  </data>
  <data name="FilterByMapExtentDescription" xml:space="preserve">
    <value>現在のマップ範囲内にあるフィーチャのレコードのみを表示します</value>
  </data>
  <data name="FilterByMapExtentName" xml:space="preserve">
    <value>マップ範囲によるフィルタ</value>
  </data>
  <data name="FilterBySelectionAll" xml:space="preserve">
    <value>テーブルにすべてのフィーチャを表示</value>
  </data>
  <data name="FilterBySelectionAllDescription" xml:space="preserve">
    <value>テーブルは選択されているフィーチャと選択されていないフィーチャをすべて表示します</value>
  </data>
  <data name="FilterBySelectionNotSelected" xml:space="preserve">
    <value>テーブルに選択されていないフィーチャを表示</value>
  </data>
  <data name="FilterBySelectionNotSelectedDescription" xml:space="preserve">
    <value>テーブルをフィルタして、現在選択されていないフィーチャだけを表示します。</value>
  </data>
  <data name="FilterBySelectionSelected" xml:space="preserve">
    <value>テーブルに選択されているフィーチャを表示</value>
  </data>
  <data name="FilterBySelectionSelectedDescription" xml:space="preserve">
    <value>テーブルをフィルタして、現在選択されているフィーチャだけを表示します。</value>
  </data>
  <data name="FilterLayerDescription" xml:space="preserve">
    <value>属性の検索条件に基づいて、選択されているレイヤ内のフィーチャをフィルタします</value>
  </data>
  <data name="FilterLayerDisplayName" xml:space="preserve">
    <value>レイヤのフィルタ</value>
  </data>
  <data name="FindNearbyDescription" xml:space="preserve">
    <value>現在の選択セットの近くにあるフィーチャを検索します</value>
  </data>
  <data name="FindNearbyDisplayName" xml:space="preserve">
    <value>近傍検索</value>
  </data>
  <data name="GeoprocessingDescription" xml:space="preserve">
    <value>ArcGIS Server のジオプロセシング サービスを使用します</value>
  </data>
  <data name="GeoprocessingDisplayName" xml:space="preserve">
    <value>ジオプロセシング</value>
  </data>
  <data name="GoToLayerDescription" xml:space="preserve">
    <value>選択されているレイヤにズームします</value>
  </data>
  <data name="GoToLayerDisplayName" xml:space="preserve">
    <value>レイヤに移動</value>
  </data>
  <data name="IdentifyBehaviorDisplayName" xml:space="preserve">
    <value>個別属性表示</value>
  </data>
  <data name="MoveLayerDownDescription" xml:space="preserve">
    <value>レイヤの表示順序を 1 つ上に移動します</value>
  </data>
  <data name="MoveLayerDownDisplayName" xml:space="preserve">
    <value>上へ移動</value>
  </data>
  <data name="MoveLayerUpDescription" xml:space="preserve">
    <value>レイヤの表示順序を 1 つ下に移動します</value>
  </data>
  <data name="MoveLayerUpDisplayName" xml:space="preserve">
    <value>下へ移動</value>
  </data>
  <data name="NavigateToHelpLinkDescription" xml:space="preserve">
    <value>ヘルプ システムに移動します</value>
  </data>
  <data name="NavigateToHelpLinkDisplayName" xml:space="preserve">
    <value>ヘルプ リンクへ移動します</value>
  </data>
  <data name="PrintDescription" xml:space="preserve">
    <value>マップを印刷します</value>
  </data>
  <data name="PrintDisplayName" xml:space="preserve">
    <value>印刷</value>
  </data>
  <data name="RefreshLayerDescription" xml:space="preserve">
    <value>選択されているレイヤを更新します</value>
  </data>
  <data name="RefreshLayerDisplayName" xml:space="preserve">
    <value>レイヤを最新の情報に更新</value>
  </data>
  <data name="RenameLayerDescription" xml:space="preserve">
    <value>選択されているレイヤの名前を変更します</value>
  </data>
  <data name="RenameLayerDisplayName" xml:space="preserve">
    <value>レイヤ名の変更</value>
  </data>
  <data name="RestoreDefaultThemeDescription" xml:space="preserve">
    <value>マップで使用する色をデフォルトに戻します</value>
  </data>
  <data name="RestoreDefaultThemeDisplayName" xml:space="preserve">
    <value>テーマのリセット</value>
  </data>
  <data name="SelectAllDescription" xml:space="preserve">
    <value>現在のレイヤにあるすべてのフィーチャを選択します</value>
  </data>
  <data name="SelectAllDisplayName" xml:space="preserve">
    <value>すべて選択</value>
  </data>
  <data name="SelectByDrawDescription" xml:space="preserve">
    <value>マップにボックスを描画し、ボックスで囲まれたフィーチャを選択します</value>
  </data>
  <data name="SelectByDrawDisplayName" xml:space="preserve">
    <value>選択</value>
  </data>
  <data name="SelectedIndexOfTotal" xml:space="preserve">
    <value>{0}/{1}</value>
  </data>
  <data name="ServiceDetailsDescription" xml:space="preserve">
    <value>選択されているレイヤのサービス エンドポイントを開きます</value>
  </data>
  <data name="ServiceDetailsDisplayName" xml:space="preserve">
    <value>サービスの詳細</value>
  </data>
  <data name="ShowMapCoordinatesDescription" xml:space="preserve">
    <value>マウスをマップ上にホバーさせたときに座標を表示します</value>
  </data>
  <data name="ShowMapCoordinatesDisplayName" xml:space="preserve">
    <value>マップ座標の表示</value>
  </data>
  <data name="ShowPreviewControlDescription" xml:space="preserve">
    <value>テーマ色をマップの別のコンポーネントに適用した結果を示すダイアログを表示します。</value>
  </data>
  <data name="ShowPreviewControlDisplayName" xml:space="preserve">
    <value>テーマのプレビュー</value>
  </data>
  <data name="ToggleAddContentDescription" xml:space="preserve">
    <value>ArcGIS Server、SharePoint、Spatial Data Server、または GeoRSS のデータをマップに追加します</value>
  </data>
  <data name="ToggleAddContentDisplayName" xml:space="preserve">
    <value>コンテンツの追加</value>
  </data>
  <data name="ToggleEditDescription" xml:space="preserve">
    <value>編集ツールの表示/非表示を切り替えます</value>
  </data>
  <data name="ToggleEditDisplayName" xml:space="preserve">
    <value>編集</value>
  </data>
  <data name="ToggleFullScreenDescription" xml:space="preserve">
    <value>マップを全画面モードで表示します</value>
  </data>
  <data name="ToggleFullScreenDisplayName" xml:space="preserve">
    <value>全画面表示</value>
  </data>
  <data name="ToggleMapContentsDescription" xml:space="preserve">
    <value>マップ コンテンツ パネルの表示/非表示を切り替えます</value>
  </data>
  <data name="ToggleMapContentsDisplayName" xml:space="preserve">
    <value>マップ コンテンツ</value>
  </data>
  <data name="ToggleSearchDescription" xml:space="preserve">
    <value>場所または ArcGIS Server のサービスを検索します</value>
  </data>
  <data name="ToggleSearchDisplayName" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="ToggleTableDescription" xml:space="preserve">
    <value>選択されているレイヤの属性テーブルを開きます</value>
  </data>
  <data name="ToggleTableDisplayName" xml:space="preserve">
    <value>テーブルの表示</value>
  </data>
  <data name="ZoomToSelectionDescription" xml:space="preserve">
    <value>現在のレイヤの選択したフィーチャにズームします</value>
  </data>
  <data name="ZoomToSelectionDisplayName" xml:space="preserve">
    <value>ズーム</value>
  </data>
</root>