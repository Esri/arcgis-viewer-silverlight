<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutDescription" xml:space="preserve">
    <value>Zeigt den Dialog "Info"</value>
  </data>
  <data name="AboutDisplayName" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="AddGeoRssFeedDescription" xml:space="preserve">
    <value>GeoRSS-Feed zur Karte hinzufügen</value>
  </data>
  <data name="AddGeoRssFeedDisplayName" xml:space="preserve">
    <value>GeoRSS hinzufügen</value>
  </data>
  <data name="AddHeatMapDescription" xml:space="preserve">
    <value>Wärmebild zur Karte hinzufügen</value>
  </data>
  <data name="AddHeatMapDisplayName" xml:space="preserve">
    <value>Wärmebild hinzufügen</value>
  </data>
  <data name="BaseMapGalleryDescription" xml:space="preserve">
    <value>Grundkarte für Ihre Karte auswählen</value>
  </data>
  <data name="BaseMapGalleryDisplayName" xml:space="preserve">
    <value>Grundkarte auswählen</value>
  </data>
  <data name="BrowseDescription" xml:space="preserve">
    <value>Der Karte durch Navigieren zu einem ArcGIS-Server-Endpunkt Daten hinzufügen </value>
  </data>
  <data name="BrowseDisplayName" xml:space="preserve">
    <value>Durchsuchen</value>
  </data>
  <data name="CategoryApplication" xml:space="preserve">
    <value>Anwendung</value>
  </data>
  <data name="CategoryAttributeTable" xml:space="preserve">
    <value>Attributtabelle</value>
  </data>
  <data name="CategoryConfigure" xml:space="preserve">
    <value>Konfigurieren</value>
  </data>
  <data name="CategoryEditing" xml:space="preserve">
    <value>Bearbeitung</value>
  </data>
  <data name="CategoryGeoprocessing" xml:space="preserve">
    <value>Geoverarbeitung</value>
  </data>
  <data name="CategoryLayer" xml:space="preserve">
    <value>Layer</value>
  </data>
  <data name="CategoryMap" xml:space="preserve">
    <value>Karte</value>
  </data>
  <data name="CategoryMouseEvents" xml:space="preserve">
    <value>Mausereignisse</value>
  </data>
  <data name="CategoryPopup" xml:space="preserve">
    <value>Pop-up</value>
  </data>
  <data name="CategorySelection" xml:space="preserve">
    <value>Auswahl</value>
  </data>
  <data name="CategorySymbology" xml:space="preserve">
    <value>Symbologie</value>
  </data>
  <data name="CategoryTheme" xml:space="preserve">
    <value>Design</value>
  </data>
  <data name="ChangeThemeBackgroundDescription" xml:space="preserve">
    <value>Hintergrund eines Designs ändern</value>
  </data>
  <data name="ChangeThemeBackgroundDisplayName" xml:space="preserve">
    <value>Designhintergrund ändern</value>
  </data>
  <data name="ClearSelectionDescription" xml:space="preserve">
    <value>Hebt die Auswahl vom aktuellen Layer auf</value>
  </data>
  <data name="ClearSelectionDisplayName" xml:space="preserve">
    <value>Auswahl aufheben</value>
  </data>
  <data name="ConfigureLayerDescription" xml:space="preserve">
    <value>Aussehen und Verhalten des ausgewählten Layers festlegen</value>
  </data>
  <data name="ConfigureLayerDisplayName" xml:space="preserve">
    <value>Layer konfigurieren</value>
  </data>
  <data name="ConfigureLayerRendererDescription" xml:space="preserve">
    <value>Lässt die Konfiguration des Renderers für den aktuellen Layer zu</value>
  </data>
  <data name="ConfigureLayerRendererDisplayName" xml:space="preserve">
    <value>Symbologie konfigurieren</value>
  </data>
  <data name="ConfigureSelectedLayerDescription" xml:space="preserve">
    <value>Lässt die Konfiguration des ausgewählten Layers zu</value>
  </data>
  <data name="ConfigureSelectedLayerDisplayName" xml:space="preserve">
    <value>Layer konfigurieren</value>
  </data>
  <data name="DeleteGraphicToolDescription" xml:space="preserve">
    <value>Feature aus dem Layer entfernen</value>
  </data>
  <data name="DeleteGraphicToolDisplayName" xml:space="preserve">
    <value>Feature löschen</value>
  </data>
  <data name="DeleteLayerDescription" xml:space="preserve">
    <value>Entfernt den ausgewählten Layer aus der Karte</value>
  </data>
  <data name="DeleteLayerDisplayName" xml:space="preserve">
    <value>Layer entfernen</value>
  </data>
  <data name="EditShapeToolDescription" xml:space="preserve">
    <value>Geometrie des Features ändern</value>
  </data>
  <data name="EditShapeToolDisplayName" xml:space="preserve">
    <value>Shape bearbeiten</value>
  </data>
  <data name="EditValuesToolDescription" xml:space="preserve">
    <value>Attributwerte des Features ändern</value>
  </data>
  <data name="EditValuesToolDisplayName" xml:space="preserve">
    <value>Werte bearbeiten</value>
  </data>
  <data name="AddAttachmentsToolDescription" xml:space="preserve">
    <value>Dem Feature eine Anlage hinzufügen</value>
  </data>
  <data name="AddAttachmentsToolDisplayName" xml:space="preserve">
    <value>Anlage hinzufügen</value>
  </data>
  <data name="ExceptionNoValidApplicationContextForApplication" xml:space="preserve">
    <value>Kein gültiger Anwendungskontext für diese Anwendung</value>
  </data>
  <data name="ExportSelectionDescription" xml:space="preserve">
    <value>Die Attribute der ausgewählten Features im aktuellen Layer in eine CSV-Datei exportieren</value>
  </data>
  <data name="ExportSelectionDisplayName" xml:space="preserve">
    <value>Auswahl exportieren</value>
  </data>
  <data name="FilterByMapExtentDescription" xml:space="preserve">
    <value>Nur Datensätze für Features innerhalb der aktuellen Kartenausdehnung anzeigen</value>
  </data>
  <data name="FilterByMapExtentName" xml:space="preserve">
    <value>Nach Kartenausdehnung filtern</value>
  </data>
  <data name="FilterBySelectionAll" xml:space="preserve">
    <value>Alle in der Tabelle anzeigen</value>
  </data>
  <data name="FilterBySelectionAllDescription" xml:space="preserve">
    <value>In der Tabelle werden ausgewählte und nicht ausgewählte Features angezeigt.</value>
  </data>
  <data name="FilterBySelectionNotSelected" xml:space="preserve">
    <value>Nicht ausgewählte in der Tabelle anzeigen</value>
  </data>
  <data name="FilterBySelectionNotSelectedDescription" xml:space="preserve">
    <value>Filtert die Tabelle zur Anzeige von Features, die aktuell nicht ausgewählt sind.</value>
  </data>
  <data name="FilterBySelectionSelected" xml:space="preserve">
    <value>Ausgewählte in der Tabelle anzeigen</value>
  </data>
  <data name="FilterBySelectionSelectedDescription" xml:space="preserve">
    <value>Filtert die Tabelle zur Anzeige von ausgewählten Features.</value>
  </data>
  <data name="FilterLayerDescription" xml:space="preserve">
    <value>Filtert die Features im ausgewählten Layer basierend auf einer Attributabfrage</value>
  </data>
  <data name="FilterLayerDisplayName" xml:space="preserve">
    <value>Layer filtern</value>
  </data>
  <data name="FindNearbyDescription" xml:space="preserve">
    <value>Nach Features in der Nähe der aktuellen Auswahl suchen</value>
  </data>
  <data name="FindNearbyDisplayName" xml:space="preserve">
    <value>Nahe gelegene Orte suchen</value>
  </data>
  <data name="GeoprocessingDescription" xml:space="preserve">
    <value>Ein Werkzeug, das einen Geoverarbeitungs-Service von einem ArcGIS-Server verwendet</value>
  </data>
  <data name="GeoprocessingDisplayName" xml:space="preserve">
    <value>Geoverarbeitung</value>
  </data>
  <data name="GoToLayerDescription" xml:space="preserve">
    <value>Auf den ausgewählten Layer zoomen</value>
  </data>
  <data name="GoToLayerDisplayName" xml:space="preserve">
    <value>Gehe zu Layer</value>
  </data>
  <data name="IdentifyBehaviorDisplayName" xml:space="preserve">
    <value>Identifizieren</value>
  </data>
  <data name="MoveLayerDownDescription" xml:space="preserve">
    <value>Verschiebt den Layer in der Darstellungsreihenfolge der Karte um eine Position nach oben</value>
  </data>
  <data name="MoveLayerDownDisplayName" xml:space="preserve">
    <value>Nach oben verschieben</value>
  </data>
  <data name="MoveLayerUpDescription" xml:space="preserve">
    <value>Verschiebt den Layer in der Darstellungsreihenfolge der Karte um eine Position nach unten</value>
  </data>
  <data name="MoveLayerUpDisplayName" xml:space="preserve">
    <value>Nach unten verschieben</value>
  </data>
  <data name="NavigateToHelpLinkDescription" xml:space="preserve">
    <value>Navigiert zum Hilfesystem</value>
  </data>
  <data name="NavigateToHelpLinkDisplayName" xml:space="preserve">
    <value>Link 'Zur Hilfe navigieren'</value>
  </data>
  <data name="PrintDescription" xml:space="preserve">
    <value>Karte drucken</value>
  </data>
  <data name="PrintDisplayName" xml:space="preserve">
    <value>Drucken</value>
  </data>
  <data name="RefreshLayerDescription" xml:space="preserve">
    <value>Aktualisiert den ausgewählten Layer</value>
  </data>
  <data name="RefreshLayerDisplayName" xml:space="preserve">
    <value>Layer aktualisieren</value>
  </data>
  <data name="RenameLayerDescription" xml:space="preserve">
    <value>Ausgewählten Layer umbenennen</value>
  </data>
  <data name="RenameLayerDisplayName" xml:space="preserve">
    <value>Layer umbenennen</value>
  </data>
  <data name="RestoreDefaultThemeDescription" xml:space="preserve">
    <value>Setzt die in der Karte verwendeten Farben auf die Standardeinstellungen zurück</value>
  </data>
  <data name="RestoreDefaultThemeDisplayName" xml:space="preserve">
    <value>Design zurücksetzen</value>
  </data>
  <data name="SelectAllDescription" xml:space="preserve">
    <value>Alle Features im aktuellen Layer auswählen</value>
  </data>
  <data name="SelectAllDisplayName" xml:space="preserve">
    <value>Alles auswählen</value>
  </data>
  <data name="SelectByDrawDescription" xml:space="preserve">
    <value>Features durch Zeichnen einer Box um die Features in der Karte auswählen</value>
  </data>
  <data name="SelectByDrawDisplayName" xml:space="preserve">
    <value>Auswählen</value>
  </data>
  <data name="SelectedIndexOfTotal" xml:space="preserve">
    <value>{0} von {1}</value>
  </data>
  <data name="ServiceDetailsDescription" xml:space="preserve">
    <value>Service-Endpunkt auf den ausgewählten Layer öffnen</value>
  </data>
  <data name="ServiceDetailsDisplayName" xml:space="preserve">
    <value>Service-Details</value>
  </data>
  <data name="ShowMapCoordinatesDescription" xml:space="preserve">
    <value>Zeigt Koordinaten an, wenn der Mauszeiger über die Karte bewegt wird</value>
  </data>
  <data name="ShowMapCoordinatesDisplayName" xml:space="preserve">
    <value>Kartenkoordinaten anzeigen</value>
  </data>
  <data name="ShowPreviewControlDescription" xml:space="preserve">
    <value>Einen Dialog anzeigen, der die Darstellung von Designfarben zeigt, wenn sie auf verschiedene Komponenten der Karte angewendet werden.</value>
  </data>
  <data name="ShowPreviewControlDisplayName" xml:space="preserve">
    <value>Designvorschau</value>
  </data>
  <data name="ToggleAddContentDescription" xml:space="preserve">
    <value>Daten von ArcGIS-Server, SharePoint, Spatial Data Server oder GeoRSS zu Ihrer Karte hinzufügen</value>
  </data>
  <data name="ToggleAddContentDisplayName" xml:space="preserve">
    <value>Inhalt hinzufügen</value>
  </data>
  <data name="ToggleEditDescription" xml:space="preserve">
    <value>Bearbeitungswerkzeuge ein- oder ausblenden</value>
  </data>
  <data name="ToggleEditDisplayName" xml:space="preserve">
    <value>Bearbeitung</value>
  </data>
  <data name="ToggleFullScreenDescription" xml:space="preserve">
    <value>Zeigt die Karte im Vollbildmodus an</value>
  </data>
  <data name="ToggleFullScreenDisplayName" xml:space="preserve">
    <value>Vollbild</value>
  </data>
  <data name="ToggleMapContentsDescription" xml:space="preserve">
    <value>Fenster "Karteninhalt" öffnen, um die Layer der Karte anzuzeigen</value>
  </data>
  <data name="ToggleMapContentsDisplayName" xml:space="preserve">
    <value>Karteninhalt</value>
  </data>
  <data name="ToggleSearchDescription" xml:space="preserve">
    <value>Nach Orten oder ArcGIS-Server-Services suchen</value>
  </data>
  <data name="ToggleSearchDisplayName" xml:space="preserve">
    <value>Suchen</value>
  </data>
  <data name="ToggleTableDescription" xml:space="preserve">
    <value>Attributtabelle für den ausgewählten Layer öffnen</value>
  </data>
  <data name="ToggleTableDisplayName" xml:space="preserve">
    <value>Tabelle anzeigen</value>
  </data>
  <data name="ZoomToSelectionDescription" xml:space="preserve">
    <value>Auf die ausgewählten Features im aktuellen Layer zoomen</value>
  </data>
  <data name="ZoomToSelectionDisplayName" xml:space="preserve">
    <value>Zoomen auf</value>
  </data>
</root>