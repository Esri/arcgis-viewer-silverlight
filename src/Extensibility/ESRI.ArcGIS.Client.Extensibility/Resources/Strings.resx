<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutDescription" xml:space="preserve">
    <value>Shows the About dialog</value>
  </data>
  <data name="AboutDisplayName" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AddGeoRssFeedDescription" xml:space="preserve">
    <value>Add a GeoRSS feed to the map</value>
  </data>
  <data name="AddGeoRssFeedDisplayName" xml:space="preserve">
    <value>Add GeoRSS</value>
  </data>
  <data name="AddHeatMapDescription" xml:space="preserve">
    <value>Add a Heat Map to the map</value>
  </data>
  <data name="AddHeatMapDisplayName" xml:space="preserve">
    <value>Add Heat Map</value>
  </data>
  <data name="BaseMapGalleryDescription" xml:space="preserve">
    <value>Choose a basemap for your map</value>
  </data>
  <data name="BaseMapGalleryDisplayName" xml:space="preserve">
    <value>Choose Basemap</value>
  </data>
  <data name="BrowseDescription" xml:space="preserve">
    <value>Add data to the map by browsing to an ArcGIS Server endpoint </value>
  </data>
  <data name="BrowseDisplayName" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="CategoryApplication" xml:space="preserve">
    <value>Application</value>
  </data>
  <data name="CategoryAttributeTable" xml:space="preserve">
    <value>Attribute Table</value>
  </data>
  <data name="CategoryConfigure" xml:space="preserve">
    <value>Configure</value>
  </data>
  <data name="CategoryEditing" xml:space="preserve">
    <value>Editing</value>
  </data>
  <data name="CategoryGeoprocessing" xml:space="preserve">
    <value>Geoprocessing</value>
  </data>
  <data name="CategoryLayer" xml:space="preserve">
    <value>Layer</value>
  </data>
  <data name="CategoryMap" xml:space="preserve">
    <value>Map</value>
  </data>
  <data name="CategoryMouseEvents" xml:space="preserve">
    <value>Mouse Events</value>
  </data>
  <data name="CategoryPopup" xml:space="preserve">
    <value>Popup</value>
  </data>
  <data name="CategorySelection" xml:space="preserve">
    <value>Selection</value>
  </data>
  <data name="CategorySymbology" xml:space="preserve">
    <value>Symbology</value>
  </data>
  <data name="CategoryTheme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="ChangeThemeBackgroundDescription" xml:space="preserve">
    <value>Change the background for a theme</value>
  </data>
  <data name="ChangeThemeBackgroundDisplayName" xml:space="preserve">
    <value>Change Theme Background</value>
  </data>
  <data name="ClearSelectionDescription" xml:space="preserve">
    <value>Clears the selection from the current layer</value>
  </data>
  <data name="ClearSelectionDisplayName" xml:space="preserve">
    <value>Clear Selection</value>
  </data>
  <data name="ConfigureLayerDescription" xml:space="preserve">
    <value>Specify the appearance and behavior of the selected layer</value>
  </data>
  <data name="ConfigureLayerDisplayName" xml:space="preserve">
    <value>Configure Layer</value>
  </data>
  <data name="ConfigureLayerRendererDescription" xml:space="preserve">
    <value>Allows configuration of the renderer for the current layer</value>
  </data>
  <data name="ConfigureLayerRendererDisplayName" xml:space="preserve">
    <value>Configure symbology</value>
  </data>
  <data name="ConfigureSelectedLayerDescription" xml:space="preserve">
    <value>Allows configuration of the selected layer</value>
  </data>
  <data name="ConfigureSelectedLayerDisplayName" xml:space="preserve">
    <value>Configure layer</value>
  </data>
  <data name="DeleteGraphicToolDescription" xml:space="preserve">
    <value>Remove the feature from the layer</value>
  </data>
  <data name="DeleteGraphicToolDisplayName" xml:space="preserve">
    <value>Delete Feature</value>
  </data>
  <data name="DeleteLayerDescription" xml:space="preserve">
    <value>Removes the selected layer from the map</value>
  </data>
  <data name="DeleteLayerDisplayName" xml:space="preserve">
    <value>Remove Layer</value>
  </data>
  <data name="EditShapeToolDescription" xml:space="preserve">
    <value>Modify the feature's geometry</value>
  </data>
  <data name="EditShapeToolDisplayName" xml:space="preserve">
    <value>Edit Shape</value>
  </data>
  <data name="EditValuesToolDescription" xml:space="preserve">
    <value>Modify the feature's attribute values</value>
  </data>
  <data name="EditValuesToolDisplayName" xml:space="preserve">
    <value>Edit Values</value>
  </data>
  <data name="AddAttachmentsToolDescription" xml:space="preserve">
    <value>Add an attachment to the feature</value>
  </data>
  <data name="AddAttachmentsToolDisplayName" xml:space="preserve">
    <value>Add Attachment</value>
  </data>
  <data name="ExceptionNoValidApplicationContextForApplication" xml:space="preserve">
    <value>No Valid Application Context for this application</value>
  </data>
  <data name="ExportSelectionDescription" xml:space="preserve">
    <value>Export the attrbutes of the selected features in the curent layer to a CSV file</value>
  </data>
  <data name="ExportSelectionDisplayName" xml:space="preserve">
    <value>Export Selection</value>
  </data>
  <data name="FilterByMapExtentDescription" xml:space="preserve">
    <value>Only show records for the features within the current map extent</value>
  </data>
  <data name="FilterByMapExtentName" xml:space="preserve">
    <value>Filter by Map Extent</value>
  </data>
  <data name="FilterBySelectionAll" xml:space="preserve">
    <value>Table Show All</value>
  </data>
  <data name="FilterBySelectionAllDescription" xml:space="preserve">
    <value>Table will display features selected and not selected</value>
  </data>
  <data name="FilterBySelectionNotSelected" xml:space="preserve">
    <value>Table Show Not Selected</value>
  </data>
  <data name="FilterBySelectionNotSelectedDescription" xml:space="preserve">
    <value>Filters Table to show only features not currently selected.</value>
  </data>
  <data name="FilterBySelectionSelected" xml:space="preserve">
    <value>Table Show Selected</value>
  </data>
  <data name="FilterBySelectionSelectedDescription" xml:space="preserve">
    <value>Filters Table to show only features that are selected.</value>
  </data>
  <data name="FilterLayerDescription" xml:space="preserve">
    <value>Filters the features in the selected layer based on an attribute query</value>
  </data>
  <data name="FilterLayerDisplayName" xml:space="preserve">
    <value>Filter Layer</value>
  </data>
  <data name="FindNearbyDescription" xml:space="preserve">
    <value>Find features near the current selection</value>
  </data>
  <data name="FindNearbyDisplayName" xml:space="preserve">
    <value>Find Nearby</value>
  </data>
  <data name="GeoprocessingDescription" xml:space="preserve">
    <value>A tool that uses an ArcGIS Server Geoprocessing Service</value>
  </data>
  <data name="GeoprocessingDisplayName" xml:space="preserve">
    <value>Geoprocessing</value>
  </data>
  <data name="GoToLayerDescription" xml:space="preserve">
    <value>Zoom to the selected layer</value>
  </data>
  <data name="GoToLayerDisplayName" xml:space="preserve">
    <value>Go To Layer</value>
  </data>
  <data name="IdentifyBehaviorDisplayName" xml:space="preserve">
    <value>Identify Behavior</value>
  </data>
  <data name="MoveLayerDownDescription" xml:space="preserve">
    <value>Moves the layer's display order one position closer to the top of the map</value>
  </data>
  <data name="MoveLayerDownDisplayName" xml:space="preserve">
    <value>Move Up</value>
  </data>
  <data name="MoveLayerUpDescription" xml:space="preserve">
    <value>Moves the layer's display order one position closer to the bottom of the map</value>
  </data>
  <data name="MoveLayerUpDisplayName" xml:space="preserve">
    <value>Move Down</value>
  </data>
  <data name="NavigateToHelpLinkDescription" xml:space="preserve">
    <value>Navigates to the help system</value>
  </data>
  <data name="NavigateToHelpLinkDisplayName" xml:space="preserve">
    <value>Navigate to help link</value>
  </data>
  <data name="PrintDescription" xml:space="preserve">
    <value>Print the map</value>
  </data>
  <data name="PrintDisplayName" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="RefreshLayerDescription" xml:space="preserve">
    <value>Refreshes the selected layer</value>
  </data>
  <data name="RefreshLayerDisplayName" xml:space="preserve">
    <value>Refresh Layer</value>
  </data>
  <data name="RenameLayerDescription" xml:space="preserve">
    <value>Rename the selected layer</value>
  </data>
  <data name="RenameLayerDisplayName" xml:space="preserve">
    <value>Rename Layer</value>
  </data>
  <data name="RestoreDefaultThemeDescription" xml:space="preserve">
    <value>Restores the colors used by the map to the default</value>
  </data>
  <data name="RestoreDefaultThemeDisplayName" xml:space="preserve">
    <value>Reset Theme</value>
  </data>
  <data name="SelectAllDescription" xml:space="preserve">
    <value>Select all the features in the current layer</value>
  </data>
  <data name="SelectAllDisplayName" xml:space="preserve">
    <value>Select All</value>
  </data>
  <data name="SelectByDrawDescription" xml:space="preserve">
    <value>Select features by drawing a box around them in the map</value>
  </data>
  <data name="SelectByDrawDisplayName" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="SelectedIndexOfTotal" xml:space="preserve">
    <value>{0} of {1}</value>
  </data>
  <data name="ServiceDetailsDescription" xml:space="preserve">
    <value>Open the service endpoint for the selected layer</value>
  </data>
  <data name="ServiceDetailsDisplayName" xml:space="preserve">
    <value>Service Details</value>
  </data>
  <data name="ShowMapCoordinatesDescription" xml:space="preserve">
    <value>Displays coordinates as the mouse hovers over the map</value>
  </data>
  <data name="ShowMapCoordinatesDisplayName" xml:space="preserve">
    <value>Show Map Coordinates</value>
  </data>
  <data name="ShowPreviewControlDescription" xml:space="preserve">
    <value>Display a dialog that demonstrates how theme colors appear when applied to different components of the map</value>
  </data>
  <data name="ShowPreviewControlDisplayName" xml:space="preserve">
    <value>Preview Theme</value>
  </data>
  <data name="ToggleAddContentDescription" xml:space="preserve">
    <value>Add ArcGIS Server, SharePoint, Spatial Data Server, or GeoRSS data to your map</value>
  </data>
  <data name="ToggleAddContentDisplayName" xml:space="preserve">
    <value>Add Content</value>
  </data>
  <data name="ToggleEditDescription" xml:space="preserve">
    <value>Show or hide the editing tools</value>
  </data>
  <data name="ToggleEditDisplayName" xml:space="preserve">
    <value>Editing</value>
  </data>
  <data name="ToggleFullScreenDescription" xml:space="preserve">
    <value>Displays the map in full screen mode</value>
  </data>
  <data name="ToggleFullScreenDisplayName" xml:space="preserve">
    <value>Full Screen</value>
  </data>
  <data name="ToggleMapContentsDescription" xml:space="preserve">
    <value>Open the Map Contents panel to view the map's layers</value>
  </data>
  <data name="ToggleMapContentsDisplayName" xml:space="preserve">
    <value>Map Contents</value>
  </data>
  <data name="ToggleSearchDescription" xml:space="preserve">
    <value>Search for places or ArcGIS Server services</value>
  </data>
  <data name="ToggleSearchDisplayName" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="ToggleTableDescription" xml:space="preserve">
    <value>Opens the attribute table for the selected layer</value>
  </data>
  <data name="ToggleTableDisplayName" xml:space="preserve">
    <value>Show Table</value>
  </data>
  <data name="ZoomToSelectionDescription" xml:space="preserve">
    <value>Zoom to the selected features in the current layer</value>
  </data>
  <data name="ZoomToSelectionDisplayName" xml:space="preserve">
    <value>Zoom To</value>
  </data>
</root>